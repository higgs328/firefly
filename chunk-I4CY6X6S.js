import{a as m}from"./chunk-3JGYBNJA.js";import{a as d}from"./chunk-G4DZJMGT.js";import{a as u}from"./chunk-BAEF3CT6.js";import{f as n}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e}from"./chunk-NFIPKH6V.js";import{l as s}from"./chunk-5QEXLALV.js";import{e as a}from"./chunk-P6QFA5MM.js";import{g as l}from"./chunk-XRGPJ3QY.js";var i=class extends m.ClonableMixin(n){constructor(){super(...arguments),this.showLegend=null,this.title=null}};t([e({type:Boolean,json:{write:!0}})],i.prototype,"showLegend",void 0),t([e({type:String,json:{write:!0}})],i.prototype,"title",void 0),i=t([s("esri.renderers.visualVariables.support.VisualVariableLegendOptions")],i);var f=i;var p=new u({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"}),r=class extends n{constructor(o){super(o),this.index=null,this.type=null,this.field=null,this.valueExpression=null,this.valueExpressionTitle=null,this.legendOptions=null}castField(o){return o==null?o:typeof o=="function"?(l.getLogger(this).error(".field: field must be a string value"),null):a(o)}get arcadeRequired(){return!!this.valueExpression}clone(){}getAttributeHash(){return`${this.type}-${this.field}-${this.valueExpression}`}};t([e()],r.prototype,"index",void 0),t([e({type:p.apiValues,readOnly:!0,json:{read:p.read,write:{writer:p.write,isRequired:!0}}})],r.prototype,"type",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"field",void 0),t([d("field")],r.prototype,"castField",null),t([e({type:String,json:{write:!0}})],r.prototype,"valueExpression",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"valueExpressionTitle",void 0),t([e({readOnly:!0})],r.prototype,"arcadeRequired",null),t([e({type:f,json:{write:!0}})],r.prototype,"legendOptions",void 0),r=t([s("esri.renderers.visualVariables.VisualVariable")],r);var F=r;export{f as a,F as b};
