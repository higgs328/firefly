import{a as v}from"./chunk-BMYVPMAK.js";import{c as N,d as f,e as A,g as l}from"./chunk-5LG2P6MT.js";import{F as M,n as m}from"./chunk-GJ2QRXGN.js";import{h as F,i as I,j as S,k as Z}from"./chunk-SP2CO3KX.js";import{a as x}from"./chunk-E7AX56GD.js";import{C as d,i as c}from"./chunk-KVM6SHDX.js";import{a as b}from"./chunk-7F5DJLJT.js";import{B as y}from"./chunk-MYO4NP2N.js";import{a as u}from"./chunk-QBWJMFH5.js";function B(){return u("curve-densification-coarse-segments")}function z(){return u("curve-densification-max-segments")}function C(){return u("curve-densification-min-segments")}function V(){return u("curve-densification-pixels-per-segment")}var j=class{constructor(e,s,n){this.uid=e,this.geometry=s,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null}};function st(t){return t.geometry!=null}var k=class{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}};function nt(t,e){let s=v.fromJSON(t.geometryType),n=b.fromJSON(t.spatialReference),r=t.transform,o=t.objectIdFieldName,R=e?.maxStringAttributeLength,P=e?.maxStringAttributeFields,p,w=t.features.map(h=>{let a=O(h,s,n,t.objectIdFieldName),i=a.geometry;if(L(a.attributes,P,R,D=>{p??=[];let g=J(a,o);g!=null&&p.push({objectId:g,attribute:D})}),i!=null&&r)switch(i.type){case"point":a.geometry=I(r,i,i);break;case"multipoint":a.geometry=F(r,i,i);break;case"polygon":a.geometry=S(r,i,i);break;case"polyline":a.geometry=Z(r,i,i);break;case"extent":case"mesh":a.geometry=i}return a});return{geometryType:s,features:w,spatialReference:n,fields:t.fields?.map(h=>x.fromJSON(h))??[],objectIdFieldName:t.objectIdFieldName,globalIdFieldName:t.globalIdFieldName,geohashFieldName:t.geohashFieldName,geometryProperties:t.geometryProperties,hasZ:t.hasZ,hasM:t.hasM,exceededTransferLimit:t.exceededTransferLimit,transform:null,missingAttributes:p}}function O(t,e,s,n){return{uid:y(),objectId:n&&t.attributes?t.attributes[n]:null,attributes:t.attributes,geometry:T(t.geometry,e,s),visible:!0}}function T(t,e,s){if(t==null)return null;switch(e){case"point":{let n=t;return{x:n.x,y:n.y,z:n.z,m:n.m,hasZ:n.z!=null,hasM:n.m!=null,type:"point",spatialReference:s}}case"polyline":{let n=t;return{paths:n.paths,hasZ:!!n.hasZ,hasM:!!n.hasM,type:"polyline",spatialReference:s}}case"polygon":{let n=t;return{rings:n.rings,hasZ:!!n.hasZ,hasM:!!n.hasM,type:"polygon",spatialReference:s}}case"multipoint":{let n=t;return{points:n.points,hasZ:!!n.hasZ,hasM:!!n.hasM,type:"multipoint",spatialReference:s}}}}function q(t){if(t==null)return 0;switch(t.type){case"point":return l+10+8+24;case"polyline":case"polygon":{let e=0,s=2+(t.hasZ?1:0)+(t.hasM?1:0),n=t.type==="polyline"?t.paths:t.rings;if((t.type==="polyline"?t.curvePaths:t.curveRings)?.length){let o=3*z()*128;e=8*o*s+128*o+32*(n.length+1)}else e=f(n);return l+64+e+34}case"multipoint":{let e=f(t.points);return l+e+64+34+32}case"extent":return l+10+64+34;case"mesh":{let e=t.vertexAttributes;return l+A(e.position,e.normal,e.uv,e.tangent)}default:return l}}function rt(t){let e=32;return e+=N(t.attributes),e+=3,e+=8+q(t.geometry),e}function it(t){if(t==null)return 0;switch(t.type){case"point":return 1;case"polyline":{let e=0;for(let s of t.paths)e+=s.length;return e}case"polygon":{let e=0;for(let s of t.rings)e+=s.length;return e}case"multipoint":return t.points.length;case"extent":return 2;case"mesh":{let e=t.vertexAttributes&&t.vertexAttributes.position;return e?e.length/3:0}default:return}}function at(t){if(t==null)return!1;switch(t.type){case"extent":case"point":return!0;case"polyline":for(let e of t.paths)if(e.length>0)return!0;return!1;case"polygon":for(let e of t.rings)if(e.length>0)return!0;return!1;case"multipoint":return t.points.length>0;case"mesh":return!t.loaded||t.vertexAttributes.position.length>0}}function ot(t,e){switch(M(e),t.type==="mesh"&&(t=t.extent),t.type){case"point":e[0]=e[3]=t.x,e[1]=e[4]=t.y,t.hasZ&&(e[2]=e[5]=t.z);break;case"polyline":for(let s=0;s<t.paths.length;s++)m(e,t.paths[s],!!t.hasZ);break;case"polygon":for(let s=0;s<t.rings.length;s++)m(e,t.rings[s],!!t.hasZ);break;case"multipoint":m(e,t.points,!!t.hasZ);break;case"extent":e[0]=t.xmin,e[1]=t.ymin,e[3]=t.xmax,e[4]=t.ymax,t.zmin!=null&&(e[2]=t.zmin),t.zmax!=null&&(e[5]=t.zmax)}}function lt(t,e){switch(d(e),t.type==="mesh"&&(t=t.extent),t.type){case"point":e[0]=e[2]=t.x,e[1]=e[3]=t.y;break;case"polyline":for(let s=0;s<t.paths.length;s++)c(e,t.paths[s]);break;case"polygon":for(let s=0;s<t.rings.length;s++)c(e,t.rings[s]);break;case"multipoint":c(e,t.points);break;case"extent":e[0]=t.xmin,e[1]=t.ymin,e[2]=t.xmax,e[3]=t.ymax}}function J(t,e){return t.objectId!=null?t.objectId:t.attributes&&e?t.attributes[e]:null}function L(t,e,s,n){if(e?.size&&s!=null&&t)for(let r in t){if(!e.has(r))continue;let o=t[r];typeof o=="string"&&o.length>s&&(n(r),t[r]="")}}export{B as a,z as b,C as c,V as d,j as e,st as f,k as g,nt as h,q as i,rt as j,it as k,at as l,ot as m,lt as n,J as o,L as p};
