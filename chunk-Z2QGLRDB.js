import{a as l}from"./chunk-7IDFDPA3.js";import{a as c}from"./chunk-VL2YL74P.js";import{a as y}from"./chunk-3JGYBNJA.js";import{a as m}from"./chunk-G4DZJMGT.js";import{f as u}from"./chunk-CCJU4DSH.js";import{a as r}from"./chunk-QGVBCWUY.js";import{e as a}from"./chunk-NFIPKH6V.js";import{l as p}from"./chunk-5QEXLALV.js";import{y as n}from"./chunk-QBWJMFH5.js";var o=class extends y.ClonableMixin(u){constructor(t){super(t),this.description=null,this.label=null,this.symbol=null,this.values=null}castValues(t){if(t==null)return null;let e=typeof(t=Array.isArray(t)?t:[t])[0];return e==="string"||e==="number"?t.map(s=>new l({value:s})):e==="object"?t[0]instanceof l?t:t.map(s=>new l(s)):null}};r([a({type:String,json:{write:!0}})],o.prototype,"description",void 0),r([a({type:String,json:{write:!0}})],o.prototype,"label",void 0),r([a(c)],o.prototype,"symbol",void 0),r([a({type:[l],json:{type:[[String]],read:{reader:t=>t?t.map(e=>new l({value:e[0],value2:e[1],value3:e[2]})):null},write:{writer:(t,e)=>{let s=[];for(let i of t){let f=[i.value,i.value2,i.value3].filter(n).map(v=>v.toString());s.push(f)}e.values=s}}}})],o.prototype,"values",void 0),r([m("values")],o.prototype,"castValues",null),o=r([p("esri.renderers.support.UniqueValueClass")],o);var C=o;export{C as a};
