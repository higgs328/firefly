import{a as B}from"./chunk-RUR3FBR3.js";import{a as b}from"./chunk-6LW5LY2X.js";import{a as l}from"./chunk-DKGGDYJI.js";import{a as f}from"./chunk-IR6XCBC4.js";import{a as u}from"./chunk-4N4D2YQX.js";import{a as c,j as y}from"./chunk-TG45K3WR.js";import{b as d}from"./chunk-ACP3S2CH.js";import{a as e}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l as h}from"./chunk-5QEXLALV.js";import{y as m}from"./chunk-4PTIEWMT.js";import{b as n}from"./chunk-YOFFGXOB.js";import{g as p}from"./chunk-XRGPJ3QY.js";import{f as i}from"./chunk-VTHXE323.js";var g=d.ofType(b),s=class extends f.LoadableMixin(u.EsriPromiseMixin(B)){constructor(t){super(t),this._lastPortalBasemapFetchController=null,this.basemaps=new g,this.filterFunction=null,this.portal=l.getDefault(),this.query=null,this.updateBasemapsCallback=null,this.viewType=null}initialize(){this.addHandles(c(()=>[this.filterFunction,this.loadStatus,this.portal?.basemapGalleryGroupQuery,this.portal?.basemapGalleryGroupQuery3D,this.portal?.user,this.query,this.updateBasemapsCallback],()=>this.refresh(),y))}destroy(){this.filterFunction=null,this.portal=null,this.basemaps.forEach(t=>t.destroy())}get state(){return this.loadStatus==="not-loaded"?"not-loaded":this.loadStatus==="loading"||this._lastPortalBasemapFetchController?"loading":"ready"}load(t){return this.addResolvingPromise(this.portal.load(t)),Promise.resolve(this)}refresh(){return i(this,null,function*(){if(this.loadStatus!=="loaded")return;this._lastPortalBasemapFetchController&&(this._lastPortalBasemapFetchController.abort(),this._lastPortalBasemapFetchController=null);let t=this.portal,a=new AbortController;this._lastPortalBasemapFetchController=a,this.notifyChange("state");try{let o=yield t.fetchBasemaps(this._toQueryString(this.query),{signal:a.signal,include3d:this.viewType==="3d"||void 0});yield this._updateBasemaps(o)}catch(o){if(m(o))throw o;p.getLogger(this).warn(new n("basemap-source:fetch-basemaps-error","Could not fetch basemaps from portal.",{error:o})),yield this._updateBasemaps()}this._lastPortalBasemapFetchController=null,this.notifyChange("state")})}_toQueryString(t){return t&&typeof t!="string"?Object.keys(t).map(a=>`${a}:${t[a]}`).join(" AND "):t}_updateBasemaps(){return i(this,arguments,function*(t=[]){let a=yield this._filterBasemaps(t);a=this.updateBasemapsCallback?yield this.updateBasemapsCallback(a):a,this.basemaps.removeAll(),this.basemaps.addMany(a)})}_filterBasemaps(t){return i(this,null,function*(){if(!this.filterFunction)return t;let a=t.map(this.filterFunction),o=yield Promise.all(a);return t.filter((C,w)=>o[w])})}};e([r({readOnly:!0,type:g})],s.prototype,"basemaps",void 0),e([r()],s.prototype,"filterFunction",void 0),e([r({type:l})],s.prototype,"portal",void 0),e([r()],s.prototype,"query",void 0),e([r({readOnly:!0})],s.prototype,"state",null),e([r()],s.prototype,"updateBasemapsCallback",void 0),e([r()],s.prototype,"viewType",void 0),s=e([h("esri.widgets.BasemapGallery.support.PortalBasemapsSource")],s);var O=s;export{O as a};
