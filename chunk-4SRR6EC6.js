import{b as V}from"./chunk-BR4IP6B4.js";import{b as L}from"./chunk-ZWHAEUE3.js";import{a as P}from"./chunk-E56W4PK4.js";import{a as q}from"./chunk-4PTIEWMT.js";var E=1,B=[.299,.587,.114];function D(s,n=256){n=Math.min(n,256);let{size:m,counts:h}=s,o=new Uint8Array(m),c=h.reduce((e,f)=>e+f/n,0),u=0,a=0,l=0,x=c;for(let e=0;e<m;e++)if(l+=h[e],!(e<m-1&&l+h[e+1]<x)){for(;u<n-1&&x<l;)u++,x+=c;for(let f=a;f<=e;f++)o[f]=u;a=e+1}for(let e=a;e<m;e++)o[e]=n-1;return o}function Q(s){let{minCutOff:n,maxCutOff:m,gamma:h,pixelType:o,rounding:c}=s;if(!["u8","u16","s8","s16"].includes(o))return null;let u=n.length,a=o==="s8"?-127:o==="s16"?-32767:0,l=["u16","s16"].includes(o)?65536:256,x=[],e=[],{minOutput:f=0,maxOutput:k=255}=s,b=k-f;for(let p=0;p<u;p++)e[p]=m[p]-n[p],x[p]=e[p]===0?0:b/e[p];let M=[];if(h&&h.length>=u){let p=H(u,h);for(let v=0;v<u;v++){let t=[];for(let i=0;i<l;i++){if(e[v]===0){t[i]=f;continue}let O=i+a,C=(O-n[v])/e[v],U=1;if(h[v]>1&&(U-=(1/b)**(C*p[v])),O<m[v]&&O>n[v]){let A=U*b*C**(1/h[v])+f;t[i]=c==="floor"?Math.floor(A):c==="round"?Math.round(A):A}else O>=m[v]?t[i]=k:t[i]=f}M[v]=t}}else for(let p=0;p<u;p++){let v=[];for(let t=0;t<l;t++){let i=t+a;if(i<=n[p])v[t]=f;else if(i>=m[p])v[t]=k;else{let O=(i-n[p])*x[p]+f;v[t]=c==="floor"?Math.floor(O):c==="round"?Math.round(O):O}}M[p]=v}if(s.contrastOffset!=null){let p=F(s.contrastOffset,s.brightnessOffset);for(let v=0;v<u;v++){let t=M[v];for(let i=0;i<l;i++)t[i]=p[t[i]]}}return{lut:M,offset:a}}function F(s,n){let m=Math.min(Math.max(s,-100),100),h=Math.min(Math.max(n??0,-100),100),o=255,c=128,u=new Uint8Array(256);for(let a=0;a<256;a++){let l=0;m>0&&m<100?l=(200*a-100*o+2*o*h)/(2*(100-m))+c:m<=0&&m>-100?l=(200*a-100*o+2*o*h)*(100+m)/2e4+c:m===100?(l=200*a-100*o+(o+1)*(100-m)+2*o*h,l=l>0?o:0):m===-100&&(l=c),u[a]=l>o?o:l<0?0:l}return u}function X(s,n,m){let h=[];for(let o=0;o<n.length;o++){let c=0,u=0,a=0;"min"in n[o]?{min:c,max:u,avg:a}=n[o]:[c,u,a]=n[o];let l=a??0;s!=="u8"&&(l=255*(l-c)/(u-c)),m&&(l*=B[o]),h.push(I(l))}return h}function I(s){if(s<=0||s>=255)return E;let n=255,m=s+(s===150?0:s<150?45*Math.cos(.01047*s):17*Math.sin(.021*s)),h=Math.log(s/n),o=Math.log(m/n);if(o===0)return E;let c=h/o;return isNaN(c)?E:Math.min(9.9,Math.max(.01,c))}function G(s,n,m,h){let o=1/0,c=-1/0,u=0,a=0,l=0,x=0,e=s.length,f=new Map,k=[];for(let r=0;r<e;r++){let g=s[r];if(!n||n[r]){k.push(g);let d=(f.get(g)??0)+1;f.set(g,d),d>x&&(x=d,l=g),o=g<o?g:o,c=g>c?g:c,u+=g,a++}}if(a===0)return{statistics:{min:0,max:0,avg:0,stddev:0,mode:0,median:0},histogram:null};let b=u/a,M=0;for(let r=0;r<e;r++)n&&!n[r]||(M+=(s[r]-b)**2);let p=n?n.filter(r=>r).length:e,v=p<=1?0:Math.sqrt(M/(p-1));k.sort((r,g)=>r-g);let t=a>>>1,i={min:o,max:c,avg:b,stddev:v,mode:l,median:a%2?k[Math.floor(t)]:(k[t-1]+k[t])/2};if(["u8","s8","u4","u2","u1"].includes(m)){let r=c-o+1,g=new Uint32Array(r);for(let d=0;d<e;d++)n&&!n[d]||g[s[d]-o]++;return{statistics:i,histogram:{min:o-.5,max:c+.5,size:r,counts:g}}}let O=256,C=new Uint32Array(O),U=(c-o)/O;if(U===0)return{statistics:i,histogram:{min:o,max:c,size:1,counts:new Uint32Array(1).fill(a)}};let A=new Uint32Array(O+1);for(let r=0;r<e;r++)n&&!n[r]||A[Math.floor((s[r]-o)/U)]++;for(let r=0;r<O-1;r++)C[r]=A[r];return C[O-1]=A[O-1]+A[O],{statistics:i,histogram:{min:o,max:c,size:O,counts:C}}}function Y(s){let{pixels:n,mask:m,pixelType:h,bandMasks:o}=s,c=n.map((u,a)=>G(u,o?.[a]??m,h));return{statistics:c.map(({statistics:u})=>u),histograms:c.map(({histogram:u})=>u)}}function N(s){if(!s?.pixels?.length)return null;let{pixels:n,mask:m,bandMasks:h,pixelType:o}=s,c=s.width*s.height,u=n.length,a=[],l=[],x=256,e,f;for(let k=0;k<u;k++){let b=new Uint32Array(x),M=n[k],p=h?.[k]??m;if(o==="u8"){if(e=255,f=0,p){for(let y=0;y<c;y++)if(p[y]){let w=M[y];e=w<e?w:e,f=w>f?w:f,b[w]++}}else for(let y=0;y<c;y++){let w=M[y];e=w<e?w:e,f=w>f?w:f,b[w]++}b=b.slice(e,f+1)}else{let y=!1;s.statistics||(s.updateStatistics(),y=!0);let w=s.statistics;e=w[k].minValue,f=w[k].maxValue;let S=(f-e)/x;if(S===0){!w||s.validPixelCount||y||s.updateStatistics();let T=(s.validPixelCount||s.width*s.height)/x;for(let z=0;z<x;z++)b[z]=Math.round(T*(z+1))-Math.round(T*z)}else{let T=new Uint32Array(x+1);for(let z=0;z<c;z++)p&&!p[z]||T[Math.floor((M[z]-e)/S)]++;for(let z=0;z<x-1;z++)b[z]=T[z];b[x-1]=T[x-1]+T[x]}}let v=o==="u8"?e-.5:e,t=o==="u8"?f+.5:f;a.push({min:v,max:t,size:b.length,counts:b});let i=0,O=0,C=0;for(let y=0;y<b.length;y++)i+=b[y],O+=y*b[y];let U=O/i;for(let y=0;y<b.length;y++)C+=b[y]*(y-U)**2;let A=Math.sqrt(C/(i-1)),r=(t-v)/b.length,g=(U+(o==="u8"?0:.5))*r+e,d=A*r;l.push({min:e,max:f,avg:g,stddev:d})}return{statistics:l,histograms:a}}function Z(s){let n=[];for(let m=0;m<s.length;m++){let{min:h,max:o,size:c,counts:u}=s[m],a=0,l=0;for(let M=0;M<c;M++)a+=u[M],l+=M*u[M];let x=l/a,e=0;for(let M=0;M<c;M++)e+=u[M]*(M-x)**2;let f=(o-h)/c,k=(x+.5)*f+h,b=Math.sqrt(e/(a-1))*f;n.push({min:h,max:o,avg:k,stddev:b})}return n}function _(s,n){let{pixelBlock:m,bandIds:h,returnHistogramLut:o,rasterInfo:c}=n,u=null,a=null,l=s.stretchType;if(typeof l=="number"&&(l=V[l]),s.dra)if(l==="minMax"&&m?.statistics)u=m.statistics.map(t=>[t.minValue,t.maxValue,0,0]);else{let t=N(m);u=t!=null?t.statistics:null,a=t!=null?t.histograms:null}else u=s.statistics?.length?s.statistics:c.statistics,a="histograms"in s?s.histograms:void 0,a||(a=c.histograms);l!=="percentClip"&&l!=="histogramEqualization"||a?.length||(l="minMax");let x=u?.length||a?.length||c.bandCount,e=[],f=[];u&&!Array.isArray(u[0])&&(u=u.map(t=>[t.min,t.max,t.avg,t.stddev]));let[k,b]=P(c.pixelType);if(!u?.length){u=[];for(let t=0;t<x;t++)u.push([k,b,1,1]);l==="standardDeviation"&&(l="minMax")}switch(l){case"none":for(let t=0;t<x;t++)e[t]=k,f[t]=b;break;case"minMax":for(let t=0;t<x;t++){let i=u[t];e[t]=i[0],f[t]=i[1]}break;case"standardDeviation":{let{numberOfStandardDeviations:t=2}=s;for(let i=0;i<x;i++){let O=u[i];e[i]=O[2]-t*O[3],f[i]=O[2]+t*O[3],e[i]<O[0]&&(e[i]=O[0]),f[i]>O[1]&&(f[i]=O[1])}}break;case"histogramEqualization":q(a);for(let t=0;t<x;t++)e[t]=a[t].min,f[t]=a[t].max;break;case"percentClip":q(a);for(let t=0;t<a.length;t++){let i=a[t],O=new Uint32Array(i.size),C=[...i.counts];C.length>=20&&(C[0]=C[1]=C[2]=C[C.length-1]=C[C.length-2]=0);let U=0,A=(i.max-i.min)/i.size,r=i.min===-.5&&A===1?.5:0;for(let d=0;d<i.size;d++)U+=C[d],O[d]=U;let g=(s.minPercent||0)*U/100;e[t]=i.min+r;for(let d=0;d<i.size;d++)if(O[d]>g){e[t]=i.min+A*(d+r);break}g=(1-(s.maxPercent||0)/100)*U,f[t]=i.max+r;for(let d=i.size-2;d>=0;d--)if(O[d]<g){f[t]=i.min+A*(d+2-r);break}if(f[t]<e[t]){let d=e[t];e[t]=f[t],f[t]=d}}break;default:for(let t=0;t<x;t++){let i=u[t];e[t]=i[0],f[t]=i[1]}}let M,p,v;return l==="histogramEqualization"?(q(a),p=a[0].size||256,M=0,o&&(v=a.map(t=>D(t)))):(p=s.max||255,M=s.min||0),R({minCutOff:e,maxCutOff:f,maxOutput:p,minOutput:M,histogramLut:v},h)}function R(s,n){if(n==null||n.length===0)return s;let m=Math.max.apply(null,n),{minCutOff:h,maxCutOff:o,minOutput:c,maxOutput:u,histogramLut:a}=s;return h.length===n.length||h.length<=m?s:{minCutOff:n.map(l=>h[l]),maxCutOff:n.map(l=>o[l]),histogramLut:a?n.map(l=>a[l]):null,minOutput:c,maxOutput:u}}function H(s,n){let m=new Float32Array(s);for(let h=0;h<s;h++)n[h]>1?n[h]>2?m[h]=6.5+(n[h]-2)**2.5:m[h]=6.5+100*(2-n[h])**4:m[h]=1;return m}function $(s,n){if(!s?.pixels?.length)return s;let{mask:m,bandMasks:h,width:o,height:c,pixels:u}=s,{minCutOff:a,maxCutOff:l,minOutput:x,maxOutput:e,gamma:f}=n,k=o*c,b=n.outputPixelType||"u8",M=s.pixels.map(()=>L.createEmptyBand(b,k)),p=M.length,v=e-x,t=[],i=[];for(let r=0;r<p;r++)i[r]=l[r]-a[r],t[r]=i[r]===0?0:v/i[r];let O=b.startsWith("u")||b.startsWith("s"),C=f&&f.length>=p,U=!!n.isRenderer;if(C){let r=H(p,f);for(let g=0;g<p;g++){let d=h?.[g]??m;for(let y=0;y<k;y++)if(d==null||d[y]){if(i[g]===0){M[g][y]=x;continue}let w=u[g][y],S=(w-a[g])/i[g],T=1;if(f[g]>1&&(T-=(1/v)**(S*r[g])),w<l[g]&&w>a[g]){let z=T*v*S**(1/f[g])+x;M[g][y]=U?Math.floor(z):O?Math.round(z):z}else w>=l[g]?M[g][y]=e:M[g][y]=x}}}else for(let r=0;r<p;r++){let g=h?.[r]??m;for(let d=0;d<k;d++)if(g==null||g[d]){let y=u[r][d];if(y<l[r]&&y>a[r]){let w=(y-a[r])*t[r]+x;M[r][d]=U?Math.floor(w):O?Math.round(w):w}else y>=l[r]?M[r][d]=e:M[r][d]=x}}let A=new L({width:o,height:c,mask:m,bandMasks:h,pixels:M,pixelType:b});return A.updateStatistics(),A}export{D as a,Q as b,F as c,X as d,Y as e,N as f,Z as g,_ as h,H as i,$ as j};
