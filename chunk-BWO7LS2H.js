import{i as f}from"./chunk-VTHXE323.js";function a(r){let t=[];return function*(){yield*f(t);for(let e of r)t.push(e),yield e}}function l(r,t){for(let e of r)if(e!=null&&t(e))return e}function i(r){return r!=null&&typeof r[Symbol.iterator]=="function"}var n=class{constructor(){this._groups=new Map}destroy(){this.removeAll()}get size(){let t=0;return this._groups.forEach(e=>{t+=e.length}),t}add(t,e){if(i(t)){let o=this._getOrCreateGroup(e);for(let u of t)c(u)&&o.push(u)}else c(t)&&this._getOrCreateGroup(e).push(t);return this}forEach(t,e){if(typeof t=="function")this._groups.forEach(o=>o.forEach(t));else{let o=this._getGroup(t);o&&e&&o.forEach(e)}}has(t){return this._groups.has(s(t))}remove(t){if(typeof t!="string"&&i(t)){for(let e of t)this.remove(e);return this}return this.has(t)?(h(this._getGroup(t)),this._groups.delete(s(t)),this):this}removeAll(){return this._groups.forEach(h),this._groups.clear(),this}removeReference(t){return this._groups.delete(t),this}_getOrCreateGroup(t){if(this.has(t))return this._getGroup(t);let e=[];return this._groups.set(s(t),e),e}_getGroup(t){return this._groups.get(s(t))}};function s(r){return r||"_default_"}function h(r){for(let t of r)t instanceof n?t.removeAll():t.remove()}function c(r){return r!=null&&(!!r.remove||r instanceof n)}export{a,l as b,i as c,n as d};
