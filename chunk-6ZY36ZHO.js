import{a as S}from"./chunk-FJUYECJ6.js";import{a as g}from"./chunk-5ODXFRPI.js";import{a as b}from"./chunk-P2AJD2R2.js";import{a as f}from"./chunk-BPWNCOXC.js";import{a as d}from"./chunk-AVMO6LCR.js";import{a as u}from"./chunk-6F25LG6O.js";import{x as v}from"./chunk-KALOJIUA.js";import{a as y}from"./chunk-MIS6QMFE.js";import{f as c}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l}from"./chunk-5QEXLALV.js";import{b as o}from"./chunk-2LI2GKBQ.js";import{f as p}from"./chunk-VTHXE323.js";var m,a=m=class extends c{constructor(){super(...arguments),this.unit=null}clone(){return new m({unit:this.unit})}};t([r({type:String,json:{write:!0}})],a.prototype,"unit",void 0),a=m=t([l("esri.renderers.support.DotDensityLegendOptions")],a);var w=a;var h,e=h=class extends g(b){constructor(i){super(i),this.attributes=null,this.backgroundColor=new u([0,0,0,0]),this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new d,this.dotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}calculateDotValue(i){if(this.referenceScale==null)return this.dotValue;let s=i/this.referenceScale*this.dotValue;return s<1?1:s}getSymbol(){return new f({outline:this.outline})}getSymbolAsync(){return p(this,null,function*(){return this.getSymbol()})}get symbols(){return[this.getSymbol()]}getAttributeHash(){return this.attributes?.reduce((i,s)=>i+s.getAttributeHash(),"")??""}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new h({attributes:o(this.attributes),backgroundColor:o(this.backgroundColor),dotBlendingEnabled:o(this.dotBlendingEnabled),dotShape:o(this.dotShape),dotSize:o(this.dotSize),dotValue:o(this.dotValue),legendOptions:o(this.legendOptions),outline:o(this.outline),referenceScale:o(this.referenceScale),seed:o(this.seed),visualVariables:o(this.visualVariables),authoringInfo:o(this.authoringInfo)})}getControllerHash(){return`${this.attributes?.map(s=>s.field||s.valueExpression||"")}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}collectRequiredFields(i,s){return p(this,null,function*(){yield this.collectVVRequiredFields(i,s);for(let n of this.attributes??[])n.valueExpression&&(yield v(i,s,n.valueExpression)),n.field&&i.add(n.field)})}};t([r({type:[S],json:{write:!0}})],e.prototype,"attributes",void 0),t([r({type:u,json:{write:!0}})],e.prototype,"backgroundColor",void 0),t([r({type:Boolean,json:{write:!0}})],e.prototype,"dotBlendingEnabled",void 0),t([r({type:String,json:{write:!1}})],e.prototype,"dotShape",void 0),t([r({type:Number,json:{write:!0}})],e.prototype,"dotSize",void 0),t([r({type:w,json:{write:!0}})],e.prototype,"legendOptions",void 0),t([r({type:d,json:{default:null,write:!0}})],e.prototype,"outline",void 0),t([r({type:Number,json:{write:!0}})],e.prototype,"dotValue",void 0),t([r({type:Number,json:{write:!0}})],e.prototype,"referenceScale",void 0),t([r({type:Number,json:{write:!0}})],e.prototype,"seed",void 0),t([y({dotDensity:"dot-density"})],e.prototype,"type",void 0),e=h=t([l("esri.renderers.DotDensityRenderer")],e);var P=e;export{P as a};
