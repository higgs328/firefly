import{a as B}from"./chunk-YZJDOXQC.js";import{J as O,L as U}from"./chunk-7Y6S2GNA.js";import{a as k}from"./chunk-5ODXFRPI.js";import{a as $}from"./chunk-P2AJD2R2.js";import{a as H}from"./chunk-PMVHHMQJ.js";import{a as D}from"./chunk-6F25LG6O.js";import{d as F,e as N}from"./chunk-ZC6EBRE4.js";import{a as A}from"./chunk-ZAZJB7CV.js";import{x as z}from"./chunk-KALOJIUA.js";import{b as J,e as Z}from"./chunk-KMMTNF7G.js";import{a as q}from"./chunk-POX73EYJ.js";import{a as I}from"./chunk-CX5IFQZJ.js";import{o as V}from"./chunk-AUAZP44J.js";import{a as b}from"./chunk-QGVBCWUY.js";import{e as v}from"./chunk-NFIPKH6V.js";import{l as j}from"./chunk-5QEXLALV.js";import{y as C}from"./chunk-4PTIEWMT.js";import{b as T}from"./chunk-YOFFGXOB.js";import{g as P}from"./chunk-XRGPJ3QY.js";import{b as x}from"./chunk-2LI2GKBQ.js";import{a as E,b as L,f as w}from"./chunk-VTHXE323.js";var G="esri.renderers.support.DictionaryLoader",K={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}},S=class{constructor(e,o,i){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new q(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=e,this.config=o,this.fieldMap=i}getSymbolFields(){return this._symbolFields}getSymbolAsync(e,o){return w(this,null,function*(){let i;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(o));try{i=yield this._dictionaryPromise}catch(l){if(C(l))return this._dictionaryPromise=null,null}let p=this._dictionaryVersion?.greaterEqual(4,0),n={};if(this.fieldMap)for(let l of this._symbolFields){let a=U(this.fieldMap[l],this._fieldIndex);if(a){let t=e.attributes[a];n[l]=p?t:t!=null?""+e.attributes[a]:""}else n[l]=""}let r=null;try{r=i?.(n,o)}catch{return null}if(!r||typeof r!="string"||r==="invalid")return null;let m=r.split(";"),y=[],u=[];for(let l=0;l<m.length;l++){let a=m[l];if(a){if(a.includes("po:")){let t=a.slice(3).split("|");if(t.length===3){let d=t[0],g=t[1],c=t[2],M="countrylabel";if(d===M&&g==="TextString"){if(this.fieldMap!=null){let f=this.fieldMap[M];f==null&&(f=M,this.fieldMap[f]=f),e.attributes[f]=c}continue}if(g==="DashTemplate")c=c.split(" ").map(f=>Number(f));else if(g==="Color"){let f=new D(c).toRgba();c=[f[0],f[1],f[2],255*f[3]]}else c=Number(c);u.push({primitiveName:d,propertyName:g,value:c,defaultValue:null})}}else if(a.includes("|")){for(let t of a.split("|"))if(this._itemNames.has(t)){y.push(t);break}}else if(this._itemNames.has(a))y.push(a);else if(l===0){y.length=0;let t="Invalid_P";e.geometry!=null&&(N(e.geometry)?t="Invalid_A":F(e.geometry)&&(t="Invalid_L")),y.push(t);break}}}let _=e.geometry==null||!e.geometry.hasZ&&e.geometry.type==="point";return this._cimPartsToCIMSymbol(e,y,u,_,o)})}fetchResources(e){return w(this,null,function*(){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void P.getLogger(G).error("no valid URL!");let o=V(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:e!=null?e.signal:null}),[{data:i}]=yield Promise.all([o,J()]);if(!i)throw this._dictionaryPromise=null,new T("esri.renderers.DictionaryRenderer","Bad dictionary data!");let{authoringInfo:p,dictionary_version:n,expression:r,itemsNames:m}=i,y=r,u=!1;n&&(this._dictionaryVersion=B.parse(n),u=this._dictionaryVersion.greaterEqual(4,0)),this._refSymbolUrlTemplate=this.url+"/"+i.cimRefTemplateUrl,this._itemNames=new Set(m),this._symbolFields=p.symbol;let _={};if(this.config){let t=this.config;for(let d in t)_[d]=t[d]}if(p.configuration)for(let t of p.configuration)_.hasOwnProperty(t.name)||(_[t.name]=t.value);let l=[];if(e?.fields&&this.fieldMap)for(let t in this.fieldMap){let d=this.fieldMap[t],g=e.fields.filter(c=>c.name.toLowerCase()===d?.toLowerCase());g.length>0&&l.push(L(E({},g[0]),{type:u?g[0].type:"esriFieldTypeString"}))}l.length>0&&(this._fieldIndex=new A(l));let a=Z(y,e!=null?e.spatialReference:null,l,_).then(t=>{let d={scale:0};return(g,c)=>{if(t==null)return null;let M=t.repurposeFeature({geometry:null,attributes:g});return d.scale=c!=null?c.scale??void 0:void 0,t.evaluate({$feature:M,$view:d},t.services)}}).catch(t=>(P.getLogger(G).error("Creating dictionary expression failed:",t),null));return this._dictionaryPromise=a,a})}_cimPartsToCIMSymbol(e,o,i,p,n){return w(this,null,function*(){let r=new Array(o.length);for(let u=0;u<o.length;u++)r[u]=this._getSymbolPart(o[u],n);let m=yield Promise.all(r),y=this.fieldMap;if(y&&m.length>0){let{OverrideHelper:u}=yield import("./chunk-JYJ62C75.js");m=x(m);for(let _ of m)u.applyDictionaryTextOverrides(_,e,y,this._fieldIndex,O(_))}return new H({data:Q(m,i,p)})})}_getSymbolPart(e,o){return w(this,null,function*(){let i=this._symbolCache.get(e);if(i)return i;if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then(r=>r.data);let p=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,e),n=V(p,E({responseType:"json",query:{f:"json"}},o));this._ongoingRequests.set(e,n),n.finally(()=>this._ongoingRequests.delete(e));try{let r=yield n;return this._symbolCache.put(e,r.data),r.data}catch(r){throw r}})}};function Q(s,e,o){if(!s||s.length===0)return null;let i=E({},s[0]);if(s.length>1){i.effects=null,i.symbolLayers=[];for(let p of s){let n=p;if(n.effects!=null)for(let r of n.symbolLayers)r.effects==null?r.effects=n.effects:r.effects.unshift(...n.effects);i.symbolLayers.unshift(...n.symbolLayers)}}return o&&(i.callout=K),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:e}}var R,h=R=class extends k($){constructor(s){super(s),this.config=null,this.fieldMap=null,this.scaleExpression=null,this.scaleExpressionTitle=null,this.url=null,this.type="dictionary"}get _loader(){return new S(this.url,this.config,this.fieldMap)}writeData(s,e){s&&(e.scalingExpressionInfo={expression:s,returnType:"number"})}writeVisualVariables(s,e,o,i){i?.origin||super.writeVisualVariables(s,e,o,i)}clone(){return new R({config:x(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:x(this.fieldMap),url:x(this.url),visualVariables:x(this.visualVariables)})}getSymbolAsync(s,e){return w(this,null,function*(){return this._loader.getSymbolAsync(s,e)})}collectRequiredFields(s,e){return w(this,null,function*(){yield this.collectVVRequiredFields(s,e),this.scaleExpression&&(yield z(s,e,this.scaleExpression));for(let o in this.fieldMap){let i=this.fieldMap[o];e.has(i)&&s.add(i)}})}get arcadeRequired(){return!0}getSymbol(){return null}get symbols(){return[]}getAttributeHash(){return this.visualVariables?.reduce((s,e)=>s+e.getAttributeHash(),"")??""}getMeshHash(){return`${this.url}-${JSON.stringify(this.fieldMap)}`}getSymbolFields(){return this._loader.getSymbolFields()}};b([v({type:S})],h.prototype,"_loader",null),b([v({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],h.prototype,"config",void 0),b([v({type:Object,json:{write:!0}})],h.prototype,"fieldMap",void 0),b([v({type:String,json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],h.prototype,"scaleExpression",void 0),b([I("scaleExpression")],h.prototype,"writeData",null),b([v({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(s){return{enabled:!!s&&!!this.scaleExpression}}}}})],h.prototype,"scaleExpressionTitle",void 0),b([v({type:String,json:{write:!0}})],h.prototype,"url",void 0),b([I("visualVariables")],h.prototype,"writeVisualVariables",null),h=R=b([j("esri.renderers.DictionaryRenderer")],h);var Se=h;export{Se as a};
