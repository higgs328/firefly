import{a as V}from"./chunk-E5QCV5LT.js";import{c as m}from"./chunk-QS3EYJPF.js";import{a as p}from"./chunk-AIKKGGPG.js";import{a as u}from"./chunk-3IQFPOUU.js";import{b as k}from"./chunk-I4CY6X6S.js";import{m as E,u as c,x as I}from"./chunk-KALOJIUA.js";import{a as T}from"./chunk-PEW2PLAN.js";import{a as _}from"./chunk-CX5IFQZJ.js";import{a as z}from"./chunk-BAEF3CT6.js";import{a as o}from"./chunk-QGVBCWUY.js";import{H as w}from"./chunk-MYO4NP2N.js";import{e as l}from"./chunk-NFIPKH6V.js";import{f as x,l as n}from"./chunk-5QEXLALV.js";import{g as F}from"./chunk-XRGPJ3QY.js";import{f as g}from"./chunk-VTHXE323.js";var M={color:p,size:m,opacity:u,rotation:V},q=new z({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"}),N=/^\[([^\]]+)\]$/i,b=class extends w{constructor(){super(...arguments),this.colorVariables=null,this.opacityVariables=null,this.rotationVariables=null,this.sizeVariables=null}set visualVariables(e){if(this._resetVariables(),e=e?.filter(i=>!!i),e?.length){for(let i of e)switch(i.type){case"color":this.colorVariables.push(i);break;case"opacity":this.opacityVariables.push(i);break;case"rotation":this.rotationVariables.push(i);break;case"size":this.sizeVariables.push(i)}this.sizeVariables.length&&this.sizeVariables.some(i=>!!i.target)&&e.sort((i,a)=>{let s=null;return s=i.target===a.target?0:i.target?1:-1,s});for(let i=0;i<e.length;i++)e[i].index=i;this._set("visualVariables",e)}else this._set("visualVariables",e)}readVariables(e,i,a){let{rotationExpression:s,rotationType:t}=i,r=s?.match(N),y=r?.[1];if(y&&(e||(e=[]),e.push({type:"rotationInfo",rotationType:t,field:y})),e)return e.map(h=>{let f=q.read(h.type),v=M[f];v||(F.getLogger(this).warn(`Unknown variable type: ${f}`),a?.messages&&a.messages.push(new x("visual-variable:unsupported",`visualVariable of type '${f}' is not supported`,{definition:h,context:a})));let d=new v;return d.read(h,a),d})}writeVariables(e,i){let a=[];for(let s of e){let t=s.toJSON(i);t&&a.push(t)}return a}_resetVariables(){this.colorVariables=[],this.opacityVariables=[],this.rotationVariables=[],this.sizeVariables=[]}};o([l()],b.prototype,"visualVariables",null),b=o([n("esri.renderers.visualVariables.VisualVariableFactory")],b);var R=b;var $={base:k,key:"type",typeMap:{opacity:u,color:p,rotation:V,size:m}},ci=e=>{let i=class extends e{constructor(){super(...arguments),this._vvFactory=new R}set visualVariables(a){this._vvFactory.visualVariables=a,this._set("visualVariables",this._vvFactory.visualVariables)}readVisualVariables(a,s,t){return this._vvFactory.readVariables(a,s,t)}writeVisualVariables(a,s,t,r){s[t]=this._vvFactory.writeVariables(a,r)}get arcadeRequiredForVisualVariables(){return this.visualVariables?.some(({arcadeRequired:a})=>a)??!1}hasVisualVariables(a,s){return a?this.getVisualVariablesForType(a,s).length>0:this.getVisualVariablesForType("size",s).length>0||this.getVisualVariablesForType("color",s).length>0||this.getVisualVariablesForType("opacity",s).length>0||this.getVisualVariablesForType("rotation",s).length>0}getVisualVariablesForType(a,s){return this.visualVariables?.filter(t=>t.type===a&&(typeof s=="string"?t.target===s:s!==!1||!t.target))??[]}collectVVRequiredFields(a,s){return g(this,null,function*(){let t=[];this.visualVariables&&(t=t.concat(this.visualVariables));for(let r of t)r&&(r.field&&c(a,s,r.field),r.normalizationField&&c(a,s,r.normalizationField),r.valueExpression&&(J(r.valueExpression,a,s)||(yield I(a,s,r.valueExpression))))})}};return o([l({types:[$],value:null,json:{write:!0}})],i.prototype,"visualVariables",null),o([T("visualVariables",["visualVariables","rotationType","rotationExpression"])],i.prototype,"readVisualVariables",null),o([_("visualVariables")],i.prototype,"writeVisualVariables",null),i=o([n("esri.renderers.mixins.VisualVariablesMixin")],i),i};function J(e,i,a){let s=E(e);return s!=null&&(c(i,a,s),!0)}export{ci as a};
