import{a as w}from"./chunk-QETPWGTG.js";import{a as s}from"./chunk-G7KCDLNH.js";import{c as f}from"./chunk-BMYVPMAK.js";import{f as d,g as h}from"./chunk-ZC6EBRE4.js";import{a as c}from"./chunk-MDZTV2VL.js";import{a as g}from"./chunk-CELWVZPW.js";import{c as n}from"./chunk-VIEK2X23.js";import{a as u}from"./chunk-CX5IFQZJ.js";import{f as y}from"./chunk-CCJU4DSH.js";import{a as e}from"./chunk-QGVBCWUY.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l as m}from"./chunk-5QEXLALV.js";import{b as a}from"./chunk-2LI2GKBQ.js";var l,t=l=class extends y{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(i,r,p){i!=null&&(r.geometryType=h(i),r[p]=i.toJSON())}set locations(i){if(i?.length){let r=new c({spatialReference:i[0].spatialReference,points:i.map(({x:p,y:j})=>[p,j])});this._set("locations",i),this.geometry=r}}clone(){return new l(a({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};e([o({types:f,json:{read:d}})],t.prototype,"geometry",void 0),e([u("geometry")],t.prototype,"writeGeometry",null),e([o({type:[n]})],t.prototype,"locations",null),e([o({type:String,json:{type:s.jsonValues,read:s.read,write:s.write}})],t.prototype,"interpolation",void 0),e([o({type:w,json:{write:!0}})],t.prototype,"mosaicRule",void 0),e([o({type:[String],json:{write:!0}})],t.prototype,"outFields",void 0),e([o({type:n,json:{write:!0}})],t.prototype,"pixelSize",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"raster",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnFirstValueOnly",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"sampleDistance",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"sampleCount",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"sliceId",void 0),e([o({type:g,json:{read:{source:"time"},write:{target:"time"}}})],t.prototype,"timeExtent",void 0),t=l=e([m("esri.rest.support.ImageSampleParameters")],t);var T=t;export{T as a};
