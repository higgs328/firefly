import{a as C}from"./chunk-FJUYECJ6.js";import{a as x}from"./chunk-EHG7JRYJ.js";import{a as S}from"./chunk-5ODXFRPI.js";import{c as w}from"./chunk-QS3EYJPF.js";import{c as j}from"./chunk-VL2YL74P.js";import{a as b}from"./chunk-P2AJD2R2.js";import{a as v}from"./chunk-3IQFPOUU.js";import{b as g}from"./chunk-I4CY6X6S.js";import{a as c}from"./chunk-CZ6CGC7I.js";import{a as f}from"./chunk-AVMO6LCR.js";import{a as p}from"./chunk-6F25LG6O.js";import{a as m}from"./chunk-3JGYBNJA.js";import{x as F}from"./chunk-KALOJIUA.js";import{a as h}from"./chunk-MIS6QMFE.js";import{c as d}from"./chunk-OLOKUDVI.js";import{f as u}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e}from"./chunk-NFIPKH6V.js";import{l as a}from"./chunk-5QEXLALV.js";import{y}from"./chunk-QBWJMFH5.js";import{f as n}from"./chunk-VTHXE323.js";var i=class extends m.ClonableMixin(u){constructor(){super(...arguments),this.color=new p([0,0,0,0]),this.label=null,this.threshold=0}};t([e({type:p,json:{write:!0}})],i.prototype,"color",void 0),t([e({type:String,json:{write:!0}})],i.prototype,"label",void 0),t([e({type:Number,range:{min:0,max:1},json:{write:!0}})],i.prototype,"threshold",void 0),i=t([a("esri.renderers.support.OthersCategory")],i);var V={base:g,key:"type",typeMap:{size:w,opacity:v}},r=class extends S(m.ClonableMixin(b)){constructor(o){super(o),this.attributes=null,this.backgroundFillSymbol=null,this.defaultColor=new p([0,0,0,0]),this.defaultLabel=null,this.holePercentage=0,this.othersCategory=new i,this.legendOptions=null,this.outline=null,this.size=12,this.type="pie-chart",this.visualVariables=null}getSymbol(){return new c({size:this.size?this.size/2+(this.outline?.width||0):0})}getSymbolAsync(){return n(this,null,function*(){return this.getSymbol()})}get symbols(){return[this.getSymbol(),this.backgroundFillSymbol].filter(y)}getAttributeHash(){return this.visualVariables?.reduce((o,s)=>o+s.getAttributeHash(),"")??""}getMeshHash(){return this.symbols.reduce((o,s)=>o+JSON.stringify(s),"")}collectRequiredFields(o,s){return n(this,null,function*(){yield this.collectVVRequiredFields(o,s);for(let l of this.attributes)l.valueExpression&&(yield F(o,s,l.valueExpression)),l.field&&o.add(l.field)})}};t([e({type:[C],json:{write:!0}})],r.prototype,"attributes",void 0),t([e(j)],r.prototype,"backgroundFillSymbol",void 0),t([e({type:p,json:{write:!0}})],r.prototype,"defaultColor",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"defaultLabel",void 0),t([e({type:Number,range:{min:0,max:1},json:{write:!0}})],r.prototype,"holePercentage",void 0),t([e({type:i,json:{write:!0}})],r.prototype,"othersCategory",void 0),t([e({type:x,json:{write:!0}})],r.prototype,"legendOptions",void 0),t([e({type:f,json:{default:null,write:!0}})],r.prototype,"outline",void 0),t([e({type:Number,cast:d,json:{write:!0}})],r.prototype,"size",void 0),t([h({pieChart:"pie-chart"})],r.prototype,"type",void 0),t([e({types:[V]})],r.prototype,"visualVariables",void 0),r=t([a("esri.renderers.PieChartRenderer")],r);var pt=r;export{i as a,pt as b};
