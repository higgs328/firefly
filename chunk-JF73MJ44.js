import{a as l}from"./chunk-2HQALWZQ.js";import{a as r}from"./chunk-QGVBCWUY.js";import{e as t}from"./chunk-NFIPKH6V.js";var i=class{constructor(e){this.versionableItem=e,this.type="feature-layer"}get gdbVersion(){return this.versionableItem.gdbVersion}set gdbVersion(e){this.versionableItem.gdbVersion=e}get historicMoment(){return this.versionableItem.historicMoment}set historicMoment(e){this.versionableItem.historicMoment=e}get featureServiceUrl(){let e=/^(.*\/FeatureServer)\/\d+$/;return this.versionableItem.url.replace(e,"$1")}};r([t({readOnly:!0})],i.prototype,"type",void 0),r([t()],i.prototype,"gdbVersion",null),r([t({type:Date})],i.prototype,"historicMoment",null),r([t({readOnly:!0})],i.prototype,"featureServiceUrl",null);var s=class{constructor(e){this.versionableItem=e,this.type="network"}get gdbVersion(){return this.versionableItem.gdbVersion}set gdbVersion(e){this.versionableItem.gdbVersion=e}get historicMoment(){return this.versionableItem.historicMoment}set historicMoment(e){this.versionableItem.historicMoment=e}get featureServiceUrl(){return this.versionableItem.featureServiceUrl}};r([t({readOnly:!0})],s.prototype,"type",void 0),r([t()],s.prototype,"gdbVersion",null),r([t({type:Date})],s.prototype,"historicMoment",null),r([t({readOnly:!0})],s.prototype,"featureServiceUrl",null);var p=class{constructor(e){this.versionableItem=e,this.type="subtype-group-layer"}get gdbVersion(){return this.versionableItem.gdbVersion}set gdbVersion(e){this.versionableItem.gdbVersion=e}get historicMoment(){return this.versionableItem.historicMoment}set historicMoment(e){this.versionableItem.historicMoment=e}get featureServiceUrl(){let e=/^(.*\/FeatureServer)\/\d+$/;return this.versionableItem.url.replace(e,"$1")}};r([t({readOnly:!0})],p.prototype,"type",void 0),r([t()],p.prototype,"gdbVersion",null),r([t({type:Date})],p.prototype,"historicMoment",null),r([t({readOnly:!0})],p.prototype,"featureServiceUrl",null);function c(o){return"networkServiceUrl"in o?new s(o):o.type!=="feature"||l(o)?o.type!=="subtype-group"||l(o)?null:new p(o):new i(o)}function Q(o){let e=[];for(let a of o)if(a.type==="group"){let n=a,y=n.allTables.concat(n.allLayers);for(let m of y)if(m.type==="feature"||m.type==="subtype-group"){let u=c(m);u&&e.push(u)}}else{let n=c(a);n&&e.push(n)}return e}export{c as a,Q as b};
