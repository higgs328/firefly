import{a as A}from"./chunk-4IWNSJVE.js";import{q as _,x as j}from"./chunk-DA3SDKGO.js";import{h as l}from"./chunk-RNC4P66O.js";import{a as b}from"./chunk-PEW2PLAN.js";import{o as N}from"./chunk-AUAZP44J.js";import{a as R}from"./chunk-PVDFCTA4.js";import{f as m}from"./chunk-CCJU4DSH.js";import{c as J,i as O}from"./chunk-TG45K3WR.js";import{b as x}from"./chunk-ACP3S2CH.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as u}from"./chunk-NFIPKH6V.js";import{f,l as p}from"./chunk-5QEXLALV.js";import{b as w}from"./chunk-2LI2GKBQ.js";import{a as g,b as y,f as S}from"./chunk-VTHXE323.js";var c,h=c=class extends m.JSONSupportMixin(x.ofType(l)){constructor(e){super(e)}clone(){return new c(this.items.map(e=>e.clone()))}write(e,r){return this.toJSON(r)}toJSON(e){let r=e?.layer?.spatialReference;return r?this.toArray().map(t=>{if(!r.equals(t.spatialReference)){if(!_(t.spatialReference,r))return e?.messages?.push(new f("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;let n=new l;j(t,n,r),t=n}let s=t.toJSON(e);return delete s.spatialReference,s}).filter(t=>t!=null):(e?.messages?.push(new f("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(t=>t.toJSON(e)))}static fromJSON(e,r){let t=new c;return e.forEach(s=>t.add(l.fromJSON(s,r))),t}};h=c=o([p("esri.layers.support.PolygonCollection")],h);var a=h;var d,i=d=class extends m{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new a,this._geometriesSource=null}initialize(){this.addHandles(J(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,O))}readGeometries(e,r,t){Array.isArray(e)?this.geometries=a.fromJSON(e,t):this._geometriesSource={url:R(e,t),context:t}}loadGeometries(e,r){return S(this,null,function*(){if(this._geometriesSource==null)return;let{url:t,context:s}=this._geometriesSource,n=yield N(t,{responseType:"json",signal:r?.signal}),v=e.toJSON(),q=n.data.map(G=>y(g({},G),{spatialReference:v}));this.geometries=a.fromJSON(q,s),this._geometriesSource=null})}clone(){let e=new d({geometries:w(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};o([u({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],i.prototype,"spatialRelationship",void 0),o([u({type:a,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),A({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],i.prototype,"geometries",void 0),o([b(["web-scene","portal-item"],"geometries")],i.prototype,"readGeometries",null),i=d=o([p("esri.layers.support.SceneFilter")],i);var se=i;export{se as a};
