import{a as n,b as c,c as _,d as v}from"./chunk-SJQJMVOJ.js";import{a as l}from"./chunk-KQDXCPD7.js";import{a as r}from"./chunk-2JW3DUYT.js";import{d as i}from"./chunk-4JIR4MZV.js";import{a as s}from"./chunk-63BBKXWS.js";import{c as h}from"./chunk-VIEK2X23.js";import{a as d}from"./chunk-QGVBCWUY.js";import{l as p}from"./chunk-5QEXLALV.js";var m=Symbol("view-handles"),u=Symbol("undo-redo-handles"),a=class extends l{constructor(e){super(e),this._popVertexOnPointerMove=!1,this._addVertexOnPointerUp=!1}initialize(){this._addViewHandles(),this._addUndoRedoHandles()}destroy(){this._removeViewHandles(),this._removeUndoRedoHandles(),this.emit("destroy")}undo(){super.undo(),this.notifyChange("vertices")}redo(){super.redo(),this.notifyChange("vertices")}complete(){this._completeDrawing()}_addViewHandles(){this._removeViewHandles(),this.addHandles([this.view.on("click",e=>{e.stopPropagation()},i.TOOL),this.view.on("pointer-down",e=>{this._shouldHandlePointerEvent(e)&&(this._abortSnapping(),this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=s(e),e.pointerType==="touch"&&this._updateCursor())},i.TOOL),this.view.on("pointer-move",e=>{this._popVertexOnPointerMove&&(this.undo(),this._popVertexOnPointerMove=!1),this._abortSnapping(),this._cursorScreenPoint=s(e),e.pointerType!=="touch"&&this._updateCursor()},i.TOOL),this.view.on("pointer-drag",e=>{this._shouldHandlePointerEvent(e)&&(this._abortSnapping(),this._addVertexOnPointerUp=!1)},i.TOOL),this.view.on("pointer-up",e=>{if(this._shouldHandlePointerEvent(e))if(this._abortSnapping(),this._activePointerId=null,this._addVertexOnPointerUp)this._vertexAddHandler(e);else{let t=e.pointerType==="touch";this._updateCursor(t)}},i.TOOL),this.view.on("drag",["Shift"],e=>{e.stopPropagation()},i.TOOL),this.view.on("double-click",e=>{e.stopPropagation(),this._drawCompleteHandler(e)},i.TOOL),this.view.on("double-click",["Control"],e=>{e.stopPropagation(),this._drawCompleteHandler(e)},i.TOOL),this.view.on("key-down",e=>{let{key:t,repeat:o}=e;t===r.vertexAdd&&!o&&this._cursorScreenPoint?(e.stopPropagation(),this._abortSnapping(),this._vertexAddHandler(e)):t!==r.complete||o?t!==r.undo||this.interactiveUndoDisabled||o?t!==r.redo||this.interactiveUndoDisabled||o?t!==r.pan||o||e.stopPropagation():(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo()):(e.stopPropagation(),this._drawCompleteHandler(e))},i.TOOL),this.view.on("key-up",e=>{e.key===r.pan&&e.stopPropagation()},i.TOOL)],m)}_addUndoRedoHandles(){this._removeUndoRedoHandles(),this.addHandles([this._editGeometryOperations.on("vertex-remove",e=>{if(this.notifyChange("vertices"),e.operation==="undo"){let t=[...this._committedVertices];this._stagedVertex!=null&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("undo",new c(this.view,e.vertices[0].index,t))}}),this._editGeometryOperations.on("vertex-add",e=>{if(this.notifyChange("vertices"),e.operation==="apply"){let t=this._committedVertices.length-1,o=new n(this.view,t,this.vertices);this.emit("vertex-add",o),o.defaultPrevented&&(this._popVertexOnPointerMove=!0)}else if(e.operation==="redo"){let t=[...this._committedVertices];this._stagedVertex!=null&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("redo",new n(this.view,e.vertices[0].index,t))}})],u)}_removeViewHandles(){this.removeHandles(m)}_removeUndoRedoHandles(){this.removeHandles(u)}_addVertex(e){let t=this._coordinateHelper.arrayToVector(e);this._isDuplicateOfLastVertex(t)||this._editGeometryOperations.appendVertex(t)}_updateCursor(e=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;let t=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);t==null||e||this._pushCursorVertex(t.vertex,()=>this.emit("cursor-update",new _(this.view,this._activeComponent.vertices.length,this.vertices,this._stagedVertex!=null?new h(this._stagedVertex):null)))}_completeDrawing(){if(this._activePointerId=null,this._popCursorVertex(),this._abortSnapping(),this._snappingManager!=null&&this._snappingManager.doneSnapping(),this.vertices.length<1)return;let e=new v(this.vertices);this.emit("draw-complete",e),e.defaultPrevented||this._removeViewHandles()}};a=d([p("esri.views.draw.MultipointDrawAction")],a);var b=a;export{b as a};
