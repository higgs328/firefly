import{p as d,q as h}from"./chunk-YZ3FJXNI.js";import{N as s,Q as m,U as b,h as u,i as x}from"./chunk-XXEY6HOD.js";import{a as g}from"./chunk-LAX5536Z.js";import{f}from"./chunk-ZC6EBRE4.js";import{h as l}from"./chunk-RNC4P66O.js";import{b as y}from"./chunk-YOFFGXOB.js";function c(a,r,t){let n=a.toLowerCase(),o=r.toLowerCase()===n,e=t?.toLowerCase()===n;return b(o,e)}function T(a){return a==="point"||a==="polygon"||a==="polyline"}function V(a,r,t){return T(a.geometryType)&&a.fields.filter(({name:n,type:o,alias:e})=>c(t?.length?t:x,n,e)||c(r?.length?r:u,n,e)&&o==="blob").length===2}function E(a){return a.type==="feature"&&w(a)}function w(a){return a.geometryType==="point"||a.geometryType==="polygon"||a.geometryType==="polyline"}function M(a,r,t){if(!a)return;let{renderer:n}=a,o=d(r),e=n?"symbol"in n?n.symbol:"defaultSymbol"in n?n.defaultSymbol:n.getSymbol():null,i=o(e?.color);t[`${r}Symbol`]=(r===a.geometryType?e:null)??i}function J(a,r,t){let n=a.fields.find(({name:e,alias:i,type:p})=>c(r?.length?r:u,e,i)&&p==="blob"),o=a.fields.find(({name:e,alias:i})=>c(t?.length?t:x,e,i));if(!n||!o)throw new y("invalid-data-capture-layer","Data capture layer is not configured correctly.",{layer:a,imageGeometryField:n,oiObjectIdField:o});return{imageGeometryField:n,oiObjectIdField:o}}function N(a,r,t,n,o,e,i){let p=F(a,r);if(!p)throw new y("InvalidGeometry");return p=G(p,e,o),new g({attributes:a,layer:t,symbol:h(p.type,t.geometryType,i),geometry:p,visible:t.visible&&n})}function F(a,r){let{geometry:t}=JSON.parse(atob(a[r]));return f(t)}function A(a,r,t){switch(r){case"default":return I(a);case"panoramic":return S(a,t)}}function I(a){switch(a.type){case"point":a.x+=.5,a.y=.5-a.y;break;case"polyline":a.paths=a.paths.map(r=>r.map(([t,n])=>[t+.5,.5-n]));break;case"polygon":a.rings=a.rings.map(r=>r.map(([t,n])=>[t+.5,.5-n]));break;case"multipoint":a.points=a.points.map(([r,t])=>[r+.5,.5-t]);break;case"extent":a.xmin+=.5,a.xmax+=.5,a.ymin=.5-a.ymin,a.ymax=.5-a.ymax}return a}function S(a,r){switch(a.type){case"point":{let{x:t,y:n}=s(a,r[0],r[1]);a.x=t,a.y=n,delete a.z;break}case"polyline":a.paths=a.paths.map(t=>t.map(n=>{let{x:o,y:e}=s({x:n[0],y:n[1],z:n[2]},r[0],r[1]);return[o,e]}));break;case"polygon":a.rings=a.rings.map(t=>t.map(n=>{let{x:o,y:e}=s({x:n[0],y:n[1],z:n[2]},r[0],r[1]);return[o,e]}));break;case"multipoint":a.points=a.points.map(t=>{let{x:n,y:o}=s({x:t[0],y:t[1],z:t[2]},r[0],r[1]);return[n,o]});break;case"extent":{let{xmin:t,xmax:n,ymin:o,ymax:e}=S(l.fromExtent(a),r).extent;a.xmax=n,a.xmin=t,a.ymax=e,a.ymin=o;break}}return a}function G(a,r,t){switch(r){case"default":return L(a);case"panoramic":return k(a,t)}}function L(a){switch(a.type){case"point":a.x-=.5,a.y=.5-a.y;break;case"polyline":a.paths=a.paths.map(r=>r.map(([t,n])=>[t-.5,.5-n]));break;case"polygon":a.rings=a.rings.map(r=>r.map(([t,n])=>[t-.5,.5-n]));break;case"multipoint":a.points=a.points.map(([r,t])=>[r-.5,.5-t]);break;case"extent":a.xmin-=.5,a.xmax-=.5,a.ymin=.5-a.ymin,a.ymax=.5-a.ymax}return a}function k(a,r){switch(a.type){case"point":{let[t,n,o]=m(a,r[0],r[1]);a.x=t,a.y=n,a.z=o;break}case"polyline":a.paths=a.paths.map(t=>t.map(n=>{let[o,e,i]=m({x:n[0],y:n[1]},r[0],r[1]);return[o,e,i]}));break;case"polygon":a.rings=a.rings.map(t=>t.map(n=>{let[o,e,i]=m({x:n[0],y:n[1]},r[0],r[1]);return[o,e,i]}));break;case"multipoint":a.points=a.points.map(t=>{let[n,o,e]=m({x:t[0],y:t[1]},r[0],r[1]);return[n,o,e]});break;case"extent":{let{xmin:t,xmax:n,ymin:o,ymax:e}=k(l.fromExtent(a),r).extent;a.xmax=n,a.xmin=t,a.ymax=e,a.ymin=o}}return a}export{V as a,E as b,M as c,J as d,N as e,A as f};
