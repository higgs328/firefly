import{a as M}from"./chunk-IXHKDLZL.js";import{c as T,d as q,e as A,g as B}from"./chunk-GYQWYHEG.js";import{b as L}from"./chunk-JC4DQSN3.js";import{c as w}from"./chunk-QS3EYJPF.js";import{a as f}from"./chunk-HJJZ2AXH.js";import{a as $}from"./chunk-GNEAU6X4.js";import{b as v}from"./chunk-OLOKUDVI.js";import{b as u}from"./chunk-YOFFGXOB.js";import{a as d,b as E,c as b,f as y}from"./chunk-VTHXE323.js";var k=1e8,N=1128.497176,P=591657527591555e-6,R=[10,8,4,2],F=[100,100,60,30],G=[2,1,.75,.5],H=[32,18,12,6],I=[{level:0,resolution:156543.03392800014,scale:591657527591555e-6},{level:1,resolution:78271.51696399994,scale:295828763795777e-6},{level:2,resolution:39135.75848200009,scale:147914381897889e-6},{level:3,resolution:19567.87924099992,scale:73957190948944e-6},{level:4,resolution:9783.93962049996,scale:36978595474472e-6},{level:5,resolution:4891.96981024998,scale:18489297737236e-6},{level:6,resolution:2445.98490512499,scale:9244648868618e-6},{level:7,resolution:1222.992452562495,scale:4622324434309e-6},{level:8,resolution:611.4962262813797,scale:2311162217155e-6},{level:9,resolution:305.74811314055756,scale:1155581108577e-6},{level:10,resolution:152.87405657041106,scale:577790.554289},{level:11,resolution:76.43702828507324,scale:288895.277144},{level:12,resolution:38.21851414253662,scale:144447.638572},{level:13,resolution:19.10925707126831,scale:72223.819286},{level:14,resolution:9.554628535634155,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.388657133974685,scale:9027.977411},{level:17,resolution:1.1943285668550503,scale:4513.988705},{level:18,resolution:.5971642835598172,scale:2256.994353},{level:19,resolution:.29858214164761665,scale:1128.497176}];function J(a){return y(this,null,function*(){let{view:s}=a;if(!(a&&s&&a.layer))throw new u("size-range:missing-parameters","'view' and 'layer' parameters are required");a.forBinning&&L(a,"size-range");let r=a,{layer:t}=r,i=b(r,["layer"]),n=a.forBinning?q:T,l=B(t,n,a.forBinning);if(!l)throw new u("size-range:invalid-parameters","'layer' must be one of these types: "+A(n).join(", "));let e=E(d({layerAdapter:l},i),{view:s});yield s.when();let o=e.signal!=null?{signal:e.signal}:null;yield l.load(o);let c=l.geometryType;if(c!=="point"&&c!=="multipoint"&&c!=="polyline"&&c!=="polygon")throw new u("size-range:not-supported",`sizeRange is not supported for geometryType: ${c}`);return e})}function K(a,s){let t=Math.ceil(a/s),i=Math.ceil(t/4);i<4?i=4:i>16&&(i=16);let n=5*i;return{min:i,max:n<50?50:n}}function O(a,s){let{view:t}=a;if(!t)throw new u("scale-range:invalid-parameters","'view' is required");let i=s.minScale||k,n=t.constraints&&"effectiveLODs"in t.constraints&&t.constraints.effectiveLODs||I,l=[];for(let e=0;e<n.length;e++){if(n[e].scale>i)continue;let o=Number(e),c=[o-3,o,o+3,o+6];for(let r of c)r>-1&&r<n.length&&l.push(n[r].scale);break}return l.sort((e,o)=>e-o)}function Q(a,s){let{view:t,layerAdapter:i}=a;if(!t)throw new u("scale-range:invalid-parameters","'view' is required");let n=i.fullExtent,l=i.minScale||N,e=i.maxScale||P,o=s.minScale||0,c=s.maxScale||0,r=n!=null?$(t,n):0;return r=r<l&&r>e?r:0,{scales:[l,e,o,c,r].map(Math.round).sort((p,m)=>p-m).filter((p,m,g)=>!!p&&g.indexOf(p)===m).filter((p,m,g)=>!m||Math.abs(p-g[m-1])>5),fullExtentScale:r}}function U(a,s){let{minScale:t,maxScale:i}=s,n=O(a,{minScale:t,maxScale:i});if(!n.length)throw new u("scale-range:insufficient-info","not enough scale values");return{minSize:new w({valueExpression:"$view.scale",stops:n.map((l,e)=>new f({value:l,size:v(R[e])}))}),maxSize:new w({valueExpression:"$view.scale",stops:n.map((l,e)=>new f({value:l,size:v(F[e])}))})}}function V(a,s){let{minScale:t,maxScale:i}=s,n=O(a,{minScale:t,maxScale:i});if(!n.length)throw new u("scale-range:insufficient-info","not enough scale values");return{minSize:new w({valueExpression:"$view.scale",stops:n.map((l,e)=>new f({value:l,size:v(G[e])}))}),maxSize:new w({valueExpression:"$view.scale",stops:n.map((l,e)=>new f({value:l,size:v(H[e])}))})}}function W(a,s){let{spatialStatistics:t,minScale:i,maxScale:n}=s;if(!("avgSize"in t)||!t.avgSize)throw new u("size-range:insufficient-info","average polygon size is invalid");let l=t.avgSize,{view:e}=a;if(!e)throw new u("scale-range:invalid-parameters","'view' is required");let{resolution:o,scale:c}=e,r=o/c,{scales:p,fullExtentScale:m}=Q(a,{minScale:i,maxScale:n}),g=[],h=[];return p.forEach((S,j)=>{let{min:C,max:D}=K(l,r*S),x=p.indexOf(m),z=x>-1&&j>x?2:1;g.push(new f({value:S,size:v(C/z)})),h.push(new f({value:S,size:v(D/z)}))}),{minSize:new w({valueExpression:"$view.scale",stops:g}),maxSize:new w({valueExpression:"$view.scale",stops:h})}}function se(a){return y(this,null,function*(){let s=yield J(a),{view:t,layerAdapter:i,signal:n,filter:l}=s,e=yield M({layer:i,view:t,signal:n,filter:l});switch(i.geometryType){case"point":case"multipoint":return U(s,e);case"polyline":return V(s,e);case"polygon":return W(s,e);case"mesh":case"multipatch":return null}return null})}export{se as a};
