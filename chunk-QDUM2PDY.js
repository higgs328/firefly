import{a as u}from"./chunk-Y6XW36QP.js";import{c as f}from"./chunk-BMYVPMAK.js";import{a as y}from"./chunk-3JGYBNJA.js";import{f as n,g as l}from"./chunk-ZC6EBRE4.js";import{a}from"./chunk-MIS6QMFE.js";import{a as g}from"./chunk-CELWVZPW.js";import{a as m}from"./chunk-CX5IFQZJ.js";import{f as p}from"./chunk-CCJU4DSH.js";import{a as e}from"./chunk-QGVBCWUY.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l as s}from"./chunk-5QEXLALV.js";var t=class extends y.ClonableMixin(p){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(r,i,c){r!=null&&(i.geometryType=l(r),i[c]=JSON.stringify(r.toJSON()))}};e([o({types:f,json:{read:n,write:!0}})],t.prototype,"geometry",void 0),e([m("geometry")],t.prototype,"writeGeometry",null),e([o({json:{write:!0}})],t.prototype,"objectIds",void 0),e([a(u,{ignoreUnknown:!1,name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([o({type:g,json:{name:"time",write:!0}})],t.prototype,"timeExtent",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([s("esri.rest.support.ImageGPSInfoParameters")],t);var T=t;export{T as a};
