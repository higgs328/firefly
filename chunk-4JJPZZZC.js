import{a as he}from"./chunk-JHKWQKJN.js";import{c as se}from"./chunk-I76R3PW5.js";import{a as ue}from"./chunk-4KM76TSJ.js";import{a as de}from"./chunk-A66JV4A6.js";import{b as ce}from"./chunk-7P56QMT7.js";import{a as fe}from"./chunk-P4JHTV62.js";import{a as G}from"./chunk-H25DKJGS.js";import{a as ye}from"./chunk-TIWKONVC.js";import{F as ie}from"./chunk-5A7AFZJT.js";import{a as ne,b as pe}from"./chunk-N36GL6VL.js";import{b as le}from"./chunk-KQZGMGWR.js";import{a as re}from"./chunk-IBVI7JQ7.js";import{a as ae}from"./chunk-OGFDJ67M.js";import{a as oe}from"./chunk-5K6CB5PS.js";import{b as te}from"./chunk-N3HRYLNW.js";import{a as ee}from"./chunk-DO7UF2F2.js";import{b as Z}from"./chunk-2HYVVLKS.js";import{a as O,b as j}from"./chunk-ZXKU6WBY.js";import{a as L}from"./chunk-BMYVPMAK.js";import{b as Y}from"./chunk-6RBQSBA2.js";import{a as X}from"./chunk-ZAZJB7CV.js";import{q as me}from"./chunk-KALOJIUA.js";import{a as W}from"./chunk-E7AX56GD.js";import{a as z}from"./chunk-K75TK42V.js";import{b as H}from"./chunk-JLPLCY2B.js";import{a as J}from"./chunk-IR6XCBC4.js";import{m as K}from"./chunk-ZQIC5NFT.js";import{a as f}from"./chunk-PEW2PLAN.js";import{a as $}from"./chunk-7F5DJLJT.js";import{a as g}from"./chunk-CX5IFQZJ.js";import{a as U}from"./chunk-G4DZJMGT.js";import{o as B}from"./chunk-AUAZP44J.js";import{m as k}from"./chunk-76ATOSLU.js";import{b as Q}from"./chunk-ACP3S2CH.js";import{a as o}from"./chunk-QGVBCWUY.js";import{h as p,j as F}from"./chunk-MYO4NP2N.js";import{e as s}from"./chunk-NFIPKH6V.js";import{l as N}from"./chunk-5QEXLALV.js";import{g as M,i as q,j as V,r as D}from"./chunk-P6QFA5MM.js";import{a as v}from"./chunk-LI2SX4T6.js";import{b as y}from"./chunk-YOFFGXOB.js";import{g as S}from"./chunk-XRGPJ3QY.js";import{b as I}from"./chunk-2LI2GKBQ.js";import{a as C}from"./chunk-QBWJMFH5.js";import{a as d,b as c,f as h}from"./chunk-VTHXE323.js";var P;function _(e){return e?.type==="esriSMS"}function A(e,t,r){let i=this.originIdOf(t)>=F(r.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!r&&r.layer?.type==="map-image"&&(r.writeSublayerStructure||i)}}function R(e,t,r){return{enabled:!!r&&r.layer?.type==="tile"&&(r.origin&&this.originIdOf(t)>=F(r.origin)||this._isOverridden(t))}}function b(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function x(e,t,r){return{ignoreOrigin:!0,enabled:!!r?.writeSublayerStructure&&this.originIdOf(t)>p.SERVICE}}function E(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||this.originIdOf(t)>=F(r.origin))}}var be=0,ge=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]),a=P=class extends G(z.IdentifiableMixin(J)){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}load(e){return h(this,null,function*(){return this.addResolvingPromise(h(this,null,function*(){let{layer:t,url:r}=this;if(!t&&!r)throw new y("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let i=t?yield t.fetchSublayerInfo(this,e):(yield B(r,d({responseType:"json",query:{f:"json"}},e))).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:Y(r)}))})),this})}readCapabilities(e,t){t=t.layerDefinition||t;let{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:n},query:{supportsFormatPBF:l,supportsOrderBy:u,supportsPagination:m},data:{supportsAttachment:T},queryRelated:w}=se(t,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:n},data:{supportsAttachment:T},query:{supportsFormatPBF:l,supportsOrderBy:u,supportsPagination:m},queryRelated:w}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){let{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new X(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(let r of t.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get id(){return this._get("id")??be++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return t.type==="Table"}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(n=>n.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach(t=>t.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){return(t=t.layerDefinition||t).objectIdField?t.objectIdField:t.fields?.find(i=>i.type==="esriFieldTypeOID")?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){let{layerDefinition:r}=t;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=M(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;let{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:n}=r,l="gdbVersion"in r?r.gdbVersion:void 0,u=C("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new he({fieldsIndex:t,gdbVersion:l,pbfSupported:u,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:n,url:i})}set renderer(e){if(me(e,this.fieldsIndex),e){for(let t of e.symbols)if(te(t)){S.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new O({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return V(Q.ofType(P),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map(i=>i.id).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();let i=t.fields.find(n=>n.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){let e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,t?.type==="map-layer")return`${e.path}/${t.mapLayerId}`;let r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${k(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){let{store:e}=v(this),t=new P;return v(t).store=e.clone(ge),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return fe(this,e)}createQuery(){return new Z({returnGeometry:!0,where:this.definitionExpression||"1=1"})}createFeatureLayer(){return h(this,null,function*(){if(this.hasOwnProperty("sublayers"))return null;let e=(yield import("./chunk-BMWHS32V.js")).default,{layer:t,url:r}=this,i;if(r&&this.originIdOf("url")>p.SERVICE)i=new e({url:r});else{if(!t?.parsedUrl)throw new y("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{let n=t.parsedUrl;i=new e({url:n.path}),n&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return t?.refreshInterval!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=I(this.floorInfo)),this.originIdOf("labelingInfo")>p.SERVICE&&(i.labelingInfo=I(this.labelingInfo)),this.originIdOf("labelsVisible")>p.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>p.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>p.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>p.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>p.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>p.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>p.DEFAULTS&&(i.popupTemplate=I(this.popupTemplate)),this.originIdOf("renderer")>p.SERVICE&&(i.renderer=I(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>p.DEFAULTS&&(i.title=this.title),t?.type==="map-image"&&t.originIdOf("customParameters")>p.DEFAULTS&&(i.customParameters=t.customParameters),t?.type==="tile"&&t.originIdOf("customParameters")>p.DEFAULTS&&(i.customParameters=t.customParameters),i})}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return ie(this.types,this.typeIdField,e)}getFieldDomain(e,t){let r=t?.feature,i=this.getFeatureType(r);if(i){let n=i.domains&&i.domains[e];if(n&&n.type!=="inherited")return n}return this._getLayerDomain(e)}queryAttachments(e,t){return h(this,null,function*(){yield this.load(),e=re.from(e);let r=this.capabilities;if(!r?.data?.supportsAttachment)throw new y("queryAttachments:not-supported","this layer doesn't support attachments");let{attachmentTypes:i,objectIds:n,globalIds:l,num:u,size:m,start:T,where:w}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||l?.length>0||m?.length>0||u||T||w))throw new y("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(n?.length||l?.length||w))throw new y("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!r?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)})}queryFeatureCount(){return h(this,arguments,function*(e=this.createQuery(),t){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new y("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new y("queryFeatureCount:not-supported","this layer has no url.");let r=this.layer?.apiKey;return yield this.queryTask.executeForCount(e,c(d({},t),{query:c(d({},this.layer?.customParameters),{token:r})}))})}queryFeatures(){return h(this,arguments,function*(e=this.createQuery(),t){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new y("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new y("queryFeatures:not-supported","this layer has no url.");let r=yield this.queryTask.execute(e,c(d({},t),{query:c(d({},this.layer?.customParameters),{token:this.layer?.apiKey})}));if(r?.features)for(let i of r.features)i.sourceLayer=this;return r})}queryObjectIds(){return h(this,arguments,function*(e=this.createQuery(),t){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new y("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new y("queryObjectIds:not-supported","this layer has no url.");let r=this.layer?.apiKey;return yield this.queryTask.executeForIds(e,c(d({},t),{query:c(d({},this.layer?.customParameters),{token:r})}))})}queryRelatedFeatures(e,t){return h(this,null,function*(){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new y("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new y("queryRelatedFeatures:not-supported","this layer has no url.");let r=this.layer?.apiKey;return yield this.queryTask.executeRelationshipQuery(e,c(d({},t),{query:c(d({},this.layer?.customParameters),{token:r})}))})}queryRelatedFeaturesCount(e,t){return h(this,null,function*(){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new y("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new y("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new y("queryRelatedFeaturesCount:not-supported","this layer has no url.");let r=this.layer?.apiKey;return yield this.queryTask.executeRelationshipQueryForCount(e,c(d({},t),{query:c(d({},this.layer?.customParameters),{token:r})}))})}toExportImageJSON(e){let t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=H(e,this.definitionExpression);r!=null&&(t.definitionExpression=r);let i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((l,u)=>(l[u]=this.originIdOf(u),l),{});if(Object.keys(i).some(l=>i[l]>p.SERVICE)){let l=t.drawingInfo={};if(i.renderer>p.SERVICE&&(l.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>p.SERVICE&&(l.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>p.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(m=>!m.labelPlacement)&&S.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let u=this.labelingInfo;this.geometryType!=null&&(u=ce(this.labelingInfo,L.toJSON(this.geometryType))),l.showLabels=!0,l.labelingInfo=u.filter(m=>m.labelPlacement).map(m=>m.toJSON({origin:"service",layer:this.layer}))}else l.showLabels=!1;i.opacity>p.SERVICE&&(l.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(l.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>p.SERVICE&&(t.orderBy=this.orderBy?.map(l=>l.toJSON())??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,t=>{t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||(t.outline?.color?t.color=t.outline.color:t.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){let r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(let i of r)_(i.symbol)&&t(i.symbol);"symbol"in e&&_(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&_(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){let r=this.layer,i=this._get(e),n,l;switch(e){case"definitionExpression":case"floorInfo":n="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":n="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":n="supportsDynamicLayers",l="supportsModification";break;case"orderBy":n="supportsSublayerOrderBy",l="supportsModification"}let u=v(this).getDefaultOrigin();if(u!=="service"){if(n&&this.layer?.capabilities?.exportMap?.[n]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${n}'`);if(l&&this.capabilities?.exportMap[l]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${l}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,t),u!=="service"&&i!==t&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),e&&(e.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([e.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),e.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),e.on("before-changes",r=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(S.getLogger(this).error(new y("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(e,t){let{layer:r,declaredClass:i}=this;S.getLogger(i).error(new y("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}};a.test={isMapImageLayerOverridePolicy:e=>e===x||e===b||e===A,isTileImageLayerOverridePolicy:e=>e===R},o([s({readOnly:!0})],a.prototype,"capabilities",void 0),o([f("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],a.prototype,"readCapabilities",null),o([s()],a.prototype,"defaultPopupTemplate",null),o([s({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:A}}})],a.prototype,"definitionExpression",null),o([s({readOnly:!0})],a.prototype,"effectiveScaleRange",null),o([f("service","maxScaleRange",["minScale","maxScale"])],a.prototype,"readMaxScaleRange",null),o([s({type:[W],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],a.prototype,"fields",void 0),o([s({readOnly:!0})],a.prototype,"fieldsIndex",null),o([s({type:ae,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:A},origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"floorInfo",null),o([s({type:K,json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),o([s({type:L.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:L.read}}}}})],a.prototype,"geometryType",void 0),o([s({type:String})],a.prototype,"globalIdField",void 0),o([f("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdFieldFromService",null),o([s({type:D,json:{write:{ignoreOrigin:!0}}})],a.prototype,"id",null),o([s({readOnly:!0})],a.prototype,"isTable",void 0),o([f("service","isTable",["type"])],a.prototype,"readIsTable",null),o([s({value:null,type:[le],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:x}}})],a.prototype,"labelingInfo",null),o([g("labelingInfo")],a.prototype,"writeLabelingInfo",null),o([s({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:b}}})],a.prototype,"labelsVisible",null),o([s({value:null})],a.prototype,"layer",null),o([s({type:String,json:{write:{overridePolicy:R}}})],a.prototype,"layerItemId",void 0),o([s({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:E}}})],a.prototype,"legendEnabled",void 0),o([s({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],a.prototype,"listMode",null),o([s({type:Number,value:0,json:{write:{overridePolicy:b}}})],a.prototype,"minScale",null),o([f("minScale",["minScale","layerDefinition.minScale"])],a.prototype,"readMinScale",null),o([s({type:Number,value:0,json:{write:{overridePolicy:b}}})],a.prototype,"maxScale",null),o([f("maxScale",["maxScale","layerDefinition.maxScale"])],a.prototype,"readMaxScale",null),o([s()],a.prototype,"objectIdField",void 0),o([f("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdFieldFromService",null),o([s({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:b}}})],a.prototype,"opacity",null),o([f("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],a.prototype,"readOpacity",null),o([g("opacity")],a.prototype,"writeOpacity",null),o([s({value:null,type:[ye],json:{name:"layerDefinition.orderBy",read:{reader:ue}}})],a.prototype,"orderBy",null),o([s({json:{type:D,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:b}}})],a.prototype,"parent",void 0),o([g("parent")],a.prototype,"writeParent",null),o([s({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:E,writer(e,t,r){t[r]=!e}}}})],a.prototype,"popupEnabled",void 0),o([s({type:ee,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:E}}})],a.prototype,"popupTemplate",void 0),o([s({readOnly:!0})],a.prototype,"queryTask",null),o([s({type:[oe],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],a.prototype,"relationships",void 0),o([s({types:ne,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:x},origins:{"web-scene":{types:pe,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:x}}}}})],a.prototype,"renderer",null),o([s({types:{key:"type",base:null,typeMap:{"data-layer":j,"map-layer":O}},cast(e){if(e){if("mapLayerId"in e)return q(O,e);if("dataSource"in e)return q(j,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:b}}})],a.prototype,"source",null),o([s()],a.prototype,"sourceJSON",void 0),o([s({type:$,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],a.prototype,"spatialReference",void 0),o([s({value:null,json:{type:[D],write:{target:"subLayerIds",allowNull:!0,overridePolicy:b}}})],a.prototype,"sublayers",null),o([U("sublayers")],a.prototype,"castSublayers",null),o([g("sublayers")],a.prototype,"writeSublayers",null),o([s({type:String,json:{name:"name",write:{overridePolicy:E}}})],a.prototype,"title",void 0),o([f("service","title",["name","layerDefinition.name"])],a.prototype,"readTitle",null),o([s({type:String})],a.prototype,"typeIdField",void 0),o([s({json:{read:!1},readOnly:!0,value:"sublayer"})],a.prototype,"type",void 0),o([f("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),o([s({type:[de],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],a.prototype,"types",void 0),o([s({type:String,json:{name:"layerUrl",write:{overridePolicy:R}}})],a.prototype,"url",null),o([s({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:b}}})],a.prototype,"visible",null),o([g("visible")],a.prototype,"writeVisible",null),a=P=o([N("esri.layers.support.Sublayer")],a);var yt=a;export{yt as a};
