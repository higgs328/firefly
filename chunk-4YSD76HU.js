import{c as u}from"./chunk-BMYVPMAK.js";import{f,g as d}from"./chunk-ZC6EBRE4.js";import{a as l}from"./chunk-CX5IFQZJ.js";import{f as n}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l as y}from"./chunk-5QEXLALV.js";import{b as i}from"./chunk-2LI2GKBQ.js";import{a as p,b as a}from"./chunk-VTHXE323.js";var s,r=s=class extends n{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,m,c){e!=null&&(m.geometryType=d(e),m[c]=a(p({},e.toJSON()),{spatialReference:void 0}))}clone(){let e=i({geometry:this.geometry,rasterId:this.rasterId});return new s(e)}};t([o({types:u,json:{name:"fromGeometry",read:f,write:!0}})],r.prototype,"geometry",void 0),t([l("geometry")],r.prototype,"writeGeometry",null),t([o({json:{write:!0}})],r.prototype,"rasterId",void 0),r=s=t([y("esri.rest.support.MeasureFromImageParameters")],r);var N=r;export{N as a};
