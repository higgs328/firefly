import{a as oi}from"./chunk-MR7TSAP2.js";import{a as Tt}from"./chunk-B5UEI6EC.js";import{a as Ct,b as Nt,c as Vt,h as Ot,p as At}from"./chunk-ROCEAXU5.js";import{a as ht,b as yt,c as U,d as ft,e as gt,f as Rt,g as bt,h as vt,i as wt,j as St,k as Ft,l as xt,m as It}from"./chunk-4QUJ4QFY.js";import{a as Mt,b as Et,c as qt}from"./chunk-IJGCZDYE.js";import{a as ve,b as si,c as ni}from"./chunk-2KWY7Q4D.js";import{d as ne,e as Dt,g as _t,i as Pt}from"./chunk-AFJIRAY7.js";import{a as Jt,b as jt,c as Ht,d as zt,e as Ut,f as Qt,g as be,h as Bt,i as Gt,j as kt,k as Wt,l as $t,m as Kt,o as Zt,p as Xt,q as Yt,r as ei,s as ti,t as ii,u as ri,v as ai}from"./chunk-G6P2QYPI.js";import{a as Lt}from"./chunk-OLKAX3AE.js";import{a as z}from"./chunk-QETPWGTG.js";import{a as I}from"./chunk-3YHPJJNR.js";import{a as dt}from"./chunk-B3QGX4VL.js";import{a as ct}from"./chunk-E424TX4V.js";import{i as st}from"./chunk-WH5YYKLM.js";import{a as nt}from"./chunk-FEP4LYOS.js";import{k as Ye,l as fe}from"./chunk-AULXBTED.js";import{e as tt,h as ge,j as Re,k as it}from"./chunk-LMCM3VZM.js";import{a as rt}from"./chunk-BR4IP6B4.js";import{y as at}from"./chunk-Y3KWVZKS.js";import{b as ae}from"./chunk-ZWHAEUE3.js";import{a as Xe}from"./chunk-E56W4PK4.js";import{a as et,b as se}from"./chunk-2CC7WNFC.js";import{a as k,b as W,c as H}from"./chunk-G7KCDLNH.js";import{a as $e,b as Ke}from"./chunk-TR2R7ZXX.js";import{a as Ze}from"./chunk-7U52UAO2.js";import{a as ee}from"./chunk-WDTJILD4.js";import{a as ke}from"./chunk-E3OE5HRA.js";import{a as ze}from"./chunk-HCW4M77K.js";import{b as Ge}from"./chunk-H4IF7PQO.js";import{a as Ue}from"./chunk-QKVTMI24.js";import{a as mt}from"./chunk-GGYZRKBV.js";import{a as Be}from"./chunk-37PSR6DC.js";import{a as We}from"./chunk-P4JHTV62.js";import{a as Pe}from"./chunk-H25DKJGS.js";import{b as ot,d as lt,e as ut,h as pt}from"./chunk-PBAMEKFE.js";import{c as Qe}from"./chunk-QS3EYJPF.js";import{a as He}from"./chunk-4YTM754S.js";import{a as je}from"./chunk-LAX5536Z.js";import{a as Je}from"./chunk-DO7UF2F2.js";import{b as re}from"./chunk-2HYVVLKS.js";import{a as Me,b as Ee,c as qe}from"./chunk-6RBQSBA2.js";import{a as Le}from"./chunk-3JGYBNJA.js";import{a as Ae}from"./chunk-ZAZJB7CV.js";import{a as Oe}from"./chunk-E7AX56GD.js";import{h as ye}from"./chunk-RNC4P66O.js";import{a as he}from"./chunk-MFCSEXHS.js";import{b as Ne}from"./chunk-2TX472ZB.js";import{c as Ce}from"./chunk-7QNKS2X6.js";import{a as Ve}from"./chunk-VCCMJ6BV.js";import{a as li}from"./chunk-QK56OQGR.js";import{m as K}from"./chunk-ZQIC5NFT.js";import{c as _e}from"./chunk-VIEK2X23.js";import{a as O}from"./chunk-PEW2PLAN.js";import{a as ie}from"./chunk-7F5DJLJT.js";import{a as M}from"./chunk-CX5IFQZJ.js";import{g as de}from"./chunk-NJWTSROP.js";import{o as V}from"./chunk-AUAZP44J.js";import{k as Te}from"./chunk-76ATOSLU.js";import{f as Ie}from"./chunk-CCJU4DSH.js";import{a as De}from"./chunk-TG45K3WR.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as m}from"./chunk-NFIPKH6V.js";import{l as $}from"./chunk-5QEXLALV.js";import{f as Fe,h as xe,i as me,r as ce}from"./chunk-P6QFA5MM.js";import{K as Se,s as we}from"./chunk-4PTIEWMT.js";import{b as v}from"./chunk-YOFFGXOB.js";import{g as pe}from"./chunk-XRGPJ3QY.js";import{b as A}from"./chunk-2LI2GKBQ.js";import{a as _,b as L,f as b}from"./chunk-VTHXE323.js";var ui={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var gi=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Ri={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},bi=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function le(a){return bi.has(a.type)}function ue(a,r){if(!a||!r)return A(a||r);let n=A(a);if(n.functionDefinition&&r.rasterFunctionDefinition){let e=r.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),mi(n.functionDefinition.arguments,r),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else r.functionName?.toLowerCase()!=="none"&&(di(n.functionArguments).Raster=r);return n}function mi(a,r){for(let n in a)n.toLowerCase()==="raster"&&(a[n].type==="RasterFunctionVariable"?(a[n]=r.rasterFunctionDefinition,a[n].type="RasterFunctionTemplate"):a[n].type==="RasterFunctionTemplate"&&mi(a[n].arguments,r))}function J(a){let r=A(ui[a.functionName+"Function"]),n=a.functionArguments;for(let e in n)e.toLowerCase()==="raster"?(r.arguments[e]=J(n[e]),r.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(r.arguments[e].value=Ti(n[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=n[e];return r}function ci(a,r){switch(r=r||{},a.type){case"raster-stretch":return Si(a,r);case"class-breaks":return Fi(a,r);case"unique-value":return xi(a,r);case"raster-colormap":return Ii(a,r);case"vector-field":return vi(a,r);case"raster-shaded-relief":return wi(a,r);case"flow":throw new Error("Unsupported rendering rule.")}}function di(a){let r=a?.Raster??a?.raster;return r&&r.declaredClass==="esri.layers.support.RasterFunction"?di(r.functionArguments):a}var te={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function vi(a,r){let n=new I;n.functionName="VectorFieldRenderer";let{dataType:e,bandNames:t}=r,i=e==="vector-uv",s,u;if(t&&t.length===2){let f=t.map(R=>R.toLowerCase());s=f.indexOf("magnitude"),u=f.indexOf("direction")}s!==-1&&s!==null||(s=0,u=1);let l=a.rotationType==="arithmetic"?1:2,d=a.flowRepresentation==="flow-from"?0:1,p=a.visualVariables?a.visualVariables.find(f=>f.field==="Magnitude"):new Qe,c={magnitudeBandID:s,directionBandID:u,isUVComponents:i,referenceSystem:l,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Ri[a.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};n.functionArguments=c;let y=J(n);return r.convertToRFT?I.fromJSON({rasterFunctionDefinition:y}):n}function wi(a,r){let n=r.convertToRFT;if(r.dataType!=="elevation"&&(r.dataType!=="generic"||r.bandCount!==1||r.pixelType!=="s16"&&r.pixelType!=="s32"&&r.pixelType!=="f32"&&r.pixelType!=="f64"))return new I;let e=new I;e.functionName="Hillshade";let t=a.hillshadeType==="traditional"?0:1,i=a.scalingType==="none"?1:3,s={HillshadeType:t,SlopeType:i,ZFactor:a.zFactor};return t===0&&(s.Azimuth=a.azimuth,s.Altitude=a.altitude),i===3&&(s.PSPower=a.pixelSizePower,s.PSZFactor=a.pixelSizeFactor),e.functionArguments=s,e.variableName="Raster",a.colorRamp&&(e.functionName="ShadedRelief",n?s.ColorRamp=Re(a.colorRamp):s.Colormap=ge(a.colorRamp)),n?new I({rasterFunctionDefinition:J(e)}):e}function Si(a,r){let n=r.convertToRFT,e=new I;e.functionName="Stretch";let t=te[rt.toJSON(a.stretchType)],i="u8",s=a.customStatistics?.map(l=>[l.min,l.max,l.avg??0,l.stddev??1]),u={StretchType:t,Statistics:s,DRA:a.dynamicRangeAdjustment,UseGamma:a.useGamma,Gamma:a.gamma,ComputeGamma:a.computeGamma};if(a.outputMin!=null&&(u.Min=a.outputMin),a.outputMax!=null&&(u.Max=a.outputMax),t===te.standardDeviation?(u.NumberOfStandardDeviations=a.numberOfStandardDeviations,e.outputPixelType=i):t===te.percentClip?(u.MinPercent=a.minPercent,u.MaxPercent=a.maxPercent,e.outputPixelType=i):t===te.minMax?e.outputPixelType=i:t===te.sigmoid&&(u.SigmoidStrengthLevel=a.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",a.colorRamp){let l=a.colorRamp,d=new I;if(n)d.functionArguments={ColorRamp:Re(l)};else{let p=tt(l,!0);if(p)d.functionArguments={colorRampName:p};else if(!r.convertColorRampToColormap||l.type!=="algorithmic"&&l.type!=="multipart"){let c=a.colorRamp.toJSON();c.type==="algorithmic"?c.algorithm=c.algorithm||"esriCIELabAlgorithm":c.type==="multipart"&&c.colorRamps?.length&&c.colorRamps.forEach(y=>y.algorithm=y.algorithm||"esriCIELabAlgorithm"),d.functionArguments={colorRamp:c}}else d.functionArguments={Colormap:ge(l)}}return d.variableName="Raster",d.functionName="Colormap",d.functionArguments.Raster=e,n?new I({rasterFunctionDefinition:J(d)}):d}return n?new I({rasterFunctionDefinition:J(e)}):e}function Fi(a,r){let n=[],e=[],t=[],i=[],{pixelType:u,rasterAttributeTable:l}=r,d=l==null?null:l.features,p=hi(l);if(p&&d&&Array.isArray(d)&&a.classBreakInfos){a.classBreakInfos.forEach((g,T)=>{let w=g.symbol?.color,S;w?.a&&g.minValue!=null&&g.maxValue!=null&&d.forEach(F=>{g.minValue!=null&&g.maxValue!=null&&(S=F.attributes[a.field],(S>=g.minValue&&S<g.maxValue||T===a.classBreakInfos.length-1&&S>=g.minValue)&&i.push([F.attributes[p],w.r,w.g,w.b]))})});let R=u?oe(i,u):i,h=new I;return h.functionName="Colormap",h.functionArguments={},h.functionArguments.Colormap=R,h.variableName="Raster",r.convertToRFT?new I({rasterFunctionDefinition:J(h)}):h}a.classBreakInfos.forEach((R,h)=>{if(R.minValue==null||R.maxValue==null)return;let g=R.symbol&&R.symbol.color;g?.a?(h===0?n.push(R.minValue,R.maxValue+1e-4):n.push(R.minValue+1e-4,R.maxValue+1e-4),e.push(h),i.push([h,g.r,g.g,g.b])):t.push(R.minValue,R.maxValue)});let c=u?oe(i,u):i,y=new I;y.functionName="Remap",y.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:t},y.variableName="Raster";let f=new I;return f.functionName="Colormap",f.functionArguments={Colormap:c,Raster:y},r.convertToRFT?new I({rasterFunctionDefinition:J(f)}):f}function oe(a,r){let n=gi.has(r)?Xe(r):null;return n&&a.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),a}function hi(a){if(a==null)return;let{fields:r}=a;return r?.find(e=>e?.name&&e.name.toLowerCase()==="value")?.name}function xi(a,r){let n=[],{pixelType:e,rasterAttributeTable:t}=r,i=t==null?null:t.features,s=hi(t),u=a.defaultSymbol?.color?.toRgb(),l=a.uniqueValueInfos;if(l)if(i){if(s){let c=new Map;l.forEach(f=>{let R=f.value,h=pi(f);R!=null&&h?.a&&c.set(String(R),h.toRgb())});let y=a.field;y&&i.forEach(({attributes:f})=>{let R=String(f[y]),h=f[s],g=c.get(R);g?n.push([h,...g]):u&&n.push([h,...u])})}}else for(let c=0;c<l.length;c++){let y=l[c],f=pi(y),R=+y.value;if(f?.a){if(isNaN(R))return null;n.push([R,f.r,f.g,f.b])}}let d=e?oe(n,e):n,p=new I;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=d,p.variableName="Raster",r.convertToRFT?new I({rasterFunctionDefinition:J(p)}):p}function pi(a){return a.symbol?.type==="polygon-3d"?a.symbol.symbolLayers?.find(r=>r.type==="fill")?.material?.color:a.symbol?.color}function Ii(a,r){let n=a.extractColormap();if(!n||n.length===0)return null;let{pixelType:e}=r,t=e?oe(n,e):n,i=new I;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=t,r.convertToRFT?new I({rasterFunctionDefinition:J(i)}):i}function Ti(a){let r=[],n=[];return a.forEach(e=>{r.push(e[0]),n.push(it([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:n}}var C=class extends Ie{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(a,r,n){this.layer.version<10.3||(r[n]=a)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(a,r,n){this.format&&this.format.toLowerCase().includes("jpg")&&a!=null&&(r[n]=a)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(a,r,n){this.format==="lerc"&&a!=null&&(r[n]=a)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){let{layer:a}=this;return a.pixelType!==a.serviceRasterInfo.pixelType?a.pixelType:void 0}writeLercVersion(a,r,n){this.format==="lerc"&&this.layer.version>=10.5&&(r[n]=a)}get version(){let a=this.layer;return a.commitProperty("bandIds"),a.commitProperty("format"),a.commitProperty("compressionQuality"),a.commitProperty("compressionTolerance"),a.commitProperty("interpolation"),a.commitProperty("noData"),a.commitProperty("noDataInterpretation"),a.commitProperty("mosaicRule"),a.commitProperty("rasterFunction"),a.commitProperty("adjustAspectRatio"),a.commitProperty("pixelFilter"),a.commitProperty("pixelType"),a.commitProperty("definitionExpression"),a.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(a){this._set("version",a)}get mosaicRule(){let a=this.layer,r=a.mosaicRule,n=a.definitionExpression;return r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new z({where:n})),r}get rasterFunction(){let a=this.layer,{rasterFunction:r}=a,n=a.pixelFilter,e=!a.format||a.format.includes("jpg")||a.format.includes("png");r=this._addResampleRasterFunction(r);let t=a.multidimensionalSubset?.areaOfInterest;return t&&(r=Di(r,t)),e&&!n&&a.renderer?.type!=="vector-field"&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(a){let r=this.layer,{rasterInfo:n,renderer:e}=r;return a=a||r.rasterFunction,!e||!le(e)?a:ue(ci(e,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map(({name:t})=>t),convertColorRampToColormap:r.version<10.6,convertToRFT:!!a?.rasterFunctionDefinition,bandCount:n.bandCount}),a)}_addResampleRasterFunction(a){if(this.layer.renderer?.type!=="vector-field"||a?.functionName==="Resample")return a;let r=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,n=this.layer.serviceRasterInfo.pixelSize,e=new I({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:n}});return e=a?.rasterFunctionDefinition?new I({rasterFunctionDefinition:J(e)}):e,ue(e,a)}};function Di(a,r){let n=new I({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return ue(n,a)}o([m()],C.prototype,"layer",void 0),o([m({json:{write:!0}})],C.prototype,"adjustAspectRatio",null),o([M("adjustAspectRatio")],C.prototype,"writeAdjustAspectRatio",null),o([m({json:{write:!0}})],C.prototype,"bandIds",null),o([m({json:{write:!0}})],C.prototype,"compression",void 0),o([m({json:{write:!0}})],C.prototype,"compressionQuality",null),o([M("compressionQuality")],C.prototype,"writeCompressionQuality",null),o([m({json:{write:!0}})],C.prototype,"compressionTolerance",null),o([M("compressionTolerance")],C.prototype,"writeCompressionTolerance",null),o([m({json:{write:!0}})],C.prototype,"format",null),o([m({type:String,json:{read:{reader:k.read},write:{writer:k.write}}})],C.prototype,"interpolation",null),o([m({json:{write:!0}})],C.prototype,"noData",null),o([m({type:String,json:{read:{reader:W.read},write:{writer:W.write}}})],C.prototype,"noDataInterpretation",null),o([m({type:H.apiValues,json:{read:H.read,write:H.write}})],C.prototype,"pixelType",null),o([m({json:{write:!0}})],C.prototype,"lercVersion",void 0),o([M("lercVersion")],C.prototype,"writeLercVersion",null),o([m({type:Number})],C.prototype,"version",null),o([m({json:{write:!0}})],C.prototype,"mosaicRule",null),o([m({json:{write:!0,name:"renderingRule"}})],C.prototype,"rasterFunction",null),C=o([$("esri.layers.support.ExportImageServiceParameters")],C);function yi(a,r,n){return b(this,null,function*(){let e=Ee(a),t=qe(L(_({},e?.query),{f:"json"})),i=Me(t,n),s=`${e?.path}/${r}/info`,u=V(`${s}`,i),l=V(`${s}/keyProperties`,i),d=yield Promise.allSettled([u,l]),p=d[0].status==="fulfilled"?d[0].value.data:null,c=d[1].status==="fulfilled"?d[1].value.data:null,y=null;p.statistics?.length&&(y=p.statistics.map(F=>({min:F[0],max:F[1],avg:F[2],stddev:F[3]})));let f=K.fromJSON(p.extent),R=Math.ceil(f.width/p.pixelSizeX-.1),h=Math.ceil(f.height/p.pixelSizeY-.1),g=f.spatialReference,T=new _e({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:g}),w=p.histograms?.length?p.histograms:null,S=new et({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new se({width:R,height:h,bandCount:p.bandCount,extent:f,spatialReference:g,pixelSize:T,pixelType:p.pixelType.toLowerCase(),statistics:y,histograms:w,keyProperties:c,storageInfo:S})})}var _i=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Pi=xe(Fe,{min:0,max:255});function Ci(a){let r=JSON.stringify(a),n=r.includes('"rasterFunctionDefinition":{'),e=n?r.match(/"type":"(.*?FunctionArguments")/gi):r.match(/"rasterFunction":"(.*?")/gi),t=e?.map(i=>n?i.slice(8,-18):i.slice(18,-1));return t?t.join("/"):null}var fi=a=>{let r=class extends a{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new C({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){let e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(i=>typeof i=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){e!=null&&this.format!=="lerc"&&(t[i]=e)}writeCompressionTolerance(e,t,i){this.format==="lerc"&&e!=null&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?z.fromJSON(t):null}get fieldsIndex(){return this.fields?new Ae(this.fields):null}set format(e){e&&_i.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=z.fromJSON(L(_({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){let i=e||t.mosaicRule;return i?z.fromJSON(i):this._isMosaicRuleSupported(t)?z.fromJSON(t):null}writeMosaicRule(e,t,i){let{mosaicRule:s}=this;this._isValidCustomizedMosaicRule(s)&&(t[i]=s.toJSON())}writeNoData(e,t,i){e!=null&&typeof e=="number"&&(t[i]=Pi(e))}readObjectIdField(e,t){return e||(e=t.fields.find(s=>s.type==="esriFieldTypeOID"||s.type==="oid")?.name),e}get parsedUrl(){return Te(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){let{activePresetRendererName:e,presetRenderers:t}=this;return e?t?.find(({name:s})=>s===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){let s=t?.layerDefinition?.drawingInfo?.renderer,u=qt(s,i);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!s.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),le(u)||pe.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){let e=this.fields?.map(s=>s.clone())??[];e.push(ft()),this.sourceType==="mosaic-dataset"&&this.fields?.length&&e.push(Rt()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:s})=>s.toLowerCase()==="none")&&e.push(gt()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:s})=>s.toLowerCase()!=="none").forEach(({name:s})=>e.push(bt(s)));let{rasterInfo:t}=this;if(this._isVectorDataSet()){let s=t?.multidimensionalInfo?.variables[0].unit?.trim(),u=vt(s),l=wt();e.push(u,l)}if(t?.multidimensionalInfo&&this.sourceType==="raster-dataset"){let s=Ft(t.multidimensionalInfo);e.push(...s)}let i=t?.attributeTable;if(i!=null){let s=St(i);e.push(...s)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=I.fromJSON(L(_({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("rasterFunction",t)}readRasterFunction(e,t){let i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&i[0].name!=="None"?this._isRFTJson(t.renderingRule)?I.fromJSON({rasterFunctionDefinition:t.renderingRule}):I.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){let i=e||t.extent.spatialReference;return i?ie.fromJSON(i):null}writePixelType(e,t,i){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=H.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){return b(this,null,function*(){let i=e,{renderer:s,symbolizer:u,pixelFilter:l,bandIds:d}=this;if(!this._isPicture()&&s&&u&&!l){let p=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(s.toJSON()),c=this._rasterJobHandler.instance;if(c){p&&(u.bind(),yield c.updateSymbolizer(u,t),this._cachedRendererJson=s.toJSON());let y=yield c.symbolize(_({bandIds:d},e),t);i={extent:e.extent,pixelBlock:y}}else i={extent:e.extent,pixelBlock:u.symbolize(_({bandIds:d},e))}}return i})}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}calculateVolume(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new v("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=A(e),this.mosaicRule&&e.mosaicRule==null&&(e.mosaicRule=this.mosaicRule),Jt(this.url,e,this._getRequestOptions(t))})}computeAngles(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new v("imagery-layer:compute-angles","this operation is not supported on the input image service");return jt(this.url,e,this._getRequestOptions(t))})}computePixelSpaceLocations(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new v("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Ht(this.url,e,this._getRequestOptions(t))})}computeHistograms(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new v("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Ut(this.url,e,this._getRequestOptions(t))})}computeStatisticsHistograms(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new v("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),zt(this.url,e,this._getRequestOptions(t))})}measureHeight(e,t){return b(this,null,function*(){let i=yield this._fetchCapabilities(t?.signal);if(!(e.operationType==="base-and-top"?i.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new v("imagery-layer:measure-height","this operation is not supported on the input image service");return e=A(e),this._applyMosaicRule(e),Bt(this.url,e,this._getRequestOptions(t))})}measureAreaAndPerimeter(e,t){return b(this,null,function*(){let i=yield this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsAreaAndPerimeter&&(!e.is3D||i.mensuration.supports3D)))throw new v("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=A(e),this._applyMosaicRule(e),Gt(this.url,e,this._getRequestOptions(t))})}measureDistanceAndAngle(e,t){return b(this,null,function*(){let i=yield this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsDistanceAndAngle&&(!e.is3D||i.mensuration.supports3D)))throw new v("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=A(e),this._applyMosaicRule(e),Wt(this.url,e,this._getRequestOptions(t))})}measurePointOrCentroid(e,t){return b(this,null,function*(){let i=yield this._fetchCapabilities(t?.signal);if(!(i.mensuration.supportsPointOrCentroid&&(!e.is3D||i.mensuration.supports3D)))throw new v("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=A(e),this._applyMosaicRule(e),kt(this.url,e,this._getRequestOptions(t))})}measureLengthFromImage(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new v("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new v("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return $t(this.url,e,this._getRequestOptions(t))})}measureAreaFromImage(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new v("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new v("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Kt(this.url,e,this._getRequestOptions(t))})}getField(e){let{fieldsIndex:t}=this;return t?.get(e)}getFieldDomain(e,t){let i=this.getField(e);return i?i.domain:null}fetchImage(u,l,d){return b(this,arguments,function*(e,t,i,s={}){if(e==null||t==null||i==null)throw new v("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){let R=yield this._generateRasterInfo(this.rasterFunction,{signal:s.signal});R&&(this.rasterInfo=R)}let p=this.getExportImageServiceParameters(e,t,i,s.timeExtent);if(p==null){if(s.requestAsImageElement&&this._canRequestImageElement(this.format)){let F=document.createElement("canvas");return F.width=t,F.height=i,s.returnImageBitmap?{imageBitmap:yield he(F,`${n(this.parsedUrl)}/exportImage`,s.signal)}:{imageOrCanvasElement:F}}let{bandIds:R,rasterInfo:h}=this,g=(R?.length||h.bandCount)??0,T=t*i,w=h.pixelType,S=[];for(let F=0;F<g;F++)S.push(ae.createEmptyBand(w,T));return{pixelData:{pixelBlock:new ae({width:t,height:i,pixels:S,mask:new Uint8Array(T),pixelType:w}),extent:e}}}let c=!!s.requestAsImageElement&&!this.pixelFilter,y=c&&!!s.returnImageBitmap,f={imageServiceParameters:p,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:c,returnImageBitmap:y,signal:s.signal};return this._requestArrayBuffer(f)})}fetchKeyProperties(e){return V(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new v("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):V(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>He.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){let i=L(_({},t),{query:this._getQueryParams()});return yi(n(this.parsedUrl),e,i)}getCatalogItemICSInfo(e,t){return b(this,null,function*(){let{data:i}=yield V(n(this.parsedUrl)+"/"+e+"/info/ics",_({query:this._getQueryParams()},t)),s=i?.ics;if(!s)return;let u=null;try{u=(yield V(n(this.parsedUrl)+"/"+e+"/info",_({query:this._getQueryParams()},t))).data.extent}catch{}if(!u?.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};let l=this.version>=10.7?V(n(this.parsedUrl)+"/"+e+"/info/icstopixel",_({query:this._getQueryParams()},t)).then(x=>x.data).catch(()=>({})):{},d=u.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:de(d),outSR:"0:"+e},c=V(n(this.parsedUrl)+"/project",_({query:this._getQueryParams(p)},t)).then(x=>x.data).catch(()=>({})),y=5,f=(u.xmin+u.xmax)/2,R=(u.ymax-u.ymin)/(y+1),h=u.ymin+R,g=[];for(let x=0;x<y;x++)g.push({x:f,y:h+R*x});let T={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:de(d),outSR:"0:"+e},w=V(n(this.parsedUrl)+"/project",_({query:this._getQueryParams(T)},t)).then(x=>x.data).catch(()=>({})),S=yield Promise.all([l,c,w]),F=S[0].ipxf;if(F==null){let x=s.geodataXform?.xf_0;x?.name?.toLowerCase()==="topup"&&x?.coefficients?.length===6&&(F={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}let P=K.fromJSON(S[1]?.geometries?.[0]);P&&(P.spatialReference=new ie({wkid:0,imageCoordinateSystem:s}));let D=S[2].geometries?S[2].geometries.filter(x=>x?.x!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN"):[],N=D.length;if(N<3)return{ics:s,icsToPixelTransform:F,icsExtent:P,northDirection:null};let q=0,Z=0,B=0,X=0;for(let x=0;x<N;x++)q+=D[x].x,Z+=D[x].y,B+=D[x].x*D[x].x,X+=D[x].x*D[x].y;let j=(N*X-q*Z)/(N*B-q*q),G=0,Y=D[y-1].x>D[0].x,Q=D[y-1].y>D[0].y;return j===1/0?G=Q?90:270:j===0?G=Y?0:180:j>0?G=Y?180*Math.atan(j)/Math.PI:180*Math.atan(j)/Math.PI+180:j<0&&(G=Q?180+180*Math.atan(j)/Math.PI:360+180*Math.atan(j)/Math.PI),{ics:s,icsToPixelTransform:F,icsExtent:P,northDirection:G}})}generateRasterInfo(e,t){return b(this,null,function*(){e=me(I,e);let i=L(_({},t),{query:this._getQueryParams()});if(!e||e.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??ve(n(this.parsedUrl),this.sourceJSON,i);let s=Ci(e);if(!s)throw new v("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[s])return this._functionRasterInfos[s];let u=si(n(this.parsedUrl),e,i);this._functionRasterInfos[s]=u;try{return yield u}catch(l){throw this._functionRasterInfos[s]=null,l}})}getExportImageServiceParameters(e,t,i,s){e=e.clone().shiftCentralMeridian();let u=Zt(e.spatialReference,n(this.parsedUrl)),l=this.exportImageServiceParameters.toJSON(),{bandIds:d,noData:p}=l,{renderingRule:c}=l,y=this.rasterFunction?.rasterFunctionDefinition,f=this.renderer?.type,R=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(d?.length&&this._hasRasterFunction(this.rasterFunction)&&!y&&R){let T={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:d}};if(c.rasterFunction==="Stretch")T.rasterFunctionArguments.Raster=c.rasterFunctionArguments.Raster,c.rasterFunctionArguments.Raster=T;else if(c.rasterFunction==="Colormap"){let w=c.rasterFunctionArguments.Raster;w?.rasterFunction==="Stretch"?(T.rasterFunctionArguments.Raster=w.rasterFunctionArguments.Raster,w.rasterFunctionArguments.Raster=T):(T.rasterFunctionArguments.Raster=w,c.rasterFunctionArguments.Raster=T)}else T.rasterFunctionArguments.Raster=c,c=T;l.bandIds=void 0}else l.bandIds=d?.join(",");Array.isArray(p)&&p.length>0&&(l.noData=p.join(","));let h=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(h.isOutSide)return null;l.mosaicRule=h.mosaicRule!=null?JSON.stringify(h.mosaicRule):null,s=h.timeExtent,l.renderingRule=this._getRenderingRuleString(I.fromJSON(c));let g={};if(s!=null){let{start:T,end:w}=s.toJSON();T&&w&&T===w?g.time=""+T:T==null&&w==null||(g.time=`${T??"null"},${w??"null"}`)}return _(_({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+i},l),g)}getSamples(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new v("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=A(e);let{raster:s}=this;return s&&e.raster==null&&(e.raster=s),Qt(this.url,e,this._getRequestOptions(t))})}identify(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new v("imagery-layer:identify","identify operation is not supported on the input image service");e=A(e),this.version<10.91&&e.geometry?.type==="extent"&&(e.geometry=ye.fromExtent(e.geometry));let i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new v("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;let{raster:s,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),s&&e.raster==null&&(e.raster=s),be(this.url,e,this._getRequestOptions(t))})}imageToMap(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new v("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ei(n(this.parsedUrl),e,this._getRequestOptions(t))})}imageToMapMultiray(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new v("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return ti(n(this.parsedUrl),e,this._getRequestOptions(t))})}mapToImage(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new v("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ii(n(this.parsedUrl),e,this._getRequestOptions(t))})}findImages(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new v("imagery-layer:find-images","findImages operation is not supported on the input image service");return ai(n(this.parsedUrl),e,this._getRequestOptions(t))})}getImageUrl(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new v("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return ri(n(this.parsedUrl),e,this._getRequestOptions(t))})}createQuery(){return new re({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}queryBoundary(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new v("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Xt(n(this.parsedUrl),e,this._getRequestOptions(t))})}queryRasters(e,t){return b(this,null,function*(){return{query:e,requestOptions:t}=yield this._prepareForQuery(e,t),Ze(this.url,e,t)})}queryObjectIds(e,t){return b(this,null,function*(){return{query:e,requestOptions:t}=yield this._prepareForQuery(e,t),Ke(this.url,e,t)})}queryGPSInfo(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new v("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},Yt(n(this.parsedUrl),e,this._getRequestOptions(t))})}queryRasterCount(e,t){return b(this,null,function*(){return{query:e,requestOptions:t}=yield this._prepareForQuery(e,t),$e(this.url,e,t)})}queryVisibleRasters(e,t){return b(this,null,function*(){if(!e)throw new v("imagery-layer: query-visible-rasters","missing query parameter");yield this.load();let{pixelSize:i,returnDomainValues:s,returnTopmostRaster:u,showNoDataRecords:l}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1},d=!1,p=null,c=null,y=U.servicePixelValue.toLowerCase(),f=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(d=e.outFields.some(P=>!P.toLowerCase().startsWith(y)),this.version>=10.4)){let P=e.outFields.filter(N=>N.toLowerCase().startsWith(y)&&N.length>y.length).map(N=>{let q=N.slice(y.length+1);return[this._updateRenderingRulesFunctionName(q,f),q]});p=P.map(N=>new I({functionName:N[0]})),c=P.map(N=>N[1]);let{rasterFunction:D}=this;p.length===0?D?.functionName?(p.push(D),c.push(D.functionName)):p=null:D?.functionName&&!p.some(N=>N.functionName===D.functionName)&&(p.push(D),c.push(D.functionName))}let R=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:h}=this,g=e.timeExtent||this.timeExtent;if(h){let{isOutside:P,intersection:D}=ne(h,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(P)throw new v("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");D?.timeExtent!=null&&(g=D.timeExtent)}let T=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,g),w=e.geometry;this.version<10.91&&w?.type==="extent"&&(w=ye.fromExtent(w));let S=this._getQueryParams({geometry:w,timeExtent:g,mosaicRule:T,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:i,returnCatalogItems:d,returnGeometry:R,raster:this.raster,maxItemCount:u?1:null});delete S.f;let F=new Lt(S);try{yield this._generateRasterInfo(this.rasterFunction);let P=yield be(this.url,F,{signal:t?.signal,query:_({},this.customParameters)}),D=e.outFields,N=P.value!=null&&P.value.toLowerCase().includes("nodata"),q=d&&!R&&P?.catalogItems?.features.length&&(l||!N),Z=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?Dt({rasterInfo:this.rasterInfo,multidimensionalDefinition:T?.multidimensionalDefinition,timeExtent:g,multidimensionalSubset:this.multidimensionalSubset}):null;if(!q)return this._processVisibleRastersResponse(P,{returnDomainValues:s,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:D,effectiveMultidimensionalDefinition:Z});let B=this.objectIdField||"ObjectId",X=P.catalogItems?.features??[],j=X.map(Q=>Q.attributes?.[B]),G=new re({objectIds:j,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[B]}),Y=yield this.queryRasters(G);return Y?.features?.length&&Y.features.forEach(Q=>{X.forEach(x=>{x.attributes[B]===Q.attributes[B]&&Q.geometry&&(x.geometry=Q.geometry.clone(),e.outSpatialReference!=null&&(x.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(P,{returnDomainValues:s,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:D,effectiveMultidimensionalDefinition:Z})}catch{throw new v("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})}fetchVariableStatisticsHistograms(e,t){return b(this,null,function*(){let i=V(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(l=>l.data?.statistics),s=V(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(l=>l.data?.histograms),u=yield Promise.all([i,s]);return u[0]&&u[0].forEach(l=>{l.avg=l.mean,l.stddev=l.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}})}createFlowMesh(e,t){return b(this,null,function*(){let i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):nt(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)})}getMultidimensionalSubsetVariables(e){let t=e??this.serviceRasterInfo.multidimensionalInfo;return Pt(this.multidimensionalSubset,t)}_fetchService(e){return b(this,null,function*(){yield this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);let t=this.sourceJSON,i=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):ve(n(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(l=>(this._set("serviceRasterInfo",l),this._set("multidimensionalInfo",l.multidimensionalInfo),ni(l,t),l)),s=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([i,s,u]).then(l=>{l[1]?this._set("rasterInfo",l[1]):this._set("rasterInfo",l[0]),l[2]&&this._set("rasterFunctionInfos",l[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),pe.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([De(()=>this.rasterFunction,p=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(p).then(c=>{c&&(this.rasterInfo=c)})})]);let{serviceRasterInfo:d}=this;d.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(d)})})}_combineMosaicRuleWithTimeExtent(e,t){let i=this.timeInfo,{multidimensionalInfo:s}=this.serviceRasterInfo;if(e==null||s==null||t==null||i?.startField==null)return e;let{startField:u}=i,l=s.variables.some(h=>h.dimensions.some(g=>g.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(h=>h.dimensionName!==l),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];let d=e.multidimensionalDefinition.filter(h=>h.dimensionName===l),p=t.start!=null?t.start.getTime():null,c=t.end!=null?t.end.getTime():null,y=p==null||c==null||p===c,f=y?[p||c]:[[p,c]],R=this.version>=10.8;if(d.length)d.forEach(h=>{h.dimensionName===l&&(R?(h.dimensionName=null,h.isSlice=!1,h.values=[]):(h.isSlice=y,h.values=f))});else if(!R){let h=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);h.length?h.forEach(g=>{g.dimensionName=l,g.isSlice=y,g.values=f}):e.multidimensionalDefinition.push(new ct({variableName:"",dimensionName:l,isSlice:y,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}_prepareForQuery(e,t){return b(this,null,function*(){if(!(yield this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new v("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?me(re,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=L(_({},t.query),{raster:this.raster})),{query:e,requestOptions:t}})}_initJobHandler(){return b(this,null,function*(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let e=new Tt;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),yield this._rasterJobHandler.connectionPromise})}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){let{rasterInfo:t,rasterFunction:i}=this;return e.type==="unique-value"&&this._hasRasterFunction(i)&&t?.bandCount===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Vt(t).includes(e.type)}_fetchCapabilities(e){return b(this,null,function*(){return this.capabilities||(yield this._fetchServiceInfo(e)),this.capabilities})}_fetchServiceInfo(e){return b(this,null,function*(){let t=this.sourceJSON;if(!t){let{data:i,ssl:s}=yield V(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,s&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map(i=>i.trim()).indexOf("tilesonly")>-1)throw new v("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})})}_isMosaicDataset(e){return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;let t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(e==null)return!1;let{functionName:t,functionArguments:i}=e,s=t?.toLowerCase()==="resample",u=i?.ResampleType||i?.resampleType;return s&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){let t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){let s=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=Ct({variableName:s,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){let d=u?.bandIds??Ot(i);!d||i.bandCount===3&&d[0]===0&&d[1]===1&&d[2]===2||(this.bandIds=d)}e||(e=u?.renderer??Nt(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:s}));let l=At(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=i):this.symbolizer=new st({rendererJSON:l,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e?.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));let{raster:t,viewId:i}=this;return _(_({raster:t,viewId:i,f:"json"},e),this.customParameters)}_getRequestOptions(e){return L(_({},e),{query:_(_({},e?.query),this.customParameters)})}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):fe(e,t,i)}_getRasterFunctionInfos(e){return b(this,null,function*(){let t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(yield V(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null})}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}_requestArrayBuffer(e){return b(this,null,function*(){let{imageProps:t,requestAsImageElement:i,returnImageBitmap:s,signal:u}=e;if(i&&this._canRequestImageElement(t.format)){let h=`${n(this.parsedUrl)}/exportImage`,{data:g}=yield V(h,{responseType:s?"blob":"image",query:this._getQueryParams(_(_({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:u});return g instanceof Blob?{imageBitmap:yield he(g,h,u),params:t}:{imageOrCanvasElement:g,params:t}}let l=this._initJobHandler(),d=V(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(_({f:"image"},e.imageServiceParameters)),signal:u}),p=(yield Promise.all([d,l]))[0].data,c=t.format||"jpgpng",y=c;if(y!=="bsq"&&y!=="bip"&&(y=Ye(p)),!y)throw new v("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));let f={signal:u};return{pixelData:{pixelBlock:yield c==="gif"||c==="bmp"||c.includes("png")&&(y==="png"||y==="jpg")?fe(p,_({useCanvas:!0},t),f):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},f),extent:t.extent},params:t}})}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=_t(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new z;let i=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&t.forEach(s=>s.variableName=""),t=t.filter(({variableName:s,dimensionName:u})=>s&&s!=="*"||u),!i?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};let i=e.value,{templateRRFunctionNames:s,showNoDataRecords:u,returnDomainValues:l,templateFields:d}=t,p=e.processedValues,c=e.catalogItems?.features,y=e.properties?.Values?.map(S=>S.replaceAll(/ /gi,", "))||[],f=this.objectIdField||"ObjectId",R=typeof i=="string"&&i.toLowerCase().includes("nodata"),h=[];if(i&&!c&&!R){let S={};S[f]=0,y=[i],c=[new je({geometry:this.fullExtent,attributes:S})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&xt(this.rasterFields,S,t.effectiveMultidimensionalDefinition)}if(!c)return[];this._updateResponseFieldNames(c,d),R&&!u&&(c=[]);let{itemPixelValue:g,servicePixelValue:T}=U,w=this.rasterFields.some(S=>S.name===g);for(let S=0;S<c.length;S++){let F=c[S];if(i!=null){let P=y[S],D=this.rasterFunction&&p&&p.length>0&&s&&s.length>0&&s.includes(this.rasterFunction.functionName)?p[s.indexOf(this.rasterFunction.functionName)]:i;if(P.toLowerCase()==="nodata"&&!u)continue;w&&(F.attributes[g]=P),F.attributes[T]=D,this._updateFeatureWithMagDirValues(F,P);let N=this.fields&&this.fields.length>0,q=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?N?P:i:D;this.rasterFunction||(q=N?P:i),this._updateFeatureWithRasterAttributeTableValues(F,q)}if(F.sourceLayer=F.layer=this,l&&this._updateFeatureWithDomainValues(F),s&&p&&s.length===p.length)for(let P=0;P<s.length;P++){let D=`${U.servicePixelValue}.${s[P]}`;F.attributes[D]=p[P]}h.push(c[S])}return h}_processMultidimensionalIntersection(e,t,i){let{multidimensionalSubset:s}=this;if(!s)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(s){let{isOutside:u,intersection:l}=ne(s,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};l?.timeExtent!=null&&(t=l.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){let{isOutside:u}=ne(s,{multidimensionalDefinition:i.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){let i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(i==null)return;let{features:s,fields:u}=i,l=u.map(p=>p.name).find(p=>p.toLowerCase()==="value");if(!l)return;let d=s.filter(p=>p.attributes[l]===(t!=null?parseInt(t,10):null));d&&d[0]&&u.forEach(p=>{let c=ht+p.name;e.attributes[c]=d[0].attributes[p.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;let i=t.split(/,\s*/).map(p=>parseFloat(p)),s=i.map(p=>[p]),u=i.map(p=>({minValue:p,maxValue:p,noDataValue:null})),l=new ae({height:1,width:1,pixelType:"f32",pixels:s,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:l,extent:new K(0,0,0,0,this.spatialReference)});let d=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[l.pixels[0][0],l.pixels[1][0]]:at([l.pixels[0][0],l.pixels[1][0]]);e.attributes[U.magnitude]=d[0],e.attributes[U.direction]=d[1]}_updateFeatureWithDomainValues(e){let t=this.fields&&this.fields.filter(i=>i.domain&&i.domain.type==="coded-value");t?.forEach(i=>{let s=e.attributes[i.name];if(s!=null){let u=i.domain.codedValues.find(l=>l.code===s);u&&(e.attributes[i.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;let i=this.fieldsIndex;i!=null&&e.forEach(s=>{if(s?.attributes)for(let u of t){let l=i.get(u)?.name;l&&l!==u&&(s.attributes[u]=s.attributes[l],delete s.attributes[l])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return e?.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");let i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){let{raster:t,mosaicRule:i,rasterFunction:s}=this;s&&e.rasterFunction==null&&(e.rasterFunction=s),i&&e.mosaicRule==null&&(e.mosaicRule=i),t&&e.raster==null&&(e.raster=t)}_applyMosaicRule(e){let{raster:t,mosaicRule:i}=this;i&&e.mosaicRule==null&&(e.mosaicRule=i),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){let t=e.capabilities?e.capabilities.toLowerCase().split(",").map(w=>w.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:s,maxRecordCount:u}=e,l=t.includes("image"),d=e.serviceDataType==="esriImageServiceDataTypeElevation",p=!(!e.spatialReference&&!e.extent?.spatialReference),c=t.includes("edit"),y=t.includes("mensuration")&&p,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(w=>w.trim()),R=y&&f.includes("basic"),h=this._isMosaicDataset(e)&&t.includes("catalog"),g=t.includes("download"),T=i>=10.7&&d||i>=11.4&&(d||y&&f.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:l,supportsExportImage:l,supportsIdentify:l,supportsImageToMap:i>=11.2&&h,supportsImageToMapMultiray:i>=11.2&&h,supportsMapToImage:i>=11.2&&h,supportsFindImages:i>=11.2&&h,supportsGetImageUrl:i>=11.3&&g,supportsMeasure:y,supportsMeasureFromImage:i>=11.2,supportsDownload:g,supportsQuery:h&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&l,supportsProject:i>=10.3&&l,supportsComputeStatisticsHistograms:i>=10.4&&l,supportsQueryBoundary:i>=10.6&&l,supportsCalculateVolume:T,supportsComputePixelLocation:i>=10.7&&h,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&h,supportsAdd:c,supportsDelete:c,supportsEditing:c,supportsUpdate:c,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!s?.supportsStatistics,supportsOrderBy:!!s?.supportsOrderBy,supportsDistinct:!!s?.supportsDistinct,supportsPagination:!!s?.supportsPagination,supportsStandardizedQueriesOnly:!!s?.useStandardizedQueries,supportsPercentileStatistics:!!s?.supportsPercentileStatistics,supportsCentroid:!!s?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!s?.supportsQueryWithDistance,supportsExtent:!!s?.supportsReturningQueryExtent,supportsGeometryProperties:!!s?.supportsReturningGeometryProperties,supportsHavingClause:!!s?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!s?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:R,supportsAreaAndPerimeter:R,supportsPointOrCentroid:R,supportsHeightFromBaseAndTop:y&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:y&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:y&&f.includes("top-top shadow height"),supports3D:y&&f.includes("3d")}}}};function n(e){return e?.path??""}return o([m({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),o([m({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),o([m({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),o([m({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),o([O("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),o([m({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),o([m()],r.prototype,"adjustAspectRatio",void 0),o([m({type:[ce],json:{write:!0}})],r.prototype,"bandIds",void 0),o([O("bandIds")],r.prototype,"readBandIds",null),o([m({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),o([O("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),o([m({type:Number})],r.prototype,"compressionQuality",void 0),o([M("compressionQuality")],r.prototype,"writeCompressionQuality",null),o([m({type:Number})],r.prototype,"compressionTolerance",void 0),o([M("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),o([m({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),o([m({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),o([O("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),o([m({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),o([m({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),o([m()],r.prototype,"rasterInfo",void 0),o([m({readOnly:!0,type:[Oe]})],r.prototype,"fields",void 0),o([m({readOnly:!0})],r.prototype,"fieldsIndex",null),o([m({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),o([O("service","format",["serviceDataType"])],r.prototype,"readFormat",null),o([m({type:K})],r.prototype,"fullExtent",void 0),o([m({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),o([m({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),o([m({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),o([m({type:String,json:{type:k.jsonValues,read:k.read,write:k.write}})],r.prototype,"interpolation",void 0),o([m()],r.prototype,"minScale",void 0),o([O("service","minScale")],r.prototype,"readMinScale",null),o([m()],r.prototype,"maxScale",void 0),o([O("service","maxScale")],r.prototype,"readMaxScale",null),o([m({type:z})],r.prototype,"mosaicRule",null),o([O("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),o([M("mosaicRule")],r.prototype,"writeMosaicRule",null),o([m()],r.prototype,"multidimensionalInfo",void 0),o([m({type:dt,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),o([m({json:{type:ce}})],r.prototype,"noData",void 0),o([M("noData")],r.prototype,"writeNoData",null),o([m({type:String,json:{type:W.jsonValues,read:W.read,write:W.write}})],r.prototype,"noDataInterpretation",void 0),o([m({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),o([O("objectIdField")],r.prototype,"readObjectIdField",null),o([m({readOnly:!0})],r.prototype,"geometryType",void 0),o([m({})],r.prototype,"typeIdField",void 0),o([m({})],r.prototype,"types",void 0),o([m({readOnly:!0})],r.prototype,"parsedUrl",null),o([m({type:Function})],r.prototype,"pixelFilter",void 0),o([m()],r.prototype,"raster",void 0),o([m({readOnly:!0})],r.prototype,"sourceType",void 0),o([O("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),o([m()],r.prototype,"viewId",void 0),o([m()],r.prototype,"renderer",null),o([m({types:Mt,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Et,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],r.prototype,"internalRenderer",null),o([O("internalRenderer")],r.prototype,"readRenderer",null),o([M("internalRenderer")],r.prototype,"writeRenderer",null),o([m({clonable:!1})],r.prototype,"symbolizer",void 0),o([m(pt)],r.prototype,"opacity",void 0),o([m({readOnly:!0})],r.prototype,"rasterFields",null),o([m({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),o([m({type:I,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),o([O("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),o([m({readOnly:!0})],r.prototype,"serviceDataType",void 0),o([m({readOnly:!0,type:ie})],r.prototype,"spatialReference",void 0),o([O("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),o([m({type:H.apiValues,json:{read:H.read,type:H.jsonValues}})],r.prototype,"pixelType",void 0),o([M("pixelType")],r.prototype,"writePixelType",null),o([m({constructOnly:!0,type:se})],r.prototype,"serviceRasterInfo",void 0),o([m()],r.prototype,"sourceJSON",void 0),o([m(lt)],r.prototype,"url",void 0),o([m({readOnly:!0})],r.prototype,"version",void 0),o([O("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=o([$("esri.layers.mixins.ArcGISImageService")],r),r};var E=class extends Ce(Ge(Ve(mt(Be(oi(fi(Ne(Ue(ze(Pe(Le.ClonableMixin(li)))))))))))){constructor(...a){super(...a),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Se((r,n,e)=>b(this,null,function*(){let{save:t,saveAs:i}=yield import("./chunk-TN6T6RUB.js");switch(r){case ee.SAVE:return t(this,n);case ee.SAVE_AS:return i(this,e,n)}}))}normalizeCtorArgs(a,r){return typeof a=="string"?_({url:a},r):a}load(a){let r=a!=null?a.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},a).catch(we).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(a){this._set("legendEnabled",a)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(a){this._set("listMode",a)}writeOperationalLayerType(a,r,n){let e=this.renderer?.type==="vector-field";r[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(a){let{rasterFields:r}=this,n=new Set,e=U.itemPixelValue.toLowerCase(),t=this.sourceType==="raster-dataset",i=yt.toLowerCase(),s=`${U.servicePixelValue.toLowerCase()}.`;for(let d of r){let p=d.name.toLowerCase();p===e||p.startsWith(s)||t&&p.startsWith(i)||n.add(d.name)}let u=We({fields:r,title:this.title},L(_({},a),{visibleFieldNames:n})),{rasterInfo:l}=this;return u?.fieldInfos&&l&&It(u.fieldInfos,l),u}queryFeatures(a,r){return this.queryRasters(a,r).then(n=>{if(n?.features)for(let e of n.features)e.layer=e.sourceLayer=this;return n})}queryFeatureCount(a,r){return this.queryRasterCount(a,r)}redraw(){this.emit("redraw")}save(a){return b(this,null,function*(){return this._debouncedSaveOperations(ee.SAVE,a)})}saveAs(a,r){return b(this,null,function*(){return this._debouncedSaveOperations(ee.SAVE_AS,r,a)})}serviceSupportsSpatialReference(a){return ke(this,a)}write(a,r){if(!this._isPreviewLayer)return super.write(a,r);if(r?.messages){let n=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new v("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};o([m(ut)],E.prototype,"legendEnabled",null),o([m({type:["show","hide"]})],E.prototype,"listMode",null),o([m({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),o([m({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],E.prototype,"operationalLayerType",void 0),o([M("web-map","operationalLayerType")],E.prototype,"writeOperationalLayerType",null),o([m(ot)],E.prototype,"popupEnabled",void 0),o([m({type:Je,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],E.prototype,"popupTemplate",void 0),o([m({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),o([m({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),o([m({readOnly:!0})],E.prototype,"_isPreviewLayer",null),E=o([$("esri.layers.ImageryLayer")],E);var Oa=E;export{Oa as a};
