import{a as E,b as L}from"./chunk-UTNE4PNN.js";import{a as A}from"./chunk-H4VPVW2I.js";import{a as b}from"./chunk-HCW4M77K.js";import{a as j}from"./chunk-GGYZRKBV.js";import{a as I}from"./chunk-37PSR6DC.js";import{a as S}from"./chunk-H25DKJGS.js";import{d as O}from"./chunk-PBAMEKFE.js";import{a as T}from"./chunk-D3CUKSGS.js";import{a as D}from"./chunk-QK56OQGR.js";import{a as h}from"./chunk-PEW2PLAN.js";import{o as y}from"./chunk-AUAZP44J.js";import{m as g}from"./chunk-76ATOSLU.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as a}from"./chunk-NFIPKH6V.js";import{l as w}from"./chunk-5QEXLALV.js";import{f as v,p as d,s as f}from"./chunk-4PTIEWMT.js";import{b as u}from"./chunk-YOFFGXOB.js";import{a as p,b as m,f as n}from"./chunk-VTHXE323.js";var i=class extends A(b(j(I(S(D))))){constructor(...t){super(...t),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=L()}normalizeCtorArgs(t,r){return typeof t=="string"?p({url:t},r):t}destroy(){this._lercDecoder=v(this._lercDecoder)}readCapabilities(t,r){let e=r.capabilities&&r.capabilities.split(",").map(s=>s.toLowerCase().trim());return e?{operations:{supportsTileMap:e.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(t,r){let e=r.currentVersion;return e||(e=9.3),e}load(t){let r=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{if(e.typeKeywords){for(let s=0;s<e.typeKeywords.length;s++)if(e.typeKeywords[s].toLowerCase()==="elevation 3d layer")return!0}throw new u("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},t).catch(f).then(()=>this._fetchImageService(r))),Promise.resolve(this)}fetchTile(t,r,e,s){let l=s?.signal,x={responseType:"array-buffer",signal:l},_={noDataValue:s?.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(t,r,e,s)).then(()=>y(this.getTileUrl(t,r,e),x)).then(c=>this._lercDecoder.decode(c.data,_,l)).then(c=>new E(c))}getTileUrl(t,r,e){let s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,l=g(m(p({},this.parsedUrl.query),{blankTile:!s&&null}));return`${this.parsedUrl.path}/tile/${t}/${r}/${e}${l?"?"+l:""}`}queryElevation(t,r){return n(this,null,function*(){let{ElevationQuery:e}=yield import("./chunk-QZVUTWAJ.js");return d(r),new e().query(this,t,r)})}createElevationSampler(t,r){return n(this,null,function*(){let{ElevationQuery:e}=yield import("./chunk-QZVUTWAJ.js");return d(r),new e().createSampler(this,t,r)})}_fetchTileAvailability(t,r,e,s){return this.tilemapCache?this.tilemapCache.fetchAvailability(t,r,e,s):Promise.resolve("unknown")}_fetchImageService(t){return n(this,null,function*(){if(this.sourceJSON)return this.sourceJSON;let r={query:p({f:"json"},this.parsedUrl.query),responseType:"json",signal:t},e=yield y(this.parsedUrl.path,r);e.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl})})}get hasOverriddenFetchTile(){return!this.fetchTile[M]}};o([a({readOnly:!0})],i.prototype,"capabilities",void 0),o([h("service","capabilities",["capabilities"])],i.prototype,"readCapabilities",null),o([a({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),o([a({readOnly:!0,type:T})],i.prototype,"heightModelInfo",void 0),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),o([a({type:["show","hide"]})],i.prototype,"listMode",void 0),o([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],i.prototype,"minScale",void 0),o([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],i.prototype,"maxScale",void 0),o([a({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],i.prototype,"opacity",void 0),o([a({type:["ArcGISTiledElevationServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([a()],i.prototype,"sourceJSON",void 0),o([a({json:{read:!1},value:"elevation",readOnly:!0})],i.prototype,"type",void 0),o([a(O)],i.prototype,"url",void 0),o([a()],i.prototype,"version",void 0),o([h("version",["currentVersion"])],i.prototype,"readVersion",null),i=o([w("esri.layers.ElevationLayer")],i);var M=Symbol("default-fetch-tile");i.prototype.fetchTile[M]=!0;var te=i;export{te as a};
