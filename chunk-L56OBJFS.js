import{j as F}from"./chunk-7HMNN4FJ.js";import{b as T,d as R,g as P,k as J}from"./chunk-QSQIQSC6.js";import{c as K}from"./chunk-AYNBEMCC.js";import{c as H}from"./chunk-PDQQY7RQ.js";import{b as I,d as E,n as w,q as L,x as Z}from"./chunk-6B5XFA6F.js";import{a as v,c as f}from"./chunk-BOVYXYHK.js";import{a as Y}from"./chunk-JPU2PQZC.js";import{a as B}from"./chunk-AML4XSEF.js";var k=class i{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(e,t){this.objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new d,this._objectCount=0,t&&(t.maximumObjectsPerNode!==void 0&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),t.maximumDepth!==void 0&&(this._maximumDepth=t.maximumDepth))}destroy(){this._degenerateObjects.clear(),d.clearPool(),Q[0]=null,N.prune(),M.prune()}add(e,t=e.length){this._objectCount+=t,this._grow(e,t);let n=d.acquire();for(let o=0;o<t;o++){let r=e[o];this._isDegenerate(r)?this._degenerateObjects.add(r):(n.init(this._root),this._add(r,n))}d.release(n)}remove(e,t=null){this._objectCount-=e.length;let n=d.acquire();for(let o of e){let r=t??R(this.objectToBoundingSphere(o),pe);C(r[3])?(n.init(this._root),ae(o,r,n)):this._degenerateObjects.delete(o)}d.release(n),this._shrink()}update(e,t){if(!C(t[3])&&this._isDegenerate(e))return;let n=_e(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){let o=K(e,t);z(this._root,r=>{if(!de(o,r))return!1;let h=r.node;return h.terminals.forAll(l=>{this._intersectsObject(o,l)&&n(l)}),h.residents!==null&&h.residents.forAll(l=>{this._intersectsObject(o,l)&&n(l)}),!0})}forEachAlongRayWithVerticalOffset(e,t,n,o){let r=K(e,t);z(this._root,h=>{if(!ue(r,h,o))return!1;let l=h.node;return l.terminals.forAll(s=>{this._intersectsObjectWithOffset(r,s,o)&&n(s)}),l.residents!==null&&l.residents.forAll(s=>{this._intersectsObjectWithOffset(r,s,o)&&n(s)}),!0})}forEach(e){z(this._root,t=>{let n=t.node;return n.terminals.forAll(e),n.residents!==null&&n.residents.forAll(e),!0}),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,t,n,o=()=>!0,r=1/0){let h=1/0,l=1/0,s=null,u=V(e,t),m=a=>{if(--r,!o(a))return;let _=this.objectToBoundingSphere(a);if(!F(n,_))return;let S=j(e,t,_),D=S-_[3],c=S+_[3];D<h&&(h=D,l=c,s=a)};return $(this._root,a=>{if(r<=0||!F(n,a.bounds)||(w(g,u,a.halfSize),E(g,g,a.bounds),j(e,t,g)>l))return!1;let _=a.node;return _.terminals.forAll(S=>m(S)),_.residents!==null&&_.residents.forAll(S=>m(S)),!0},e,t),s}forEachInDepthRange(e,t,n,o,r,h,l){let s=-1/0,u=1/0,m={setRange:c=>{n===i.DepthOrder.FRONT_TO_BACK?(s=Math.max(s,c.near),u=Math.min(u,c.far)):(s=Math.max(s,-c.far),u=Math.min(u,-c.near))}};m.setRange(o);let a=j(t,n,e),_=V(t,n),S=V(t,-n),D=c=>{if(!l(c))return;let x=this.objectToBoundingSphere(c),A=x,X=j(t,n,A)-a,se=X-x[3],he=X+x[3];se>u||he<s||!F(h,x)||r(c,m)};$(this._root,c=>{if(!F(h,c.bounds)||(w(g,_,c.halfSize),E(g,g,c.bounds),j(t,n,g)-a>u)||(w(g,S,c.halfSize),E(g,g,c.bounds),j(t,n,g)-a<s))return!1;let x=c.node;return x.terminals.forAll(A=>D(A)),x.residents!==null&&x.residents.forAll(A=>D(A)),!0},t,n)}forEachNode(e){z(this._root,t=>e(t.node,t.bounds,t.halfSize,t.depth))}forEachNeighbor(e,t){let n=P(t),o=t,r=s=>{let u=this.objectToBoundingSphere(s),m=P(u),a=n+m;return!(L(u,o)-a*a<=0)||e(s)},h=!0,l=s=>{h&&(h=r(s))};z(this._root,s=>{let u=P(s.bounds),m=n+u;if(L(s.bounds,o)-m*m>0)return!1;let a=s.node;return a.terminals.forAll(l),h&&a.residents!==null&&a.residents.forAll(l),h}),h&&this.forEachDegenerateObject(l)}_intersectsObject(e,t){let n=this.objectToBoundingSphere(t);return!(n[3]>0)||J(n,e)}_intersectsObjectWithOffset(e,t,n){let o=this.objectToBoundingSphere(t);return!(o[3]>0)||J(n.applyToBoundingSphere(o),e)}_add(e,t){t.advanceTo(this.objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){let t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){let o=d.acquire().init(e);this._add(t.at(n),o),d.release(o)}}_grow(e,t){if(t!==0&&(ee(e,t,n=>this.objectToBoundingSphere(n),O),C(O[3])&&!this._fitsInsideTree(O)))if(oe(this._root.node))R(O,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{let n=this._rootBoundsForRootAsSubNode(O);this._placingRootViolatesMaxDepth(n)?this._rebuildTree(O,n):this._growRootAsSubNode(n),d.release(n)}}_rebuildTree(e,t){I(G,t.bounds),G[3]=t.halfSize,ee([e,G],2,o=>o,U);let n=d.acquire().init(this._root);this._root.initFrom(null,U,U[3]),this._root.increaseHalfSize(1.25),z(n,o=>(this.add(o.node.terminals.data,o.node.terminals.length),o.node.residents!==null&&this.add(o.node.residents.data,o.node.residents.length),!0)),d.release(n)}_placingRootViolatesMaxDepth(e){let t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E,n=0;return z(this._root,o=>(n=Math.max(n,o.depth),n+t<=this._maximumDepth)),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){let t=e[3],n=e,o=-1/0,r=this._root.bounds,h=this._root.halfSize;for(let s=0;s<3;s++){let u=r[s]-h-(n[s]-t),m=n[s]+t-(r[s]+h),a=Math.max(0,Math.ceil(u/(2*h))),_=Math.max(0,Math.ceil(m/(2*h)))+1,S=2**Math.ceil(Math.log(a+_)*Math.LOG2E);o=Math.max(o,S),q[s].min=a,q[s].max=_}for(let s=0;s<3;s++){let u=q[s].min,m=q[s].max,a=(o-(u+m))/2;u+=Math.ceil(a),m+=Math.floor(a);let _=r[s]-h-u*h*2;W[s]=_+(m+u)*h}let l=o*h;return W[3]=l*re,d.acquire().initFrom(null,W,l,0)}_growRootAsSubNode(e){let t=this._root.node;I(O,this._root.bounds),O[3]=this._root.halfSize,this._root.init(e),e.advanceTo(O,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){let e=this._findShrinkIndex();if(e===-1)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(this._root.node.terminals.length!==0||this._root.isLeaf())return-1;let e=null,t=this._root.node.children,n=0,o=0;for(;o<t.length&&e==null;)n=o++,e=t[n];for(;o<t.length;)if(t[o++])return-1;return n}_isDegenerate(e){return!C(this.objectToBoundingSphere(e)[3])}_fitsInsideTree(e){let t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}toJSON(){let{maximumDepth:e,maximumObjectsPerNode:t,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:e,maximumObjectsPerNode:t,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(e){let t=e.children.map(r=>r?this._nodeToJSON(r):null),n=e.residents?.map(r=>this.objectToBoundingSphere(r)),o=e.terminals?.map(r=>this.objectToBoundingSphere(r));return{children:t,residents:n,terminals:o}}static fromJSON(e){let t=new i(n=>n,{maximumDepth:e.maximumDepth,maximumObjectsPerNode:e.maximumObjectsPerNode});return t._objectCount=e.objectCount,t._root.initFrom(e.root.node,e.root.bounds,e.root.halfSize,e.root.depth),t}},d=class i{constructor(){this.bounds=T(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(e,t,n,o=this.depth){return this.node=e??i.createEmptyNode(),t&&R(t,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(e){this.halfSize*=e,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*re}advance(e){let t=this.node.children[e];t||(t=i.createEmptyNode(),this.node.children[e]=t),this.node=t,this.halfSize/=2,this.depth++;let n=ie[e];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}let o=this._childIndex(e);t&&t(this,o),this.advance(o)}}isLeaf(){return this.node.residents!=null}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){let t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new B({shrink:!0}),residents:new B({shrink:!0})}}static acquire(){return i._pool.acquire()}static release(e){i._pool.release(e)}static clearPool(){i._pool.prune()}};function z(i,e){let t=d.acquire().init(i),n=[t];for(;n.length!==0;){if(t=n.pop(),e(t)&&!t.isLeaf())for(let o=0;o<t.node.children.length;o++)t.node.children[o]&&n.push(d.acquire().init(t).advance(o));d.release(t)}}function $(i,e,t,n=k.DepthOrder.FRONT_TO_BACK){let o=d.acquire().init(i),r=[o];for(me(t,n,ne);r.length!==0;){if(o=r.pop(),e(o)&&!o.isLeaf())for(let h=7;h>=0;--h){let l=ne[h];o.node.children[l]&&r.push(d.acquire().init(o).advance(l))}d.release(o)}}function ae(i,e,t){N.clear();let n=t.advanceTo(e,(o,r)=>{N.push(o.node),N.push(r)})?t.node.terminals:t.node.residents;if(n.removeUnordered(i),n.length===0)for(let o=N.length-2;o>=0&&le(N.data[o],N.data[o+1]);o-=2);}function le(i,e){return e>=0&&(i.children[e]=null),!!oe(i)&&(i.residents===null&&(i.residents=new B({shrink:!0})),!0)}function de(i,e){return y(e.bounds,2*-e.halfSize,p),y(e.bounds,2*e.halfSize,b),H(i.origin,i.direction,p,b)}function ue(i,e,t){return y(e.bounds,2*-e.halfSize,p),y(e.bounds,2*e.halfSize,b),t.applyToMinMax(p,b),H(i.origin,i.direction,p,b)}function oe(i){if(i.terminals.length!==0)return!1;if(i.residents!==null)return i.residents.length===0;for(let e=0;e<i.children.length;e++)if(i.children[e])return!1;return!0}function ce(i,e){i[0]=Math.min(i[0],e[0]-e[3]),i[1]=Math.min(i[1],e[1]-e[3]),i[2]=Math.min(i[2],e[2]-e[3])}function fe(i,e){i[0]=Math.max(i[0],e[0]+e[3]),i[1]=Math.max(i[1],e[1]+e[3]),i[2]=Math.max(i[2],e[2]+e[3])}function y(i,e,t){t[0]=i[0]+e,t[1]=i[1]+e,t[2]=i[2]+e}function ee(i,e,t,n){if(e===1){let o=t(i[0]);R(o,n)}else{p[0]=1/0,p[1]=1/0,p[2]=1/0,b[0]=-1/0,b[1]=-1/0,b[2]=-1/0;for(let o=0;o<e;o++){let r=t(i[o]);C(r[3])&&(ce(p,r),fe(b,r))}Z(n,p,b,.5),n[3]=Math.max(b[0]-p[0],b[1]-p[1],b[2]-p[2])/2}}function me(i,e,t){if(!M.length)for(let n=0;n<8;++n)M.push({index:0,distance:0});for(let n=0;n<8;++n){let o=ie[n];M.data[n].index=n,M.data[n].distance=j(i,e,o)}M.sort((n,o)=>n.distance-o.distance);for(let n=0;n<8;++n)t[n]=M.data[n].index}function V(i,e){let t,n=1/0;for(let o=0;o<8;++o){let r=j(i,e,te[o]);r<n&&(n=r,t=te[o])}return t}function j(i,e,t){return e*(i[0]*t[0]+i[1]*t[1]+i[2]*t[2])}function C(i){return!isNaN(i)&&i!==-1/0&&i!==1/0&&i>0}d._pool=new Y(d),function(i){var e;(e=i.DepthOrder||(i.DepthOrder={}))[e.FRONT_TO_BACK=1]="FRONT_TO_BACK",e[e.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(k);var ie=[f(-1,-1,-1),f(1,-1,-1),f(-1,1,-1),f(1,1,-1),f(-1,-1,1),f(1,-1,1),f(-1,1,1),f(1,1,1)],te=[f(-1,-1,-1),f(-1,-1,1),f(-1,1,-1),f(-1,1,1),f(1,-1,-1),f(1,-1,1),f(1,1,-1),f(1,1,1)],re=Math.sqrt(3),Q=[null];function _e(i){return Q[0]=i,Q}var W=T(),g=v(),p=v(),b=v(),N=new B,pe=T(),O=T(),G=T(),U=T(),q=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],M=new B,ne=[0,0,0,0,0,0,0,0];export{k as a};
