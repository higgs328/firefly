import{a as N}from"./chunk-W2RZ3RCQ.js";import{f as St}from"./chunk-V4TTZ7GK.js";import{N as vt,a as ht,ba as yt,c as ut,d as b,da as L,e as x,ea as U,f as ct,fa as n,g as mt,ia as xt,k as ft,ka as gt,la as wt,ma as B,na as _t}from"./chunk-GKDCA3IZ.js";import{g as lt}from"./chunk-F6K2Z5NW.js";import{c as dt}from"./chunk-42A4XARZ.js";import{n as Mt}from"./chunk-BC7GBJHB.js";import{a as pt}from"./chunk-4TIUXNXO.js";import{a as it}from"./chunk-WH5SLVE3.js";import{b as at}from"./chunk-37H4LYIE.js";import{c as nt}from"./chunk-XAHD7XBV.js";import{a as C}from"./chunk-W5OI4BJ2.js";import{b as Z,h as F,i as $,j as O}from"./chunk-HM5RIVQC.js";import{c as tt,h as et,i as ot,j as rt,k as st}from"./chunk-DJW5LMRG.js";import{e as Y}from"./chunk-NX5B6XBR.js";import{c as W}from"./chunk-RSDQHAJX.js";import{f as J}from"./chunk-NJWTSROP.js";import{a as s,b as V}from"./chunk-QGVBCWUY.js";import{b as X}from"./chunk-4PTIEWMT.js";import{a as G,b as z}from"./chunk-VTHXE323.js";var w=class extends xt{};s([L(0,x)],w.prototype,"pos",void 0),s([L(1,x)],w.prototype,"uv",void 0);var K=class extends gt{},R=class extends B{};s([n(ft)],R.prototype,"dvs",void 0);var p=class extends B{};s([n(x)],p.prototype,"perspective",void 0),s([n(x)],p.prototype,"texSize",void 0),s([n(b)],p.prototype,"wrapAroundShift",void 0),s([n(b)],p.prototype,"opacity",void 0),s([n(ut)],p.prototype,"texture",void 0);var d=class extends _t{constructor(){super(...arguments),this.type="OverlayShader"}vertex(e){let t=e.uv.divide(this.config.texSize),o=new b(1).add(vt(t,this.config.perspective)),r=new ct(e.pos.add(new x(this.config.wrapAroundShift,0)),1),i=this.transform.dvs.multiply(r);return{uv:t,glPosition:new mt(i.xy.multiply(o),0,o)}}fragment(e){let t=yt(this.config.texture,e.uv).multiply(this.config.opacity),o=new wt;return o.fragColor=t,o}};s([n(R)],d.prototype,"transform",void 0),s([n(p)],d.prototype,"config",void 0),s([V(0,U(w))],d.prototype,"vertex",null),s([V(0,U(K))],d.prototype,"fragment",null);var T=class extends ht{constructor(){super(...arguments),this.type=it.Overlay,this._mesh=null,this.shaders={overlay:new d}}render(e,t){let{context:o,painter:r}=e,i=this._getMesh(e,t);r.setPipelineState(N);let{isWrapAround:l,wrapAroundShift:m}=t.config,f=z(G({},t.config),{wrapAroundShift:0}),v={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:f},defines:null,optionalAttributes:null,useComputeBuffer:!1};r.setPipelineState(z(G({},N),{stencil:{write:!1,test:{compare:$.EQUAL,op:{fail:O.KEEP,zFail:O.KEEP,zPass:O.REPLACE},ref:0,mask:255}}})),r.submitDrawMeshUntyped(o,v,i),l&&(f.wrapAroundShift=m,r.submitDrawMeshUntyped(o,v,i))}shutdown(){X(this._mesh)}_getMesh(e,t){let{context:o}=e;if(this._mesh){let r=this._mesh.vertexBuffers.get("positions");if(!r)throw new Error("Buffer not found");r.buffer.setData(t.position)}else{let r=t.index!=null?t.index.length:t.position.length/2;this._mesh=new St(o,{vertex:{positions:{data:t.position,attributes:[new C("pos",2,F.FLOAT,0,8)]},uvs:{data:t.tex,attributes:[new C("uv",2,F.UNSIGNED_SHORT,0,4)]}},index:t.index!=null?{index:{data:t.index}}:void 0,groups:[{index:t.index!=null?"index":void 0,primitive:Z.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:r}]})}return this._mesh}};var Ot=class extends lt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=pt(),this._overlayTechnique=new T}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(let t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==dt.MAP||!this.visible)return;super.doRender(e);let t=this._overlayTechnique;for(let o of this.children)o.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){let{state:t}=e,{id:o,size:r,pixelRatio:i,resolution:l,rotation:m,viewpoint:f,displayMat3:v}=t;if(this._viewStateId===o)return;let _=W(m),h=i*r[0],y=i*r[1];this._localOrigin=f.targetGeometry.clone();let{x:g,y:P}=this._localOrigin,M=Y(g,t.spatialReference);this._localOrigin.x=M,this._localOrigin.y=P;let A=l*h,D=l*y,a=tt(this._dvsMat3);et(a,a,v),ot(a,a,at(h/2,y/2)),st(a,a,nt(h/A,-y/D,1)),rt(a,a,-_),this._viewStateId=o}_updateOverlays(e,t){let{state:o}=e,{rotation:r,spatialReference:i,worldScreenWidth:l,size:m,viewpoint:f}=o,v=this._localOrigin,_,h=0,y=J(i);if(y&&i.isWrappable){let g=m[0],P=m[1],M=W(r),A=Math.abs(Math.cos(M)),D=Math.abs(Math.sin(M)),a=Math.round(g*A+P*D),[j,k]=y.valid,u=Mt(i),{x:H,y:bt}=f.targetGeometry,Rt=[H,bt],E=[0,0];o.toScreen(E,Rt);let S=[0,0],I;I=a>l?.5*l:.5*a;let Q=Math.floor((H+.5*u)/u),Tt=j+Q*u,Pt=k+Q*u,q=[E[0]+I,0];o.toMap(S,q),S[0]>Pt&&(h=u),q[0]=E[0]-I,o.toMap(S,q),S[0]<Tt&&(h=-u),_={worldWidth:u,xBounds:[j,k]}}for(let g of t)g.updateDrawCoords(v,h,i,_)}};export{Ot as a};
