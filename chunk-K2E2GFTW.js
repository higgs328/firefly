import{a as O}from"./chunk-P6M7OD5Q.js";import{a as D}from"./chunk-V7WSVLSI.js";import{a as m,g as f,h as b,i as j,j as A,x as u,y as c}from"./chunk-ITDLEL4J.js";import{a as P}from"./chunk-3JGYBNJA.js";import{a as l}from"./chunk-MIS6QMFE.js";import{a}from"./chunk-PEW2PLAN.js";import{a as B}from"./chunk-7F5DJLJT.js";import{a as s}from"./chunk-CX5IFQZJ.js";import"./chunk-NJWTSROP.js";import"./chunk-D3R25AF2.js";import"./chunk-ARRCN5K3.js";import"./chunk-X2B63YVS.js";import"./chunk-BAEF3CT6.js";import"./chunk-AUAZP44J.js";import"./chunk-PVDFCTA4.js";import"./chunk-KNVXE32P.js";import"./chunk-76ATOSLU.js";import{f as h}from"./chunk-CCJU4DSH.js";import{b as g}from"./chunk-ACP3S2CH.js";import"./chunk-HVAXZ2NA.js";import"./chunk-T7DXJKX7.js";import"./chunk-TYYVNQUR.js";import{a as e}from"./chunk-QGVBCWUY.js";import"./chunk-MYO4NP2N.js";import{e as o}from"./chunk-NFIPKH6V.js";import"./chunk-JPU2PQZC.js";import{l as w}from"./chunk-5QEXLALV.js";import{i as v}from"./chunk-P6QFA5MM.js";import"./chunk-DGTD7Y73.js";import"./chunk-LI2SX4T6.js";import"./chunk-BWO7LS2H.js";import"./chunk-HEVQSRJ2.js";import"./chunk-OVHPPCBL.js";import"./chunk-SNFOAZZQ.js";import"./chunk-AML4XSEF.js";import"./chunk-4PTIEWMT.js";import"./chunk-TG2UTNEO.js";import"./chunk-YOFFGXOB.js";import"./chunk-XRGPJ3QY.js";import"./chunk-6MRUJ2UW.js";import"./chunk-2LI2GKBQ.js";import"./chunk-QBWJMFH5.js";import"./chunk-VTHXE323.js";var d,t=d=class extends P.ClonableMixin(h){constructor(r){super(r),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultBreaks=null,this.excludeSourcesFromPolygons=null,this.facilities=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.mergeSimilarPolygonRanges=!1,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outputPolygons=null,this.outSpatialReference=null,this.overlapLines=!1,this.overlapPolygons=!1,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnFacilities=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.splitLinesAtBreaks=!1,this.splitPolygonsAtBreaks=!1,this.timeOfDay=null,this.timeOfDayIsUTC=null,this.travelDirection=null,this.travelMode=null,this.trimOuterPolygon=!1,this.trimPolygonDistance=null,this.trimPolygonDistanceUnits=null,this.useHierarchy=null}static from(r){return v(d,r)}readAccumulateAttributes(r){return r==null?null:r.map(i=>u.fromJSON(i))}writeAccumulateAttributes(r,i,n){r?.length&&(i[n]=r.map(p=>u.toJSON(p)))}writeFacilities(r,i,n){y(r,i,n)}writePointBarriers(r,i,n){y(r,i,n)}writePolygonBarrier(r,i,n){y(r,i,n)}writePolylineBarrier(r,i,n){y(r,i,n)}readRestrictionAttributes(r){return r==null?null:r.map(i=>c.fromJSON(i))}writeRestrictionAttributes(r,i,n){r?.length&&(i[n]=r.map(p=>c.toJSON(p)))}readTimeOfDay(r,i){let{timeOfDay:n}=i;return n==null?null:n==="now"?"now":new Date(n)}writeTimeOfDay(r,i){r!=null&&(i.timeOfDay=r==="now"?"now":r.getTime())}};e([o({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],t.prototype,"accumulateAttributes",void 0),e([a("accumulateAttributes")],t.prototype,"readAccumulateAttributes",null),e([s("accumulateAttributes")],t.prototype,"writeAccumulateAttributes",null),e([o(O)],t.prototype,"apiKey",void 0),e([o({json:{write:!0}})],t.prototype,"attributeParameterValues",void 0),e([o({type:[Number],json:{write:!0}})],t.prototype,"defaultBreaks",void 0),e([o({type:[String],json:{write:!0}})],t.prototype,"excludeSourcesFromPolygons",void 0),e([o({json:{write:!0}})],t.prototype,"facilities",void 0),e([s("facilities")],t.prototype,"writeFacilities",null),e([o({type:Number,json:{write:!0}})],t.prototype,"geometryPrecision",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"geometryPrecisionM",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"geometryPrecisionZ",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"ignoreInvalidLocations",void 0),e([l(u,{name:"impedanceAttributeName",ignoreUnknown:!1})],t.prototype,"impedanceAttribute",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"mergeSimilarPolygonRanges",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"outputGeometryPrecision",void 0),e([l(m)],t.prototype,"outputGeometryPrecisionUnits",void 0),e([l(f)],t.prototype,"outputLines",void 0),e([l(b)],t.prototype,"outputPolygons",void 0),e([o({type:B,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"overlapLines",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"overlapPolygons",void 0),e([o({json:{write:!0}})],t.prototype,"overrides",void 0),e([o({json:{name:"barriers",write:!0}})],t.prototype,"pointBarriers",void 0),e([s("pointBarriers")],t.prototype,"writePointBarriers",null),e([o({json:{write:!0}})],t.prototype,"polygonBarriers",void 0),e([s("polygonBarriers")],t.prototype,"writePolygonBarrier",null),e([o({json:{write:!0}})],t.prototype,"polylineBarriers",void 0),e([s("polylineBarriers")],t.prototype,"writePolylineBarrier",null),e([o({type:Boolean,json:{write:!0}})],t.prototype,"preserveObjectID",void 0),e([o({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],t.prototype,"restrictionAttributes",void 0),e([a("restrictionAttributes")],t.prototype,"readRestrictionAttributes",null),e([s("restrictionAttributes")],t.prototype,"writeRestrictionAttributes",null),e([l(j)],t.prototype,"restrictUTurns",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnFacilities",void 0),e([o({type:Boolean,json:{name:"returnBarriers",write:!0}})],t.prototype,"returnPointBarriers",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnPolygonBarriers",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnPolylineBarriers",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"splitLinesAtBreaks",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"splitPolygonsAtBreaks",void 0),e([o({json:{write:!0}})],t.prototype,"timeOfDay",void 0),e([a("timeOfDay")],t.prototype,"readTimeOfDay",null),e([s("timeOfDay")],t.prototype,"writeTimeOfDay",null),e([o({type:Boolean,json:{write:!0}})],t.prototype,"timeOfDayIsUTC",void 0),e([l(A)],t.prototype,"travelDirection",void 0),e([o({type:D,json:{write:!0}})],t.prototype,"travelMode",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"trimOuterPolygon",void 0),e([o({type:Number,json:{write:!0}})],t.prototype,"trimPolygonDistance",void 0),e([l(m)],t.prototype,"trimPolygonDistanceUnits",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"useHierarchy",void 0),t=d=e([w("esri.rest.support.ServiceAreaParameters")],t);var V=t;function y(r,i,n){r!=null&&(i[n]=g.isCollection(r)?{features:r.toArray().map(p=>p.toJSON())}:r.toJSON())}export{V as default};
