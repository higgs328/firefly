import{a as A,f as p,u as g}from"./chunk-KVM6SHDX.js";import{c as y}from"./chunk-VIEK2X23.js";import{f as v}from"./chunk-Q6Y4JG7Q.js";import{ca as d}from"./chunk-NJWTSROP.js";import{a as R}from"./chunk-TG2UTNEO.js";import{g as x}from"./chunk-XRGPJ3QY.js";var f=()=>x.getLogger("esri.layers.support.ElevationSampler"),c=class{queryElevation(e){return E(e.clone(),this)}on(){return R()}projectIfRequired(e,t){return w(e,t)}},h=class extends c{get spatialReference(){return this.extent.spatialReference}constructor(e,t,a){super(),this.tile=e,this.noDataValue=a;let s=e.tile.extent;this.extent=p(s,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=s;let i=d(t.spatialReference),o=t.lodAt(e.tile.level).resolution*i;this.demResolution={min:o,max:o}}contains(e){let t=this.projectIfRequired(e,this.spatialReference);return t!=null&&this.containsAt(t.x,t.y)}containsAt(e,t){return g(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){let a=this.extent,s=`${a.xmin}, ${a.ymin}, ${a.xmax}, ${a.ymax}`;return f().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}},$=class extends c{get spatialReference(){return this.extent.spatialReference}constructor(e,t,a){let s;super(),typeof t=="number"?(this.noDataValue=t,s=null):(s=t,this.noDataValue=a),this.samplers=s?e.map(o=>new h(o,s,this.noDataValue)):e;let i=this.samplers[0];if(i){this.extent=i.extent.clone();let{min:o,max:m}=i.demResolution;this.demResolution={min:o,max:m};for(let l=1;l<this.samplers.length;l++){let u=this.samplers[l];this.extent.union(u.extent),this.demResolution.min=Math.min(this.demResolution.min,u.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,u.demResolution.max)}}else this.extent=p(A(),s.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){let a,s=!1;for(let i of this.samplers)if(i.containsAt(e,t)&&(s=!0,a=i.elevationAt(e,t),a!==i.noDataValue))return a;return a??(s||f().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue)}};function E(n,e){let t=w(n,e.spatialReference);if(!t)return null;switch(n.type){case"point":D(n,t,e);break;case"polyline":V(n,t,e);break;case"multipoint":k(n,t,e)}return n}function w(n,e){if(n==null)return null;let t=n.spatialReference;if(t.equals(e))return n;let a=v(n,e);return a||f().error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),a}function D(n,e,t){n.z=t.elevationAt(e.x,e.y)}function V(n,e,t){r.spatialReference=e.spatialReference;let a=n.hasM&&!n.hasZ;for(let s=0;s<n.paths.length;s++){let i=n.paths[s],o=e.paths[s];for(let m=0;m<i.length;m++){let l=i[m],u=o[m];r.x=u[0],r.y=u[1],a&&(l[3]=l[2]),l[2]=t.elevationAt(r.x,r.y)}}n.hasZ=!0}function k(n,e,t){r.spatialReference=e.spatialReference;let a=n.hasM&&!n.hasZ;for(let s=0;s<n.points.length;s++){let i=n.points[s],o=e.points[s];r.x=o[0],r.y=o[1],a&&(i[3]=i[2]),i[2]=t.elevationAt(r.x,r.y)}n.hasZ=!0}var r=new y;export{c as a,h as b,$ as c,E as d};
