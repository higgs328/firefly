import{a as h}from"./chunk-DK4DGLAO.js";import{a as R}from"./chunk-EHG7JRYJ.js";import{a as j}from"./chunk-5ODXFRPI.js";import{a as O,c as L}from"./chunk-VL2YL74P.js";import{a as M}from"./chunk-P2AJD2R2.js";import{m as C}from"./chunk-N3HRYLNW.js";import{u as B,x as $}from"./chunk-KALOJIUA.js";import{b as I}from"./chunk-KMMTNF7G.js";import{a as _}from"./chunk-MIS6QMFE.js";import{a as N}from"./chunk-PEW2PLAN.js";import{a as T}from"./chunk-CX5IFQZJ.js";import{a as z}from"./chunk-G4DZJMGT.js";import{a as w}from"./chunk-BAEF3CT6.js";import{a as r}from"./chunk-QGVBCWUY.js";import{e as n}from"./chunk-NFIPKH6V.js";import{l as S}from"./chunk-5QEXLALV.js";import{e as V,j as E}from"./chunk-P6QFA5MM.js";import{g as d}from"./chunk-XRGPJ3QY.js";import{b as u}from"./chunk-2LI2GKBQ.js";import{a as k,b as v,f as m}from"./chunk-VTHXE323.js";var F,A="log",g="percent-of-total",b="field",y=new w({esriNormalizeByLog:A,esriNormalizeByPercentOfTotal:g,esriNormalizeByField:b}),H=E(h),o=F=class extends j(M){constructor(e){super(e),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type="class-breaks",this.valueExpression=null,this.valueExpressionTitle=null,this._set("classBreakInfos",[])}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let i=s.minValue;return e.map(a=>{let l=new h;return l.read(a,t),l.minValue==null&&(l.minValue=i),l.maxValue==null&&(l.maxValue=l.minValue),i=l.maxValue,l})}writeClassBreakInfos(e,s,t,i){let a=e.map(l=>l.write({},i));this._areClassBreaksConsecutive()&&a.forEach(l=>delete l.classMinValue),s[t]=a}castField(e){return e==null?e:typeof e=="function"?(d.getLogger(this).error(".field: field must be a string value"),null):V(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get("normalizationType"),s=!!this.normalizationField,t=this.normalizationTotal!=null;return s||t?(e=s&&b||t&&g||null,s&&t&&d.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):e!==b&&e!==g||(e=null),e}set normalizationType(e){this._set("normalizationType",e)}addClassBreakInfo(e,s,t){let i=null;i=typeof e=="number"?new h({minValue:e,maxValue:s,symbol:C(t)}):H(u(e)),this.classBreakInfos.push(i),this.classBreakInfos.length===1&&this.notifyChange("minValue")}removeClassBreakInfo(e,s){let t=this.classBreakInfos.length;for(let i=0;i<t;i++){let a=[this.classBreakInfos[i].minValue,this.classBreakInfos[i].maxValue];if(a[0]===e&&a[1]===s){this.classBreakInfos.splice(i,1);break}}}getBreakIndex(e,s){return this.valueExpression&&s?.arcade==null&&d.getLogger(this).warn(""),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}getClassBreakInfo(e,s){return m(this,null,function*(){let t=s;this.valueExpression&&s?.arcade==null&&(t=v(k({},t),{arcade:yield I()}));let i=this.getBreakIndex(e,t);return i!==-1?this.classBreakInfos[i]:null})}getSymbol(e,s){if(this.valueExpression&&s?.arcade==null)return void d.getLogger(this).error("#getSymbol()","Please use getSymbolAsync if valueExpression is used");let t=this.getBreakIndex(e,s);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}getSymbolAsync(e,s){return m(this,null,function*(){let t=s;if(this.valueExpression&&s?.arcade==null){let a=yield I(),{arcadeUtils:l}=a;l.hasGeometryOperations(this.valueExpression)&&(yield l.enableGeometryOperations()),t=v(k({},t),{arcade:a})}let i=this.getBreakIndex(e,t);return i>-1?this.classBreakInfos[i].symbol:this.defaultSymbol})}get symbols(){let e=[];return this.classBreakInfos.forEach(s=>{s.symbol&&e.push(s.symbol)}),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables?.reduce((e,s)=>e+s.getAttributeHash(),"")??""}getMeshHash(){let e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce((i,a)=>i+a.getMeshHash(),"")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new F({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol?.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol?.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:u(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:u(this.visualVariables),legendOptions:u(this.legendOptions),authoringInfo:u(this.authoringInfo)})}collectRequiredFields(e,s){return m(this,null,function*(){let t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];yield Promise.all(t)})}collectSymbolFields(e,s){return m(this,null,function*(){let t=[...this.symbols.map(i=>i.collectRequiredFields(e,s)),$(e,s,this.valueExpression)];B(e,s,this.field),B(e,s,this.normalizationField),yield Promise.all(t)})}_getBreakIndexForExpression(e,s){let{viewingMode:t,scale:i,spatialReference:a,arcade:l,timeZone:p}=s??{},{valueExpression:x}=this,f=this._compiledValueExpression.valueExpression===x?this._compiledValueExpression.compiledFunction:null,c=l.arcadeUtils;if(!f){let q=c.createSyntaxTree(x);f=c.createFunction(q),this._compiledValueExpression.compiledFunction=f}this._compiledValueExpression.valueExpression=x;let P=c.executeFunction(f,c.createExecContext(e,c.getViewInfo({viewingMode:t,scale:i,spatialReference:a}),p));return this._getBreakIndexfromInfos(P)}_getBreakIndexForField(e){let s=this.field,t=e.attributes,i=this.normalizationType,a=parseFloat(t[s]);if(i){let l=this.normalizationTotal,p=parseFloat(this.normalizationField?t[this.normalizationField]:void 0);if(i===A)a=Math.log(a)*Math.LOG10E;else if(i!==g||l==null||isNaN(l)){if(i===b&&!isNaN(p)){if(isNaN(a)||isNaN(p))return-1;a/=p}}else a=a/l*100}return this._getBreakIndexfromInfos(a)}_getBreakIndexfromInfos(e){let s=this.isMaxInclusive;if(e!=null&&typeof e=="number"&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){let i=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(i[0]<=e&&(s?e<=i[1]:e<i[1]))return t}return-1}_areClassBreaksConsecutive(){let e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};r([n(L)],o.prototype,"backgroundFillSymbol",void 0),r([n({type:[h],json:{write:{isRequired:!0}}})],o.prototype,"classBreakInfos",void 0),r([N("classBreakInfos")],o.prototype,"readClassBreakInfos",null),r([T("classBreakInfos")],o.prototype,"writeClassBreakInfos",null),r([n({type:String,json:{write:!0}})],o.prototype,"defaultLabel",void 0),r([n(O)],o.prototype,"defaultSymbol",void 0),r([n({type:String,json:{write:!0}})],o.prototype,"field",void 0),r([z("field")],o.prototype,"castField",null),r([n({type:Boolean})],o.prototype,"isMaxInclusive",void 0),r([n({type:R,json:{write:!0}})],o.prototype,"legendOptions",void 0),r([n({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return this.classBreakInfos.length!==0&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],o.prototype,"minValue",null),r([n({type:String,json:{write:!0}})],o.prototype,"normalizationField",void 0),r([n({type:Number,json:{write:!0}})],o.prototype,"normalizationTotal",void 0),r([n({type:y.apiValues,value:null,json:{type:y.jsonValues,read:y.read,write:y.write}})],o.prototype,"normalizationType",null),r([_({classBreaks:"class-breaks"})],o.prototype,"type",void 0),r([n({type:String,json:{write:!0}})],o.prototype,"valueExpression",void 0),r([n({type:String,json:{write:!0}})],o.prototype,"valueExpressionTitle",void 0),o=F=r([S("esri.renderers.ClassBreaksRenderer")],o);var ue=o;export{ue as a};
