import{L as c}from"./chunk-NJWTSROP.js";import{a as _,c as C,m as V}from"./chunk-D3R25AF2.js";import"./chunk-ARRCN5K3.js";import"./chunk-X2B63YVS.js";import"./chunk-BAEF3CT6.js";import"./chunk-AUAZP44J.js";import"./chunk-PVDFCTA4.js";import"./chunk-KNVXE32P.js";import"./chunk-76ATOSLU.js";import"./chunk-CCJU4DSH.js";import"./chunk-QGVBCWUY.js";import"./chunk-MYO4NP2N.js";import"./chunk-NFIPKH6V.js";import"./chunk-JPU2PQZC.js";import"./chunk-5QEXLALV.js";import"./chunk-P6QFA5MM.js";import"./chunk-DGTD7Y73.js";import"./chunk-LI2SX4T6.js";import"./chunk-BWO7LS2H.js";import"./chunk-HEVQSRJ2.js";import"./chunk-OVHPPCBL.js";import"./chunk-SNFOAZZQ.js";import"./chunk-AML4XSEF.js";import"./chunk-4PTIEWMT.js";import"./chunk-TG2UTNEO.js";import"./chunk-YOFFGXOB.js";import"./chunk-XRGPJ3QY.js";import"./chunk-6MRUJ2UW.js";import"./chunk-2LI2GKBQ.js";import"./chunk-QBWJMFH5.js";import{f}from"./chunk-VTHXE323.js";var m;function x(){return!!m&&_()}function P(){return f(this,null,function*(){if(!x()){let[t,r]=yield Promise.all([import("./chunk-T7T6JETM.js"),import("./chunk-OMSSOMXN.js").then(e=>e.aG).then(({injectPe:e})=>e),C()]);m=new t.OperatorProximityGeodesic,r(V)}})}function v(t,r,e,n,a,s){return m.getNearestCoordinate(t,r,e,n,a,s)}function y(t,r,e){return m.getNearestVertex(t,r,e)}function L(t,r,e,n,a){return m.getNearestVertices(t,r,e,n,a)}function R(){return m.supportsCurves()}var u,p,g,l,N,h;function w(){return!!u&&x()}function D(){return f(this,null,function*(){if(!w()){let[t,r]=yield Promise.all([import("./chunk-LTFXA7ON.js"),import("./chunk-SAQJIO4I.js"),P()]);u=t.fromGeometry,p=t.fromPoint,g=t.fromSpatialReference,l=t.getSpatialReference,N=r.toProximityResult,h=R()}})}function I(t,r,e={}){let{calculateLeftRightSide:n=!1,maxDeviation:a=NaN,testPolygonInterior:s=!0,unit:o}=e;o&&a&&(a=c(a,o,"meters"));let i=l(t),d=v(u(t),p(r).getXY(),g(i),a,s,n);return o&&d.m_distance&&(d.m_distance=c(d.m_distance,"meters",o)),N(d,t,n)}function O(t,r,e={}){let{unit:n}=e,a=l(t),s=y(u(t),p(r).getXY(),g(a));return n&&s.m_distance&&(s.m_distance=c(s.m_distance,"meters",n)),N(s,t)}function U(t,r,e,n,a={}){let{unit:s}=a;s&&e&&(e=c(e,s,"meters"));let o=l(t);return L(u(t),p(r).getXY(),g(o),e,n).map(i=>(s&&i.m_distance&&(i.m_distance=c(i.m_distance,"meters",s)),N(i,t)))}export{I as getNearestCoordinate,O as getNearestVertex,U as getNearestVertices,w as isLoaded,D as load,h as supportsCurves};
