import{a as g}from"./chunk-NFRBKTFJ.js";import{a as s}from"./chunk-BAXUDVHK.js";import{c as d}from"./chunk-BMYVPMAK.js";import{g as u}from"./chunk-ZC6EBRE4.js";import{a as l}from"./chunk-CX5IFQZJ.js";import{la as o,ma as a}from"./chunk-NJWTSROP.js";import{a as r}from"./chunk-QGVBCWUY.js";import{e as t}from"./chunk-NFIPKH6V.js";import{l as y}from"./chunk-5QEXLALV.js";import{b as n}from"./chunk-2LI2GKBQ.js";var p,e=p=class extends g{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(i,m,h){i!=null&&(m.geometryType=u(i),m[h]=i.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new p(n({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([t({types:d,json:{name:"fromGeometry",read:!0,write:!0}})],e.prototype,"geometry",void 0),r([l("geometry")],e.prototype,"writeGeometry",null),r([t({type:s.apiValues,json:{write:s.write}})],e.prototype,"measureOperation",null),r([t({json:{read:!0}})],e.prototype,"is3D",void 0),r([t({type:String,json:{read:a.read,write:a.write}})],e.prototype,"linearUnit",void 0),r([t({type:String,json:{read:o.read,write:o.write}})],e.prototype,"areaUnit",void 0),e=p=r([y("esri.rest.support.ImageAreaParameters")],e);var G=e;export{G as a};
