import{a as H}from"./chunk-6Y5UZPT2.js";import{a as Te,b as J,c as U,f as me,g as q,h as xe}from"./chunk-CR343OBM.js";import{a as it}from"./chunk-HM5K6MR4.js";import{a as tt,c as st}from"./chunk-2KWY7Q4D.js";import{k as et}from"./chunk-AFJIRAY7.js";import{a as Ze}from"./chunk-E424TX4V.js";import{b as Qe,c as Z}from"./chunk-FBLD2WHY.js";import{a as Se,b as le,c as ze,d as He,e as Je,f as Ue,g as Ge,h as je,i as We,j as Ve,k as qe}from"./chunk-AULXBTED.js";import{e as ye,f as Ke,g as Q}from"./chunk-4SRR6EC6.js";import{q as Ye,s as $e,t as Xe}from"./chunk-Y3KWVZKS.js";import{b as X}from"./chunk-ZWHAEUE3.js";import{b as Le}from"./chunk-E56W4PK4.js";import{a as K,b as V}from"./chunk-2CC7WNFC.js";import{a as ge}from"./chunk-4YTM754S.js";import{a as Be}from"./chunk-6F25LG6O.js";import{a as oe}from"./chunk-DZFUQCB6.js";import{m as B}from"./chunk-ZQIC5NFT.js";import{c as G}from"./chunk-VIEK2X23.js";import{a as D}from"./chunk-7F5DJLJT.js";import{k as Ne}from"./chunk-NJWTSROP.js";import{c as De}from"./chunk-WFKZLI6F.js";import{k as Ae}from"./chunk-76ATOSLU.js";import{a as E}from"./chunk-QGVBCWUY.js";import{e as A}from"./chunk-NFIPKH6V.js";import{l as z}from"./chunk-5QEXLALV.js";import{B as de,a as Pe,o as Ee}from"./chunk-4PTIEWMT.js";import{b as F}from"./chunk-YOFFGXOB.js";import{g as Fe}from"./chunk-XRGPJ3QY.js";import{a as Oe,y as ne}from"./chunk-QBWJMFH5.js";import{a as W,b as re,f as O}from"./chunk-VTHXE323.js";function Ce(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function Me(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function ft(t){let{axes:e}=t.domain,i=Object.keys(e),s=[],r=[],n=-1,a=-1,l=[];for(let x=0;x<i.length;x++){let y=i[x];Ce(y)?n=x:Me(y)&&(a=x);let I=e[y],b=[];if("values"in I){I.values.forEach(S=>b.push(typeof S=="string"?new Date(S).getTime():S));let R=b[1]-b[0];s.push([b[0]-.5*R,b[b.length-1]+.5*R]),r.push(R)}else{let{start:R,stop:S,num:v}=I,P=(S-R)/(v-1);s.push([R-.5*P,S+.5*P]),r.push(P);for(let T=0;T<v;T++)b.push(R+P*T)}l.push({name:y,values:b,extent:[b[0],b[b.length-1]]})}n>-1&&a===-1?a=n===0?1:0:a>-1&&n===-1?n=a===0?1:0:a===-1&&n===-1&&(n=0,a=1),l=l.filter((x,y)=>!(y===n||y===a));let{referencing:o}=t.domain,c=o.find(x=>x.coordinates.includes(i[n])).system.id,m=c?.slice(c.lastIndexOf("/")+1),p=m==null||m==="CRS84"?4326:Number(m),u=new D({wkid:p}),[f,g]=s[n],[d,w]=s[a],h=new B({xmin:f,xmax:g,ymin:d,ymax:w,spatialReference:u});return{width:Math.round(h.width/r[n]),height:Math.round(h.height/r[a]),extent:h,dimensions:l}}function ve(t){let e=De();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function Re(){return Math.round(255*Math.random())}function ut(t){let e={},{parameters:i}=t;if(!i)return e;for(let[s,r]of Object.entries(i)){let{type:n,description:a,unit:l,categoryEncoding:o,observedProperty:c}=r;if(n==="Parameter"&&(e[s]={},a&&(e[s].description=ve(a)),l&&(e[s].unit=l.label?ve(l.label):null,e[s].symbol=l.symbol?.value),o)){let m=Object.entries(o).map((f,g)=>({OID:g,Value:Number(f[1]),ClassName:f[0].slice(f[0].lastIndexOf("/")+1),Count:1})),p=!1;c?.categories?.length&&(c.categories.forEach(f=>{if(!f.id)return;let g=f.id.slice(f.id.lastIndexOf("/")+1),d=m.find(h=>h.ClassName===g);if(!d)return;let w=f.label?ve(f.label):null;if(d.Label=w,f.preferredColor){let h=Be.fromHex(f.preferredColor);h&&(p=!0,d.Red=h.r,d.Green=h.g,d.Blue=h.b)}}),p&&m.forEach(f=>{f.Red==null&&(f.Red=Re(),f.Green=Re(),f.Blue=Re())}));let u={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:m.map(f=>({attributes:f}))};p&&u.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[s].attributeTable=u}}return e}function pt(t){let e=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let s=0;s<t.length;s++){let r=t[s];r!=null&&(r<e&&(e=r),r>i&&(i=r))}return Le(e,i)}function ht(t,e,i){let s=t.map((o,c)=>({name:o,count:e[c]})).sort((o,c)=>o.name>c.name?-1:1),r=(n=1,o=>n*=o.count);var n;let a=[...s.slice(1),{name:"",count:1}].reverse().map(r).reverse(),l=0;for(let o=t.length-1;o>=0;o--)l+=a[s.findIndex(({name:c})=>c===t[o])]*(i%e[o]),i=Math.floor(i/e[o]);return l}function at(t){let{width:e,height:i,extent:s,dimensions:r}=ft(t),{ranges:n}=t,a=Object.keys(n).sort((u,f)=>u<f?-1:1),l=[];for(let u=0;u<a.length;u++){let f=a[u];r?.length&&l.push({name:f,dimensions:r})}let o=ut(t);l.forEach(u=>o[u.name]&&Object.assign(u,o[u.name]));let c=l.length?{variables:l}:void 0,m=[];for(let u=0;u<a.length;u++){let f=a[u],{values:g,dataType:d,axisNames:w,shape:h}=n[f],x=h.length>2?u*h.slice(0,-2).reduce((v,P)=>v*P):0,y=w.slice(0,-2),I=h.slice(0,-2),b=d==="float"?"f32":pt(g),R=e*i,S=g.length/R;for(let v=0;v<S;v++){let P=X.createEmptyBand(b,R),T=new Uint8Array(R).fill(255),C=!1,_=v*R;for(let M=0;M<R;M++){let k=g[_+M];k==null?(T[M]=0,C=!0):P[M]=k}if(u===0||r?.length){let M=new X({width:e,height:i,mask:C?T:null,pixels:[P],pixelType:b});M.updateStatistics(),r?.length?m[ht(y,I,v)+x]=M:m.push(M)}else{let M=m[v];M.pixels.push(P),C?M.mask&&(M.mask=X.combineBandMasks([M.mask,T])):M.mask=C?T:null}}}let p=Object.values(o).find(u=>u.attributeTable)?.attributeTable;return{extent:s,pixelBlocks:m,multidimensionalInfo:c,attributeTable:p,bandNames:c?void 0:a}}var ee=class extends H{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(t,e,i,s={}){if(!this._pixelBlockTiles){let{rasterInfo:n}=this,[a,l]=n.storageInfo.tileInfo.size,{sliceId:o}=s,{pixelBlocks:c}=this.source,m={pixelBlock:o==null?c[0]:c[o],useBilinear:n.dataType!=="thematic",tileSize:{width:a,height:l},level:t,row:e,col:i},p=this.rasterJobHandler?this.rasterJobHandler.clipTile(m,s):Xe(m);return Promise.resolve(p)}let r=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(r)}_open(t){return O(this,null,function*(){let e=this.source,{pixelBlocks:i,attributeTable:s,statistics:r,histograms:n,name:a,nativeExtent:l,transform:o}=e,c=i[0],{width:m,height:p,pixelType:u}=c,f=e.extent??new B({xmin:-.5,ymin:.5,xmax:m-.5,ymax:p-.5,spatialReference:new D({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,d={x:f.width/m,y:f.height/p},w=W({},e.keyProperties);s&&(w.DataType="Thematic");let h=new V({width:m,height:p,pixelType:u,extent:f,nativeExtent:l,attributeTable:s,transform:o,pixelSize:d,spatialReference:f.spatialReference,bandCount:c.pixels.length,keyProperties:w,multidimensionalInfo:e.multidimensionalInfo,statistics:r,isPseudoSpatialReference:g,histograms:n});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(h),this.createRemoteDatasetStorageInfo(h,512,512),this._set("rasterInfo",h),this.updateTileInfo(),h.multidimensionalInfo?yield this._buildMDimStats(e.pixelBlocks,h.multidimensionalInfo):yield this._buildInMemoryRaster(c,{width:512,height:512},t),h.multidimensionalInfo||(this.source=null),this.datasetName=a})}_buildInMemoryRaster(t,e,i){return O(this,null,function*(){let{rasterInfo:s}=this,r=s.storageInfo.maximumPyramidLevel??0,n=s.dataType!=="thematic",a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:r,useBilinear:n},i):Promise.resolve($e(t,e,r,n)),l=s.statistics!=null,o=s.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(Ke(t)),m=yield de([a,c]);if(!m[0].value&&m[1].value)throw new F("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,l||(s.statistics=m[1].value?.statistics),o||(s.histograms=m[1].value?.histograms)})}_buildMDimStats(t,e,i){return O(this,null,function*(){for(let s=0;s<e.variables.length;s++){let r=e.variables[s];if(r.statistics)continue;let n=r.dimensions.map(c=>new Ze({variableName:r.name,dimensionName:c.name,values:[c.values?.[0]??c.extent?.[0]],isSlice:!0})),a=et(n,e),l=a==null?null:t[a];if(l==null)continue;let o=this.rasterJobHandler?yield this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},i):ye(l);r.statistics=o.statistics,r.histograms||(r.histograms=o.histograms)}})}};E([A({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),E([A()],ee.prototype,"source",void 0),E([A()],ee.prototype,"url",null),ee=E([z("esri.layers.support.rasterDatasets.InMemoryRaster")],ee);var te=ee;var ce=class extends H{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(t,e,i,s={}){return this._inMemoryRaster.fetchRawTile(t,e,i,s)}_open(t){return O(this,null,function*(){let{extent:e,pixelBlocks:i,multidimensionalInfo:s,attributeTable:r,bandNames:n}=yield this._fetchData(t),{statistics:a,histograms:l}=ye(i[0]),o=n?.map(u=>({BandName:u})),c={DataType:r?"Thematic":s?"Scientific":"Generic",BandProperties:o},m=new te({source:{extent:e,pixelBlocks:i,attributeTable:r?ge.fromJSON(r):null,multidimensionalInfo:s,statistics:a,histograms:l,keyProperties:c,isPseudoSpatialReference:!1}});yield m.open(),this._inMemoryRaster=m;let p=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",p.slice(0,p.indexOf("."))),this._set("rasterInfo",m.rasterInfo)})}_fetchData(t){return O(this,null,function*(){let e=this.source??(yield this.request(this.url,{signal:t?.signal})).data,i="imagery-tile-layer:open-coverage-json";if(e.type?.toLowerCase()!=="coverage"||e.domain?.domainType?.toLowerCase()!=="grid")throw new F(i,"Only coverage with Grid domain type is supported");if(!e.ranges)throw new F(i,"Missing ranges in the grid coverage data");if(!e.domain.referencing?.length)throw new F(i,"Missing domain referencing in the grid coverage data");let s=Object.values(e.ranges);for(let r=0;r<s.length;r++){let{axisNames:n,shape:a,type:l,values:o}=s[r];if(!(l.toLowerCase()==="ndarray"&&o?.length&&n?.length&&a?.length))throw new F(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(Ce(n[n.length-1])&&Me(n[n.length-2])))throw new F(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return at(e)})}};E([A({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),E([A({constructOnly:!0})],ce.prototype,"source",void 0),ce=E([z("esri.layers.support.rasterDatasets.CovJSONRaster")],ce);var rt=ce;function nt(t,e){if(!t||!e)return null;let i=[];for(let s=0;s<t.length;s++)i.push(t[s]),i.push(e[s]);return i}function dt(t){let e=J(t,"GeodataXform"),i=se(q(e,"SpatialReference/WKID")||U(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:i,transform:null};let s=q(e,"PolynomialOrder")??1,r=me(e,"CoeffX/Double"),n=me(e,"CoeffY/Double"),a=me(e,"InverseCoeffX/Double"),l=me(e,"InverseCoeffY/Double"),o=nt(r,n),c=nt(a,l);return{spatialReference:i,transform:o&&c&&o.length&&c.length?new Z({spatialReference:i,polynomialOrder:s,forwardCoefficients:o,inverseCoefficients:c}):null}}function gt(t){let e=q(t,"NoDataValue"),i=J(t,"Histograms/HistItem"),s=q(i,"HistMin"),r=q(i,"HistMax"),n=q(i,"BucketCount"),a=U(i,"HistCounts")?.split("|").map(u=>Number(u)),l,o,c,m;Te(t,"Metadata/MDI").forEach(u=>{let f=Number(u.textContent??u.nodeValue);switch(u.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=f;break;case"STATISTICS_MAXIMUM":o=f;break;case"STATISTICS_MEAN":c=f;break;case"STATISTICS_STDDEV":m=f}});let p=q(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a?.length&&s!=null&&r!=null?{min:s,max:r,size:n||a.length,counts:a}:null,sourceBandIndex:p,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:m}:null}}function se(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new D({wkid:e});if(t=String(t).trim(),Ne(t))return new D({wkt2:t});let i=t.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;let s=i.indexOf("VERTCS"),r=i.indexOf("PROJCS"),n=r>-1?r:i.indexOf("GEOGCS");if(n===-1)return null;let a=t.slice(n,t.lastIndexOf("]",s)+1).trim(),l=t.slice(s,t.lastIndexOf("]")).trim();e=_e(a);let o=new D(e?{wkid:e}:{wkt:a}),c=_e(l);return c&&(o.vcsWkid=c),o}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=_e(t),new D(e!==0?{wkid:e}:{wkt:t})):null}function _e(t){let e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(r=>r.trim()).filter(r=>r!==""),i=e[e.length-1].split(","),s=i[0]?.toLowerCase();if((s==="epsg"||s==="esri")&&t.endsWith('"]]')){let r=Number(i[1]);if(!isNaN(r)&&r!==0)return r}return 0}function ie(t){if(t?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};let e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(xe(s,"SRS")){if(!e.spatialReference){let r=U(s);e.spatialReference=se(r)}}else if(xe(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){let{spatialReference:r,transform:n}=dt(s);e.transform=n,e.spatialReference||(e.spatialReference=r)}else Te(s,"MDI").forEach(r=>e.metadata[r.getAttribute("key")]=U(r));else if(xe(s,"PAMRasterBand")){let r=gt(s);r.sourceBandIndex!=null&&e.rasterBands[r.sourceBandIndex]==null?e.rasterBands[r.sourceBandIndex]=r:e.rasterBands.push(r)}}});let i=e.rasterBands;if(i.length){let s=!!i[0].statistics;e.statistics=s?i.map(n=>n.statistics).filter(ne):null;let r=!!i[0].histogram;e.histograms=r?i.map(n=>n.histogram).filter(ne):null}return e}var we=class extends H{fetchRawTile(t,e,i,s={}){return this._inMemoryRaster.fetchRawTile(t,e,i,s)}_open(t){return O(this,null,function*(){let e=yield this._fetchData(t),{spatialReference:i,statistics:s,histograms:r,transform:n}=yield this._fetchAuxiliaryData(t),a=!i;a&&(i=new D({wkid:3857})),r?.length&&s==null&&(s=Q(r));let{width:l,height:o}=e,c=new B({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:i}),m=n?n.forwardTransform(c):c,p=!0;if(n){let f=n.forwardCoefficients;p=f&&f[1]===0&&f[2]===0,p&&(n=null,c=m)}let u=new te({source:{extent:m,nativeExtent:c,transform:n,pixelBlocks:[e],statistics:s,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(u.ioConfig.skipMapInfo=!0),yield u.open(),u.source=null,this._set("rasterInfo",u.rasterInfo),this._inMemoryRaster=u})}_fetchData(t){return O(this,null,function*(){let{data:e}=yield this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),i=qe(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new F("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);let s=i.toLowerCase(),r=s==="gif"||s==="bmp"||!Oe("ios"),n=yield this.decodePixelBlock(e,{format:s,useCanvas:r,hasNoZlibMask:!0});if(n==null)throw new F("image-aux-raster:open","the data cannot be decoded");return n})}_fetchAuxiliaryData(t){return O(this,null,function*(){let e=t?.signal,{skipExtensions:i=[],skipMapInfo:s}=this.ioConfig,r=s||i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),n=this.datasetFormat,a=n==="JPG"?"jgw":n==="PNG"?"pgw":n==="BMP"?"bpw":null,l=a&&i.includes(a)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+a,{responseType:"text",signal:e}),o=yield de([r,l]);if(e?.aborted)throw Ee();let c=ie(o[0].value?.data);if(!c.transform){let m=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(p=>Number(p)):null;c.transform=m?.length===6?new Z({forwardCoefficients:[m[4],m[5],m[0],-m[1],m[2],-m[3]]}):null}return c})}};E([A({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),we=E([z("esri.layers.support.rasterDatasets.ImageAuxRaster")],we);var fe=we;var ue=class extends H{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}fetchRawTile(r,n,a){return O(this,arguments,function*(t,e,i,s={}){let{storageInfo:l,extent:o}=this.rasterInfo,{transposeInfo:c}=l,m=c!=null&&!!s.transposedVariableName;if(this._slices&&!m&&s.sliceId==null)return null;let p=m?0:l.maximumPyramidLevel-t+this._levelOffset,u=`${this.url}/tile/${p}/${e}/${i}`,f=this._slices?m?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:g}=yield this.request(u,{query:f,responseType:"array-buffer",signal:s.signal});if(!g)return null;let d=m?c.tileSize:l.tileInfo.size,w=yield this.decodePixelBlock(g,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:m,noDataValue:this.rasterInfo.noDataValue});if(w==null)return null;let h=l.blockBoundary[t];if(l.compression!=="jpg"||i>h.minCol&&i<h.maxCol&&e>h.minRow&&e<h.maxRow)return w;let{origin:x,blockWidth:y,blockHeight:I}=l,{x:b,y:R}=this.getPyramidPixelSize(t),S=Math.round((o.xmin-x.x)/b)%y,v=Math.round((o.xmax-x.x)/b)%y||y,P=Math.round((x.y-o.ymax)/R)%I,T=Math.round((x.y-o.ymin)/R)%I||I,C=i===h.minCol?S:0,_=e===h.minRow?P:0,M=i===h.maxCol?v:y,k=e===h.maxRow?T:I;return Ye(w,{x:C,y:_},{width:M-C,height:k-_}),w})}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;let e=t;for(let i=0;i<this._slices.length;i++){let s=this._slices[i].multidimensionalDefinition;if(s.length===e.length&&!s.some(r=>{let n=e.find(a=>r.variableName===a.variableName&&a.dimensionName===r.dimensionName);return n?(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return i}return null}fetchVariableStatisticsHistograms(t,e){return O(this,null,function*(){let i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>n.data?.statistics),s=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>n.data?.histograms),r=yield Promise.all([i,s]);return r[0]&&r[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),r[1]?.[0]?.counts?.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}})}computeBestPyramidLevelForLocation(i){return O(this,arguments,function*(t,e={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(t,0,e.datumTransformation);if(s===null)return null;let r=0,{maximumPyramidLevel:n}=this.rasterInfo.storageInfo,a=n-r+this._levelOffset,l=s.srcLocation;for(;a>=0;){try{if((yield this._tilemapCache.fetchAvailability(a,s.row,s.col,e))==="available")break}catch{}if(a--,r++,s=this.identifyPixelLocation(l,r,e.datumTransformation),s===null)return null}return a===-1||s==null?null:r})}_open(t){return O(this,null,function*(){let e=t?.signal,i=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let s=i.data;if(this.sourceJSON=s,!s)throw new F("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new F("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();let r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(r.includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name?.slice(s.name.indexOf("/")+1)??"";let n=yield this._fetchRasterInfo({signal:e});if(n==null)throw new F("image-server-raster:open","cannot initialize image service");st(n,s);let a=this.tileType==="Map"?yt(s.tileInfo,s):oe.fromJSON(s.tileInfo);Pe(a);let[l,o]=this._computeMinMaxLOD(n,a),{extent:c,pixelSize:m}=n,p=.5/n.width*m.x,u=Math.max(m.x,m.y),{lods:f}=a;(this.tileType!=="Map"&&s.maxScale!==0||Math.abs(m.x-m.y)>p||!f.some(S=>Math.abs(S.resolution-u)<p))&&(m.x=m.y=l.resolution,n.width=Math.ceil((c.xmax-c.xmin)/m.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/m.y-.1));let g=l.level-o.level,[d,w]=a.size,h=[],x=[];f.forEach((S,v)=>{S.level>=o.level&&S.level<=l.level&&h.push({x:S.resolution,y:S.resolution}),v<f.length-1&&x.push(Math.round(10*S.resolution/f[v+1].resolution)/10)}),h.sort((S,v)=>S.x-v.x);let y=this.computeBlockBoundary(c,d,w,a.origin,h,g),I=h.length>1?h.slice(1):null,b;s.transposeInfo&&(b={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});let R=x.length<=1||x.length>=3&&x.slice(0,-1).every(S=>S===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/g))/10;if(n.storageInfo=new K({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:I,pyramidScalingFactor:R,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:a,transposeInfo:b,blockBoundary:y}),xt(n),this._set("rasterInfo",n),s.capabilities.toLowerCase().includes("tilemap")){let S={tileInfo:n.storageInfo.tileInfo,parsedUrl:Ae(this.url),url:this.url,tileServers:[]};this._tilemapCache=new it({layer:S})}})}_fetchRasterInfo(t){return O(this,null,function*(){let e=this.sourceJSON;if(this.tileType==="Map"){let a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=D.fromJSON(e.spatialReference||a.spatialReference),m=new G({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new V({width:l,height:o,bandCount:3,extent:B.fromJSON(a),spatialReference:c,pixelSize:m,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}let{signal:i}=t,s=tt(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(a=>a.data?.slices).catch(()=>null):null,n=yield Promise.all([s,r]);return this._slices=n[1],n[0]})}_fixScaleInServiceInfo(){let{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){let{pixelSize:i}=t,s=.5/t.width*i.x,{lods:r}=e,n=e.lodAt(Math.max.apply(null,r.map(u=>u.level))),a=e.lodAt(Math.min.apply(null,r.map(u=>u.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=r[0].level,[n,a];if(l==="Raster")return[r.find(u=>u.resolution===i.x)??n,a];let{minScale:o,maxScale:c}=this.sourceJSON,m=n;c>0&&(m=r.find(u=>Math.abs(u.scale-c)<s),m||(m=r.filter(u=>u.scale>c).sort((u,f)=>u.scale>f.scale?1:-1)[0]??n));let p=a;return o>0&&(p=r.find(u=>Math.abs(u.scale-o)<s)??a,this._levelOffset=p.level-a.level),[m,p]}};function yt(t,e){if(!t)return null;let{minScale:i,maxScale:s,minLOD:r,maxLOD:n}=e;if(r!=null&&n!=null)return oe.fromJSON(re(W({},t),{lods:t.lods.filter(({level:a})=>a!=null&&a>=r&&a<=n)}));if(i!==0&&s!==0){let a=c=>Math.round(1e4*c)/1e4,l=i?a(i):1/0,o=s?a(s):-1/0;return oe.fromJSON(re(W({},t),{lods:t.lods.filter(c=>{let m=a(c.scale);return m<=l&&m>=o})}))}return oe.fromJSON(t)}function xt(t){let{extent:e,spatialReference:i}=t;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Qe,t.extent=t.transform.forwardTransform(e))}E([A({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),E([A()],ue.prototype,"tileType",void 0),ue=E([z("esri.layers.support.rasterDatasets.ImageServerRaster")],ue);var ot=ue;var j=new Map;j.set("Int8","s8"),j.set("UInt8","u8"),j.set("Int16","s16"),j.set("UInt16","u16"),j.set("Int32","s32"),j.set("UInt32","u32"),j.set("Float32","f32"),j.set("Float64","f32"),j.set("Double64","f32");var Y=new Map;Y.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Y.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Y.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Y.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});var ae=class extends H{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}fetchRawTile(r,n,a){return O(this,arguments,function*(t,e,i,s={}){let{blockWidth:l,blockHeight:o,blockBoundary:c}=this.rasterInfo.storageInfo,m=c[t];if(!m||m.maxRow<e||m.maxCol<i||m.minRow>e||m.minCol>i)return null;let{bandCount:p,pixelType:u}=this.rasterInfo,{ranges:f,actualTileWidth:g,actualTileHeight:d}=this._getTileLocation(t,e,i);if(!f||f.length===0)return null;if(f[0].from===0&&f[0].to===0){let k=new Uint8Array(l*o);return new X({width:l,height:o,pixels:void 0,mask:k,validPixelCount:0})}let{bandIds:w}=this.ioConfig,h=this._getBandSegmentCount(),x=[],y=0;for(y=0;y<h;y++)w&&!w.includes(y)||x.push(this.request(this._files.data,{range:{from:f[y].from,to:f[y].to},responseType:"array-buffer",signal:s.signal}));let I=yield Promise.all(x),b=I.map(k=>k.data.byteLength).reduce((k,L)=>k+L),R=new Uint8Array(b),S=[],v=0;for(y=0;y<h;y++)S.push(v),R.set(new Uint8Array(I[y].data),v),v+=I[y].data.byteLength;let P=Y.get(this.rasterInfo.storageInfo.compression).decoderFormat,T=yield this.decodePixelBlock(R.buffer,{width:l,height:o,format:P,planes:w?.length||p,offsets:S,pixelType:u});if(T==null)return null;let{noDataValue:C}=this.rasterInfo;if(C!=null&&P!=="lerc"&&!T.mask&&(C=C[0],C!=null)){let k=T.width*T.height,L=new Uint8Array(k);if(Math.abs(C)>1e24)for(y=0;y<k;y++)Math.abs((T.pixels[0][y]-C)/C)>1e-6&&(L[y]=1);else for(y=0;y<k;y++)T.pixels[0][y]!==C&&(L[y]=1);T.mask=L}let _=0,M=0;if(g!==l||d!==o){let k=T.mask;if(k)for(y=0;y<o;y++)if(M=y*l,y<d)for(_=g;_<l;_++)k[M+_]=0;else for(_=0;_<l;_++)k[M+_]=0;else for(k=new Uint8Array(l*o),T.mask=k,y=0;y<d;y++)for(M=y*l,_=0;_<g;_++)k[M+_]=1}return T})}_open(t){return O(this,null,function*(){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let e=t?t.signal:null,i=yield this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:r}=this._parseHeader(i.data),{skipMapInfo:n,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!n){let h=yield this._fetchAuxiliaryData(t);h!=null&&(s.statistics=h.statistics??s.statistics,s.histograms=h.histograms,h.histograms&&s.statistics==null&&(s.statistics=Q(h.histograms)))}n&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=r;let l=yield this.request(r.index,{responseType:"array-buffer",signal:e});this._storageIndex=wt(l.data);let{blockWidth:o,blockHeight:c}=this.rasterInfo.storageInfo,m=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:u}=this.rasterInfo,f=[],g=this._getBandSegmentCount(),d=0,w=-1;for(;d<this._storageIndex.length;){w++;let h=Math.ceil(p/o/m**w)-1,x=Math.ceil(u/c/m**w)-1;d+=(h+1)*(x+1)*g*4,f.push({maxRow:x,maxCol:h,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,w>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=w),this.updateTileInfo()})}_getBandSegmentCount(){return Y.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){let{blockWidth:s,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,o=this._getBandSegmentCount(),c,m,p,u=0,f=0;for(p=0;p<t;p++)f=n**p,c=Math.ceil(a/s/f),m=Math.ceil(l/r/f),u+=c*m;f=n**t,c=Math.ceil(a/s/f),m=Math.ceil(l/r/f),u+=e*c+i,u*=4*o;let g=this._storageIndex.subarray(u,u+4*o),d=0,w=0,h=[];for(let x=0;x<o;x++)d=g[4*x]*2**32+g[4*x+1],w=d+g[4*x+2]*2**32+g[4*x+3],h.push({from:d,to:w});return{ranges:h,actualTileWidth:i<c-1?s:Math.ceil(a/f)-s*(c-1),actualTileHeight:e<m-1?r:Math.ceil(l/f)-r*(m-1)}}_parseHeader(t){let e=J(t,"MRF_META/Raster");if(!e)throw new F("mrf:open","not a valid MRF format");let i=J(e,"Size"),s=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(U(e,"Compression")||"none").toLowerCase();if(!Y.has(a))throw new F("mrf:open","currently does not support compression "+a);let l=U(e,"DataType")||"UInt8",o=j.get(l);if(o==null)throw new F("mrf:open","currently does not support pixel type "+l);let c=J(e,"PageSize"),m=parseInt(c.getAttribute("x"),10),p=parseInt(c.getAttribute("y"),10),u=J(e,"DataValues"),f,g;if(u&&(g=u.getAttribute("NoData"),g!=null&&(f=g.trim().split(" ").map(C=>parseFloat(C)))),J(t,"MRF_META/CachedSource"))throw new F("mrf:open","currently does not support MRF referencing other data files");let d=J(t,"MRF_META/GeoTags"),w=J(d,"BoundingBox"),h,x=!1;if(w!=null){let C=parseFloat(w.getAttribute("minx")),_=parseFloat(w.getAttribute("miny")),M=parseFloat(w.getAttribute("maxx")),k=parseFloat(w.getAttribute("maxy")),L=U(d,"Projection")||"",he=D.WGS84;if(L!=="LOCAL_CS[]")if(L.toLowerCase().startsWith("epsg:")){let be=Number(L.slice(5));isNaN(be)||be===0||(he=new D({wkid:be}))}else he=se(L)??D.WGS84;else x=!0,he=new D({wkid:3857});h=new B(C,_,M,k),h.spatialReference=he}else x=!0,h=new B({xmin:-.5,ymin:.5-r,xmax:s-.5,ymax:.5,spatialReference:new D({wkid:3857})});let y=J(t,"MRF_META/Rsets"),I=parseInt(y?.getAttribute("scale")||"2",10),b=h.spatialReference,R=new K({origin:new G({x:h.xmin,y:h.ymax,spatialReference:b}),blockWidth:m,blockHeight:p,pyramidBlockWidth:m,pyramidBlockHeight:p,compression:a,pyramidScalingFactor:I}),S=new G({x:h.width/s,y:h.height/r,spatialReference:b}),v=new V({width:s,height:r,extent:h,isPseudoSpatialReference:x,spatialReference:b,bandCount:n,pixelType:o,pixelSize:S,noDataValue:f,storageInfo:R}),P=U(t,"datafile"),T=U(t,"IndexFile");return{rasterInfo:v,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",Y.get(a).blobExtension)}}}_fetchAuxiliaryData(t){return O(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return ie(e)}catch{return null}})}};function wt(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,s,r,n,a;if(ze){for(i=new Uint8Array(t),r=new ArrayBuffer(t.byteLength),s=new Uint8Array(r),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)s[4*n+a]=i[4*n+3-a];e=new Uint32Array(r)}else e=new Uint32Array(t);return e}E([A()],ae.prototype,"_files",void 0),E([A()],ae.prototype,"_storageIndex",void 0),E([A({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=E([z("esri.layers.support.rasterDatasets.MRFRaster")],ae);var lt=ae;function It(t){let e=t.fields,i=t.records,s=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=r.map(c=>c.name),a=[],l=0,o=0;return i.forEach(c=>{let m={};for(m[s]=l++,o=1;o<n.length;o++)m[n[o]]=c[o-1];a.push({attributes:m})}),{displayFieldName:"",fields:r,features:a}}var Ie=class{static get supportedVersions(){return[5]}static parse(e){let i=new DataView(e),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};let r=i.getUint32(4,!0),n=i.getUint16(8,!0),a=i.getUint16(10,!0),l={version:s,recordCount:r,headerByteCount:n,recordByteCount:a},o=32,c=[],m=[],p;if(s===3){for(;i.getUint8(o)!==13;)p=String.fromCharCode(i.getUint8(o+11)).trim(),c.push({name:Se(new Uint8Array(e,o,11)),type:p,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(p)],length:i.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;m.length<r&&e.byteLength-o>a;){let u=[];i.getUint8(o)===32?(o+=1,c.forEach(f=>{if(f.type==="C")u.push(Se(new Uint8Array(e,o,f.length)).trim());else if(f.type==="N")u.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim(),10));else if(f.type==="F")u.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim()));else if(f.type==="D"){let g=String.fromCharCode.apply(null,new Uint8Array(e,o,f.length)).trim();u.push(new Date(parseInt(g.slice(0,4),10),parseInt(g.slice(4,6),10)-1,parseInt(g.slice(6,8),10)))}o+=f.length}),m.push(u)):o+=a}}return{header:l,fields:c,records:m,recordSet:It({fields:c,records:m})}}};var ke=(t,e)=>t.get(e)?.values,pe=(t,e)=>t.get(e)?.values?.[0],$=class extends H{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}fetchRawTile(r,n,a){return O(this,arguments,function*(t,e,i,s={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(t,e,i))return null;let l=yield this._fetchRawTiffTile(t,e,i,!1,s);if(l!=null&&this._headerInfo.hasMaskBand){let o=yield this._fetchRawTiffTile(t,e,i,!0,s);o!=null&&o.pixels[0]instanceof Uint8Array&&(l.mask=o.pixels[0])}return l})}_open(t){return O(this,null,function*(){let e=t?t.signal:null,{data:i}=yield this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!i)throw new F("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));let{littleEndian:s,firstIFDPos:r,isBigTiff:n}=We(i),a=[];yield this._readIFDs(a,i,s,r,0,n?8:4,e);let{imageInfo:l,rasterInfo:o}=bt(a),c=Ge(a),m=je(a);if(this._headerInfo=W({littleEndian:s,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:m},l),this._set("rasterInfo",o),!l.isSupported)throw new F("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new F("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&Fe.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");let p=a[0].get("PREDICTOR")?.values?.[0];if(a[0].get("SAMPLEFORMAT")?.values?.[0]===3&&p===2)throw new F("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");let{skipMapInfo:f,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!f){let d=yield this._fetchAuxiliaryMetaData(t);d!=null&&St(d,o)}g.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||f||(o.attributeTable=yield this._fetchAuxiliaryTable(t),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),f&&this.updateImageSpaceRasterInfo(o),this.updateTileInfo()})}_readIFDs(t,e,i,s,r,n=4,a){return O(this,null,function*(){if(!s)return null;(s>=e.byteLength||s<0)&&(e=(yield this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=s+r,s=0);let l=yield this._readIFD(e,i,s,r,le.tiffTags,n,a);if(t.push(l.ifd),!l.nextIFD)return null;yield this._readIFDs(t,e,i,l.nextIFD-r,r,n,a)})}_readIFD(l,o,c,m){return O(this,arguments,function*(t,e,i,s,r=le.tiffTags,n=4,a){if(!t)return null;let p=Ve(t,e,i,s,r,n);if(p.success){let u=[];if(p.ifd?.forEach(f=>{f.values||u.push(f)}),u.length>0){let f=u.map(d=>d.offlineOffsetSize).filter(ne),g=Math.min.apply(null,f.map(d=>d[0]));if(Math.min.apply(null,f.map(d=>d[0]+d[1]))-g<=this._bufferSize){let{data:d}=yield this.request(this.url,{range:{from:g,to:g+this._bufferSize},responseType:"array-buffer",signal:a});t=d,s=g,u.forEach(w=>He(t,e,w,s))}}if(p.ifd?.has("GEOKEYDIRECTORY")){let f=p.ifd.get("GEOKEYDIRECTORY"),g=f?.values;if(g&&g.length>4){let d=g[0]+"."+g[1]+"."+g[2],w=yield this._readIFD(t,e,f.valueOffset+6-s,s,le.geoKeys,2,a);f.data=w.ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return p}if(p.requiredBufferSize&&p.requiredBufferSize!==t.byteLength)return(t=(yield this.request(this.url,{range:{from:s,to:s+p.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<p.requiredBufferSize?null:this._readIFD(t,e,0,s,le.tiffTags,4,a)})}_fetchRawTiffTile(n,a,l,o){return O(this,arguments,function*(t,e,i,s,r={}){let c=this._getTileLocation(t,e,i,s);if(!c)return null;let{ranges:m,actualTileWidth:p,actualTileHeight:u,ifd:f}=c,g=m.map(T=>this.request(this.url,{range:T,responseType:"array-buffer",signal:r.signal})),d=yield Promise.all(g),w=d.map(T=>T.data.byteLength).reduce((T,C)=>T+C),h=d.length===1?d[0].data:new ArrayBuffer(w),x=[0],y=[0];if(d.length>1){let T=new Uint8Array(h);for(let C=0,_=0;C<d.length;C++){let M=d[C].data;T.set(new Uint8Array(M),_),x[C]=_,_+=M.byteLength,y[C]=M.byteLength}}let{blockWidth:I,blockHeight:b}=this.getBlockWidthHeight(t),R=yield this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:x,sizes:y},width:I,height:b,planes:null,pixelType:null});if(R==null)return null;let S,v,P;if(p!==I||u!==b){let T=R.mask;if(T)for(S=0;S<b;S++)if(P=S*I,S<u)for(v=p;v<I;v++)T[P+v]=0;else for(v=0;v<I;v++)T[P+v]=0;else for(T=new Uint8Array(I*b),R.mask=T,S=0;S<u;S++)for(P=S*I,v=0;v<p;v++)T[P+v]=1}return R})}_getTileLocation(t,e,i,s=!1){let{firstPyramidLevel:r,blockBoundary:n}=this.rasterInfo.storageInfo,a=t===0?0:t-(r-1),{_headerInfo:l}=this;if(!l)return null;let o=s?l.maskIFDs[a]:a===0?l?.ifds[0]:l?.pyramidIFDs[a-1];if(!o)return null;let c=Ue(o,l),m=ke(o,"TILEOFFSETS");if(m===void 0)return null;let p=ke(o,"TILEBYTECOUNTS"),{minRow:u,minCol:f,maxRow:g,maxCol:d}=n[a];if(e>g||i>d||e<u||i<f)return null;let w=pe(o,"IMAGEWIDTH"),h=pe(o,"IMAGELENGTH"),x=pe(o,"TILEWIDTH"),y=pe(o,"TILELENGTH"),I=[];if(c){let{bandCount:b}=this.rasterInfo;for(let R=0;R<b;R++){let S=R*(g+1)*(d+1)+e*(d+1)+i;I[R]={from:m[S],to:m[S]+p[S]-1}}}else{let b=e*(d+1)+i;I.push({from:m[b],to:m[b]+p[b]-1})}for(let b=0;b<I.length;b++)if(I[b].from==null||!I[b].to||I[b].to<0)return null;return{ranges:I,ifd:o,actualTileWidth:i===d&&w%x||x,actualTileHeight:e===g&&h%y||y}}_fetchAuxiliaryMetaData(t){return O(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return ie(e)}catch{return null}})}_fetchAuxiliaryTable(t){return O(this,null,function*(){try{let{data:e}=yield this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t?.signal}),i=Ie.parse(e);return i?.recordSet?ge.fromJSON(i.recordSet):null}catch{return null}})}};function bt(t){let e=Je(t),{width:i,height:s,tileWidth:r,tileHeight:n,planes:a,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidBlockWidth:p,pyramidBlockHeight:u,pyramidResolutions:f,tileBoundary:g,affine:d,metadata:w}=e,h=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid,x=se(h),y=!!e.isPseudoGeographic;x==null&&(y=!0,x=new D({wkid:3857}));let I=new B(re(W({},e.extent),{spatialReference:x})),b=new G(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),R=new K({blockWidth:r,blockHeight:n,pyramidBlockWidth:p,pyramidBlockHeight:u,compression:o,origin:b,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidResolutions:f,blockBoundary:g}),S=new G({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/s,spatialReference:x}),v=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{},P=null,T=pe(t[0],"PHOTOMETRICINTERPRETATION"),C=ke(t[0],"COLORMAP");if(T<=3&&C?.length>3&&C.length%3==0){P=[];let M=C.length/3;for(let k=0;k<M;k++)P.push([k,C[k]>>>8,C[k+M]>>>8,C[k+2*M]>>>8])}let _=new V({width:i,height:s,bandCount:a,pixelType:l,pixelSize:S,storageInfo:R,spatialReference:x,isPseudoSpatialReference:y,keyProperties:v,extent:I,colormap:P,statistics:w?w.statistics:null});if(d?.length&&(_.nativeExtent=new B({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:x}),_.transform=new Z({polynomialOrder:1,forwardCoefficients:[d[2]+d[0]/2,d[5]-d[3]/2,d[0],d[3],-d[1],-d[4]]}),_.extent=_.transform.forwardTransform(_.nativeExtent),_.pixelSize=new G({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/s,spatialReference:x}),R.origin.x=-.5,R.origin.y=.5),f){let{x:M,y:k}=_.pixelSize;f.forEach(L=>{L.x*=M,L.y*=k})}return{imageInfo:e,rasterInfo:_}}function St(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=Q(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;let i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new G({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}E([A()],$.prototype,"_files",void 0),E([A()],$.prototype,"_headerInfo",void 0),E([A()],$.prototype,"_bufferSize",void 0),E([A({type:String,json:{write:!0}})],$.prototype,"datasetFormat",void 0),$=E([z("esri.layers.support.rasterDatasets.TIFFRaster")],$);var mt=$;var N=new Map;N.set("MRF",{desc:"Meta Raster Format",constructor:lt}),N.set("TIFF",{desc:"GeoTIFF",constructor:mt}),N.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ot}),N.set("JPG",{desc:"JPG Raster Format",constructor:fe}),N.set("PNG",{desc:"PNG Raster Format",constructor:fe}),N.set("GIF",{desc:"GIF Raster Format",constructor:fe}),N.set("BMP",{desc:"BMP Raster Format",constructor:fe}),N.set("CovJSON",{desc:"COVJSON Raster Format",constructor:rt}),N.set("MEMORY",{desc:"In Memory Raster Format",constructor:te});var ct=class{static get supportedFormats(){let e=new Set;return N.forEach((i,s)=>e.add(s)),e}static open(e){return O(this,null,function*(){let{url:i,ioConfig:s,source:r,sourceJSON:n}=e,a=e.datasetFormat??s?.datasetFormat;a==null&&(i.includes(".")?a=i.slice(i.lastIndexOf(".")+1).toUpperCase():r?.type?.toLowerCase()==="coverage"?a="CovJSON":r?.extent&&r.pixelblocks&&(a="MEMORY")),a==="OVR"||a==="TIF"?a="TIFF":a==="JPG"||a==="JPEG"||a==="JFIF"?a="JPG":a==="COVJSON"&&(a="CovJSON"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");let l={url:i,source:r,sourceJSON:n,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(p=>{l[p]==null&&delete l[p]}),a){if(!this.supportedFormats.has(a))throw new F("rasterfactory:open","not a supported format "+a);if(a==="CRF")throw new F("rasterfactory:open",`cannot open raster: ${i}`);let p=new(N.get(a)).constructor(l);return yield p.open({signal:e.signal}),p}let o=Array.from(N.keys()).filter(p=>p!=="CovJSON"&&p!=="Memory"),c=0,m=()=>{if(a=o[c++],!a||a==="CRF")return null;let p=new(N.get(a)).constructor(l);return p.open({signal:e.signal}).then(()=>p).catch(()=>m())};return m()})}static register(e,i,s){N.has(e.toUpperCase())||N.set(e.toUpperCase(),{desc:i,constructor:s})}};export{ct as a};
