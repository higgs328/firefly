import{a as p}from"./chunk-RDGG4TVD.js";import{b as a}from"./chunk-I4CY6X6S.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as s}from"./chunk-NFIPKH6V.js";import{l}from"./chunk-5QEXLALV.js";var i,e=i=class extends a{constructor(t){super(t),this.type="color",this.normalizationField=null}get cache(){return{ipData:this._interpolateData(),hasExpression:!!this.valueExpression,compiledFunc:null}}set stops(t){t&&Array.isArray(t)&&(t=t.filter(r=>!!r)).sort((r,n)=>r.value-n.value),this._set("stops",t)}clone(){return new i({field:this.field,normalizationField:this.normalizationField,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,stops:this.stops&&this.stops.map(t=>t.clone()),legendOptions:this.legendOptions?.clone()})}getAttributeHash(){return`${super.getAttributeHash()}-${this.normalizationField}`}_interpolateData(){return this.stops&&this.stops.map(t=>t.value||0)}};o([s({readOnly:!0})],e.prototype,"cache",null),o([s({type:["color"],json:{type:["colorInfo"]}})],e.prototype,"type",void 0),o([s({type:String,json:{write:!0}})],e.prototype,"normalizationField",void 0),o([s({type:[p],json:{write:!0}})],e.prototype,"stops",null),e=i=o([l("esri.renderers.visualVariables.ColorVariable")],e);var x=e;export{x as a};
