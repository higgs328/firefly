import{a as v}from"./chunk-3YHPJJNR.js";import{a as S,b as N,e as P}from"./chunk-HOMCUBFD.js";import{c as A,e as k}from"./chunk-LMCM3VZM.js";import"./chunk-ZWHAEUE3.js";import"./chunk-E56W4PK4.js";import"./chunk-G7KCDLNH.js";import{e as B}from"./chunk-3X6CYJC6.js";import"./chunk-ZM24RY22.js";import"./chunk-6F25LG6O.js";import"./chunk-PTZYZULI.js";import"./chunk-NMLYCCKN.js";import"./chunk-MIS6QMFE.js";import{b as T,e as y}from"./chunk-RJWOVI3M.js";import"./chunk-RSDQHAJX.js";import"./chunk-EQZWYK27.js";import"./chunk-PEW2PLAN.js";import"./chunk-CX5IFQZJ.js";import"./chunk-G4DZJMGT.js";import{a as x}from"./chunk-BAEF3CT6.js";import"./chunk-CCJU4DSH.js";import"./chunk-QGVBCWUY.js";import"./chunk-MYO4NP2N.js";import"./chunk-NFIPKH6V.js";import"./chunk-JPU2PQZC.js";import"./chunk-5QEXLALV.js";import"./chunk-P6QFA5MM.js";import"./chunk-DGTD7Y73.js";import"./chunk-LI2SX4T6.js";import"./chunk-BWO7LS2H.js";import"./chunk-HEVQSRJ2.js";import"./chunk-OVHPPCBL.js";import"./chunk-SNFOAZZQ.js";import"./chunk-AML4XSEF.js";import"./chunk-4PTIEWMT.js";import"./chunk-TG2UTNEO.js";import"./chunk-YOFFGXOB.js";import"./chunk-XRGPJ3QY.js";import"./chunk-6MRUJ2UW.js";import"./chunk-2LI2GKBQ.js";import"./chunk-QBWJMFH5.js";import{a as g,b as w}from"./chunk-VTHXE323.js";function o(t,n,e){return Object.keys(n).forEach(r=>{n[r]==null&&delete n[r]}),e||(e="unknown"),new v({functionName:t,functionArguments:n,outputPixelType:e})}var V={"user-defined":-1,"line-detection-horizontal":0,"line-detection-vertical":1,"line-detection-left-diagonal":2,"line-detection-right-diagonal":3,"gradient-north":4,"gradient-west":5,"gradient-east":6,"gradient-south":7,"gradient-north-east":8,"gradient-north-west":9,"smooth-arithmetic-mean":10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,"sobel-horizontal":17,"sobel-vertical":18,sharpen:19,sharpen2:20,"point-spread":21,none:255};function O(t){let{raster:n,outputPixelType:e}=t;if("convolutionType"in t&&t.convolutionType!=="user-defined"){let s=V[t.convolutionType]??255;return o("Convolution",{type:s,raster:n},e)}let{rows:r,cols:a,kernel:i}=t;return o("Convolution",{type:-1,rows:r,cols:a,kernel:i,raster:n},e)}function F(t){let{contrastOffset:n,brightnessOffset:e,raster:r,outputPixelType:a}=t;return o("ContrastBrightness",{contrastOffset:n,brightnessOffset:e,raster:r},a)}function I(t,n){let{raster:e,dynamicRangeAdjustment:r,gamma:a,useGamma:i,outputMin:s=0,outputMax:p=255}=n;return{raster:e,stretchType:t,min:s,max:p,useGamma:!!i,gamma:a,dra:!!r}}function E(t){let n=I(5,t);return n.statistics=t.statistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??-1]),o("Stretch",n,t.outputPixelType)}function z(t){let n=I(3,t);return n.statistics=t.statistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??-1]),n.numberOfStandardDeviations=t.numberOfStandardDeviations??2,o("Stretch",n,t.outputPixelType)}function j(t){let n=I(6,t);return n.minPercent=t.minPercent??.25,n.maxPercent=t.maxPercent??.25,o("Stretch",n,t.outputPixelType)}function q(t){let n=I(0,t);return o("Stretch",n,t.outputPixelType)}function G(t){let n=I(4,t);return o("Stretch",n,t.outputPixelType)}function c(t,n,e,r=[]){let{raster:a,outputPixelType:i}=t,s={raster:a,method:n,bandIndexes:e.map(p=>p+1).concat(r).join(" ")};return o("BandArithmetic",s,i)}function J(t){let{nirBandId:n,redBandId:e,scientificOutput:r=!0,raster:a,outputPixelType:i}=t;return o("NDVI",{raster:a,visibleBandID:e,infraredBandID:n,scientificOutput:r},i)}function W(t){let{nirBandId:n,redBandId:e,factor:r=.33}=t;return c(t,2,[n,e],[r])}function L(t){let{nirBandId:n,redBandId:e,slope:r=.33,intercept:a=.5,factor:i=1.5}=t;return c(t,3,[n,e],[r,a,i])}function H(t){let{nirBandId:n,redBandId:e}=t;return c(t,4,[n,e])}function $(t){let{nirBandId:n,redBandId:e}=t;return c(t,5,[n,e])}function U(t){let{nirBandId:n,redBandId:e,slope:r=.3,gradient:a=.5}=t;return c(t,6,[n,e],[r,a])}function X(t){return c(t,7,t.bandIds)}function Z(t){return c(t,8,t.bandIds)}function K(t){let{redBandId:n,greenBandId:e,blueBandId:r}=t;return c(t,9,[n,e,r])}function Q(t){let{nirBandId:n,greenBandId:e}=t;return c(t,10,[n,e])}function Y(t){let{nirBandId:n,redBandId:e}=t;return c(t,11,[n,e])}function _(t){let{nirBandId:n,reBandId:e}=t;return c(t,12,[n,e])}function tt(t){let{nirBandId:n,reBandId:e}=t;return c(t,13,[n,e])}function nt(t){let{nirBandId:n,redBandId:e,greenBandId:r}=t;return c(t,14,[n,e,r])}function et(t){let{nirBandId:n,reBandId:e,greenBandId:r}=t;return c(t,15,[n,e,r])}function rt(t){let{nirBandId:n,reBandId:e}=t;return c(t,16,[n,e])}function at(t){let{nirBandId:n,greenBandId:e}=t;return c(t,17,[n,e])}function ot(t){let{nirBandId:n,greenBandId:e}=t;return c(t,18,[n,e])}function it(t){let{nirBandId:n,redBandId:e,blueBandId:r}=t;return c(t,19,[n,e,r])}function st(t){let{redBandId:n,blueBandId:e}=t;return c(t,20,[n,e])}function ut(t){let{swirBandId:n,nirBandId:e}=t;return c(t,21,[n,e])}function ct(t){let{swir1BandId:n,swir2BandId:e}=t;return c(t,22,[n,e])}function dt(t){let{greenBandId:n,nirBandId:e,swirBandId:r,alpha:a=.5}=t;return c(t,23,[n,e,r],[a])}function lt(t){let{redBandId:n,nirBandId:e}=t;return c(t,24,[n,e])}function pt(t){let{nirBandId:n,swirBandId:e}=t;return c(t,25,[n,e])}function mt(t){let{swirBandId:n,nirBandId:e}=t;return c(t,26,[n,e])}function ft(t){let{nirBandId:n,swirBandId:e}=t;return c(t,27,[n,e])}function ht(t){let{greenBandId:n,swirBandId:e}=t;return c(t,28,[n,e])}function bt(t){let{greenBandId:n,swirBandId:e}=t;return c(t,29,[n,e])}function It(t){let{raster:n,bandIndexes:e,outputPixelType:r}=t;return o("BandArithmetic",{raster:n,method:0,bandIndexes:e},r)}function gt(t){let{raster:n,raster2:e,outputPixelType:r}=t,a=S.toJSON(t.method),i=t.keepMethod&&N.toJSON(t.keepMethod);return o("ComputeChange",{method:a,keepMethod:i,raster:n,raster2:e},r)}function wt(t){let{raster:n,outputPixelType:e}=t;return o("Threshold",{thresholdType:1,raster:n},e)}function xt(t){let{weights:n,outputPixelType:e="unknown",raster:r}=t;return o("Grayscale",{conversionParameters:n,raster:r},e)}function Tt(t){let{outputPixelType:n,raster:e}=t,r=t.conversionType==="rgb-to-hsv"?0:1;return o("ColorspaceConversion",{conversionType:r,raster:e},n)}function yt(t){let{outputPixelType:n,raster:e}=t,r=t.conversionMatrix.flat();return o("SpectralConversion",{conversionMatrix:r,raster:e},n)}function Bt(t){let{outputPixelType:n,raster:e}=t;return o("TasseledCap",{raster:e},n)}function At(t){return"colormap"in t?kt(t):"colorRamp"in t?St(t):Nt(t)}function kt(t){let n=t.colormap.map(a=>{if("value"in a){let i=typeof a.color=="string"?T(a.color)??y(a.color):a.color;(a=[a.value,...i])[4]&&a[4]<=1&&(a[4]=Math.round(255*a[4]))}return a}),{raster:e,outputPixelType:r}=t;return o("Colormap",{colormap:n,raster:e},r)}function St(t){let{raster:n,colorRamp:e,outputPixelType:r}=t,a={colorRamp:"toJSON"in e?e.toJSON():e,raster:n};return o("Colormap",a,r)}function Nt(t){let{colorRampName:n}=t,e=Object.values(B).find(s=>s.toLowerCase()===n?.toLowerCase()),r=A.toJSON(n),{raster:a,outputPixelType:i="unknown"}=t;return o("Colormap",e?{colormapName:e,raster:a}:{colorRampName:r,raster:a},i)}function Pt(t){let{raster:n,outputPixelType:e="u8"}=t;return o("ColormapToRGB",{raster:n},e)}function vt(t){let{raster:n,histograms:e,outputPixelType:r}=t,a=t.statistics?.map(i=>({min:i.min,max:i.max,mean:i.avg,standardDeviation:i.stddev}));return o("StatisticsHistograms",{raster:n,statistics:a,histograms:e},r)}function Rt(t){let{raster:n,attributeTable:e,outputPixelType:r="unknown"}=t,a="toJSON"in e?e.toJSON():e;return o("Table",{raster:n,attributeTableAsRecordSet:a},r)}function Ct(t){let{raster:n,outputPixelType:e="unknown"}=t,r={raster:n,missingBandAction:t.missingBandAction==="fail"?1:0};return"bandIds"in t?r.bandIds=t.bandIds:"bandNames"in t?r.bandNames=t.bandNames:"bandWavelengths"in t&&(r.bandWavelengths=t.bandWavelengths),o("ExtractBand",r,e)}function Mt(t){let{redBand:n,greenBand:e,blueBand:r,raster:a,outputPixelType:i}=t,s=t.method==="name"?0:2;return o("CreateColorComposite",{raster:a,method:s,bandIndexesR:n,bandIndexesG:e,bandIndexesB:r},i)}function Dt(t){let{rasters:n,outputPixelType:e}=t;return o("CompositeBand",{rasters:n},e)}function Vt(t){let{allowUnmatched:n,raster:e,rangeMaps:r,outputPixelType:a}=t,i=r?.filter(({output:m})=>m!=null),s=i?.flatMap(({range:m})=>m),p=i?.map(({output:m})=>m),f=r?.filter(m=>m.output==null)?.flatMap(({range:m})=>m);return o("Remap",{allowUnmatched:n,raster:e,inputRanges:s,outputValues:p,noDataRanges:f},a)}function Ot(t){let{inputBitPositions:n,raster:e,fillRaster:r,outputBitPositions:a,outputPixelType:i}=t,s={inputBitPositions:n,outputBitPositions:a,raster:e};return r!=null&&(typeof r=="number"?(s.constantFillCheck=!0,s.constantFillValue=r):s.fillRaster=r),o("TransposeBits",s,i)}function Ft(t){let{raster:n,outputPixelType:e="unknown"}=t,r=t.includedRanges?.flatMap(s=>s),a=t.noDataValues?.map(s=>s.join(" ")),i=t.noDataInterpretation==="match-all"?1:0;return o("Mask",{raster:n,includedRanges:r,noDataInterpretation:i,noDataValues:a},e)}function Et(t){let{geometry:n,keepOutside:e,outputPixelType:r="unknown",raster:a}=t,i="declaredClass"in n?n.toJSON():n;return o("Clip",{clippingGeometry:i,clippingType:e?2:1,raster:a},r)}function u(t,n,e="unknown"){let r;return typeof n!="object"||!("raster"in n)&&("rasterFunction"in n||"functionName"in n)?r=[n]:(r=[n.raster??"$$"],e=n.outputPixelType??"unknown"),o("Local",{operation:t,rasters:r},e)}function l(t,n,e,r="unknown"){let a;return typeof n=="object"&&"raster"in n?(a=[n.raster,n.raster2],r=n.outputPixelType??"unknown"):a=[n,e],o("Local",{operation:t,rasters:a},r)}function zt(t,n,e="unknown"){return l(1,t,n,e)}function jt(t,n,e="unknown"){return l(2,t,n,e)}function qt(t,n,e="unknown"){return l(3,t,n,e)}function Gt(t,n="unknown"){return u(4,t,n)}function Jt(t,n,e="unknown"){return l(5,t,n,e)}function Wt(t,n="unknown"){return u(6,t,n)}function Lt(t,n="unknown"){return u(7,t,n)}function Ht(t,n="unknown"){return u(8,t,n)}function $t(t,n="unknown"){return u(9,t,n)}function Ut(t,n="unknown"){return u(10,t,n)}function Xt(t,n,e="unknown"){return l(11,t,n,e)}function Zt(t,n,e="unknown"){return l(12,t,n,e)}function Kt(t,n="unknown"){return u(13,t,n)}function Qt(t,n,e="unknown"){return l(14,t,n,e)}function Yt(t,n,e="unknown"){return l(15,t,n,e)}function _t(t,n,e="unknown"){return l(16,t,n,e)}function tn(t,n,e="unknown"){return l(17,t,n,e)}function nn(t,n="unknown"){return u(18,t,n)}function en(t,n,e="unknown"){return l(19,t,n,e)}function rn(t,n,e="unknown"){return l(20,t,n,e)}function an(t,n="unknown"){return u(21,t,n)}function on(t,n="unknown"){return u(22,t,n)}function sn(t,n,e="unknown"){return l(23,t,n,e)}function un(t,n,e="unknown"){return l(24,t,n,e)}function cn(t,n="unknown"){return u(25,t,n)}function dn(t,n="unknown"){return u(26,t,n)}function ln(t,n="unknown"){return u(27,t,n)}function pn(t,n,e="unknown"){return l(28,t,n,e)}function mn(t,n,e="unknown"){return l(29,t,n,e)}function fn(t,n="unknown"){return u(30,t,n)}function hn(t,n="unknown"){return u(31,t,n)}function bn(t,n="unknown"){return u(32,t,n)}function In(t,n,e="unknown"){return l(33,t,n,e)}function gn(t,n,e="unknown"){return l(34,t,n,e)}function wn(t,n="unknown"){return u(35,t,n)}function xn(t,n="unknown"){return u(36,t,n)}function Tn(t,n="unknown"){return u(37,t,n)}function yn(t,n,e="unknown"){return l(44,t,n,e)}function Bn(t,n="unknown"){return u(45,t,n)}function An(t,n,e="unknown"){return l(46,t,n,e)}function kn(t,n="unknown"){return u(48,t,n)}function Sn(t,n="unknown"){return u(49,t,n)}function Nn(t,n="unknown"){return u(51,t,n)}function Pn(t,n="unknown"){return u(52,t,n)}function vn(t,n="unknown"){return u(53,t,n)}function Rn(t,n="unknown"){return u(56,t,n)}function Cn(t,n="unknown"){return u(57,t,n)}function Mn(t,n="unknown"){return u(59,t,n)}function Dn(t,n="unknown"){return u(60,t,n)}function Vn(t,n,e="unknown"){return l(61,t,n,e)}function On(t,n,e="unknown"){let r;return typeof t=="object"&&"raster"in t?(r=[t.raster,t.falseRaster],e=t.outputPixelType??"unknown"):r=[t,n],o("Local",{operation:50,rasters:r},e)}function Fn(t,n,e,r){let a;return typeof t=="object"&&"raster"in t&&"trueRaster"in t?(a=[t.raster,t.trueRaster,t.falseRaster],r=t.outputPixelType??"unknown"):a=[t,n,e],o("Local",{operation:78,rasters:a},r)}var En={majority:38,max:39,mean:40,median:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58};function zn(t){let{rasters:n,statisticsType:e,processAsMultiband:r=!0,outputPixelType:a}=t,i=En[e];return o("Local",{operation:i,processAsMultiband:r,rasters:n},a)}function jn(t){let{rasters:n,inputNames:e,expression:r,outputPixelType:a}=t;return o("RasterCalculator",{rasters:n,inputNames:e,expression:r},a)}function qn(t){let{rasters:n,weights:e,outputPixelType:r}=t,a=t?.fields??n.map(()=>"Value");return o("WeightedSum",{rasters:n,fields:a,weights:e},r)}function Gn(t){let{rasters:n,weights:e,outputPixelType:r,minScale:a,maxScale:i,valueToScaleMaps:s,noDataValues:p,restrictedValues:f}=t,m=e.reduce((d,b)=>d+b),C=m===1?e:e.map(d=>d/m),M=t?.fields??n.map(()=>"Value"),h=n.map(()=>[]);if(s?.length)for(let d=0;d<h.length;d++)s[d]?.length&&h[d].push(...s[d].map(b=>b.join(" ")));if(p?.length)for(let d=0;d<h.length;d++)p[d]?.length&&h[d].push(...p[d].map(b=>`${b} NODATA`));if(f?.length)for(let d=0;d<h.length;d++)f[d]?.length&&h[d].push(...f[d].map(b=>`${b} Restricted`));let D=h.map(d=>d.join(","));return o("WeightedOverlay",{rasters:n,fields:M,influences:C,remaps:D,evalFrom:a,evalTo:i},r)}function Jn(t){let{raster:n,outputPixelType:e}=t;return o("Aspect",{raster:n},e)}function Wn(t){let{raster:n,zFactor:e,removeEdgeEffect:r,outputPixelType:a="unknown"}=t,i=t.slopeType==="degree"?1:t.slopeType==="percent-rise"?2:3,s={raster:n,slopeType:i,zFactor:e,removeEdgeEffect:r};return i===3&&(s.psPower=t.pixelSizePower,s.psZFactor=t.pixelSizeZFactor),o("Slope",s,a)}function Ln(t){let{raster:n,zFactor:e,outputPixelType:r="unknown"}=t,a=t.curvatureType==="standard"?0:t.curvatureType==="planform"?1:2;return o("Curvature",{raster:n,curvatureType:a,zFactor:e},r)}function R(t){let{raster:n,zFactor:e,altitude:r=45,azimuth:a=315,removeEdgeEffect:i,outputPixelType:s="u8"}=t,p=t.scalingType==="adjusted"?3:1,f={raster:n,hillshadeType:t.hillshadeType==="multi-directional"?1:0,altitude:r,azimuth:a,slopeType:p,zFactor:e,removeEdgeEffect:i};return p===3&&(f.psPower=t.pixelSizePower,f.psZFactor=t.pixelSizeZFactor),o("Hillshade",f,s)}function Hn(t){let{functionArguments:n}=R(t),{outputPixelType:e="u8"}=t,r=t.colorRamp;if(r){let s="toJSON"in r?r.toJSON():r;return o("ShadedRelief",w(g({},n),{colorRamp:s}),e)}let a=t.colorRampName;if(a){let s=k(a);return o("ShadedRelief",w(g({},n),{colorRamp:s}),e)}let i=t.colormap;return o("ShadedRelief",w(g({},n),{colormap:i}),e)}function $n(t){let{rows:n,cols:e,fillNoDataOnly:r=!1,raster:a,outputPixelType:i}=t,s=P.toJSON(t.statisticsType);return o("Statistics",{rows:n,cols:e,fillNoDataOnly:r,statisticsType:s,raster:a},i)}var Un=new x({0:"max",1:"min",2:"median",3:"duration"},{useNumericKeys:!0});function Xn(t){let{rasters:n,outputPixelType:e}=t,r={argStatisticsType:Un.toJSON(t.statisticsType),rasters:n};return t.statisticsType==="duration"?(r.minValue=t.minValue,r.maxValue=t.maxValue):r.undefinedClass=t.undefinedClass,o("ArgStatistics",r,e)}var Be="$$";export{Ut as abs,Wt as acos,Mn as acosh,Xn as argStatistics,Lt as asin,Dn as asinh,Jn as aspect,Ht as atan,Vn as atan2,$t as atanh,lt as bandArithmeticBAI,at as bandArithmeticCIg,rt as bandArithmeticCIre,ct as bandArithmeticClayMinerals,It as bandArithmeticCustom,it as bandArithmeticEVI,ut as bandArithmeticFerrousMinerals,$ as bandArithmeticGEMI,Q as bandArithmeticGNDVI,X as bandArithmeticGVITM,st as bandArithmeticIronOxide,bt as bandArithmeticMNDWI,H as bandArithmeticMSAVI,nt as bandArithmeticMTVI2,pt as bandArithmeticNBR,mt as bandArithmeticNDBI,ft as bandArithmeticNDMI,ht as bandArithmeticNDSI,J as bandArithmeticNDVI,_ as bandArithmeticNDVIre,ot as bandArithmeticNDWI,U as bandArithmeticPVI,et as bandArithmeticRTVICore,W as bandArithmeticSAVI,Y as bandArithmeticSR,tt as bandArithmeticSRre,Z as bandArithmeticSultan,L as bandArithmeticTSAVI,K as bandArithmeticVARI,dt as bandArithmeticWNDWI,Xt as bitwiseAnd,Zt as bitwiseLeftShift,Kt as bitwiseNot,Qt as bitwiseOr,Yt as bitwiseRightShift,_t as bitwiseXor,tn as booleanAnd,nn as booleanNot,en as booleanOr,rn as booleanXor,jn as calculate,zn as cellStatistics,Et as clip,At as colormap,Pt as colormapToRGB,Tt as colorspaceConversion,Dt as compositeBand,gt as computeChange,Fn as conditional,F as contrastBrightness,O as convolution,an as cos,on as cosh,Mt as createColorComposite,Ln as curvature,Be as defaultRaster,sn as divide,un as equalTo,cn as exp,dn as exp10,ln as exp2,Ct as extractBand,bn as float,xt as grayscale,pn as greaterThan,mn as greaterThanEqual,R as hillshade,fn as int,hn as isNull,In as lessThan,gn as lessThanEqual,wn as log,xn as log10,Tn as log2,Ft as mask,jt as minus,yn as mod,Bn as negate,An as notEqual,zt as plus,Jt as power,Vt as remap,kn as roundDown,Sn as roundUp,On as setNull,Hn as shadedRelief,Nn as sin,Pn as sinh,Wn as slope,yt as spectralConversion,Gt as sqrt,vn as square,$n as statistics,vt as statisticsHistogram,G as stretchHistogramEqualization,E as stretchMinMax,q as stretchNone,j as stretchPercentClip,z as stretchStandardDeviation,Rt as table,Rn as tan,Cn as tanh,Bt as tasseledCap,wt as threshold,qt as times,Ot as transposeBits,Gn as weightedOverlay,qn as weightedSum};
