import{a as ye}from"./chunk-KYSTRHK2.js";import{a as O,b as M,c as ge,e as Me}from"./chunk-FLJOXWPY.js";import{a as fe}from"./chunk-KGY4BCEM.js";import{a as _,b as T}from"./chunk-HMOFKUIJ.js";import{h as de}from"./chunk-YTAJKLRN.js";import{b as ae,e as ie,g as ne,h as le}from"./chunk-N7DSOI7B.js";import{c as ue,f as pe,g as he}from"./chunk-F4HA2HQL.js";import{b as F}from"./chunk-2IWALBQY.js";import{c as ce,f as x}from"./chunk-JBAMJB5J.js";import{a as $,b as oe}from"./chunk-T5UBLAP4.js";import{j as ee,k as te,l as re,m as se}from"./chunk-DA3NC6W4.js";import{a as D}from"./chunk-FRN24G7D.js";import{a as w}from"./chunk-EM2AEAFS.js";import{a as Y}from"./chunk-L7NOU4T2.js";import{a as me}from"./chunk-VGAXEXH3.js";import{a as k}from"./chunk-7KP7SKLW.js";import{a as I}from"./chunk-42SGGFLN.js";import{b as E}from"./chunk-EDOVNTC7.js";import{a as f,h as Q}from"./chunk-YEXMIDOT.js";import{a as X,e as K,g as N}from"./chunk-ONYJLWAD.js";import{a as g}from"./chunk-RWCIDBNQ.js";import{x as z}from"./chunk-HM5RIVQC.js";import{d as G,e as Z}from"./chunk-DJW5LMRG.js";import{b as J}from"./chunk-DEH76MSI.js";import{D as U,L as B}from"./chunk-6B5XFA6F.js";import{c as H,d as L}from"./chunk-PTZYZULI.js";import{o as q}from"./chunk-NMLYCCKN.js";import{d as V,i as j}from"./chunk-BOVYXYHK.js";import{a as o}from"./chunk-QGVBCWUY.js";var R=class extends oe{constructor(r,a){super(r,a,new $(Me,()=>import("./chunk-73EEDSLC.js")),xe)}initializePipeline(r){let{integratedMeshMode:a,output:s,blendingEnabled:n,cullFace:e,hasOccludees:l,hasPolygonOffset:c,oitPass:m}=r,y=a!==M.None,S=m===w.NONE,d=m===w.FrontFace;return se({blending:Q(s)&&n?ae(m):null,culling:ee(e),depthTest:{func:ne(m)},depthWrite:S||d?te:null,drawBuffers:s===f.Depth?{buffers:[z.NONE]}:le(m,s),colorWrite:re,stencilWrite:y||l?ue:null,stencilTest:y?pe(K.IntegratedMeshMaskExcluded):l?he:null,polygonOffset:S||d?c?{factor:2,units:2}:null:ie})}},xe=new Map([[g.POSITION,0],[g.NORMAL,1],[g.NORMALCOMPRESSED,1],[g.COLOR,2],[g.UV0,3],[g.UVREGION,4],[g.COMPONENTINDEX,5]]);var A=class extends Y{constructor(){super(...arguments),this._dirty=!0}_setDirty(){this._dirty=!0}_setClean(){if(this._dirty=!1,this._parameterBlocks!=null)for(let r of this._parameterBlocks)this[r]._setClean()}get dirty(){return this._dirty||this._checkParameterBlocksDirty()}_checkParameterBlocksDirty(){if(this._parameterBlocks==null)return!1;for(let r of this._parameterBlocks)if(this[r].dirty)return!0;return!1}},v=class{constructor(){this._dirty=!0}_setDirty(){this._dirty=!0}_setClean(){this._dirty=!1}get dirty(){return this._dirty}};function i(t={}){return(r,a)=>{let s=r._parameterCount??0;if(r._parameterCount=s+1,t.vectorOps){let n=t.vectorOps;Object.defineProperty(r,a,{get(){return this[s]},set(e){let l=this[s];if(l==null)this[s]=[...e];else{if(n.equals(l,e))return;n.copy(l,e)}this._setDirty()}})}else Object.defineProperty(r,a,{get(){return this[s]},set(n){this[s]!==n&&(t.dispose&&this[s]&&this[s].dispose(),this[s]=n,this._setDirty())}})}}function W(){return(t,r)=>{let a=t._parameterCount??0;t._parameterCount=a+1,t._parameterBlocks=t._parameterBlocks||[],t._parameterBlocks.push(a),Object.defineProperty(t,r,{get(){return this[a]},set(s){this[a]!==s&&(this[a]=s,this._setDirty())}})}}var u=class extends A{constructor(r,a){super(),this.toMapSpace=a,this.baseColor=L(1,1,1,1),this.usePBR=!1,this.hasParametersFromSource=!1,this.mrrFactors=ce,this.emissiveFactor=V(0,0,0),this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null,this.commonMaterialParameters=new C,this.componentParameters=new P,this.objectOpacity=1,this.textureAlphaCutoff=me,this.alphaDiscardMode=N.Opaque,this.isIntegratedMesh=!1,this.polygonOffsetEnabled=!1,this.ellipsoidMode=fe.Earth,this.hasOccludees=!1;let s=new ye(r.position),n=J(r.rotationScale);Z(n,n),G(n,n),this.transformNormalGlobalFromModel=n,this.transformWorldFromModelTL=s.low,this.transformWorldFromModelTH=s.high,this.transformWorldFromModelRS=r.rotationScale}dispose(){this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null}get texture(){return this.baseColorTexture?.glTexture}get textureMetallicRoughness(){return this.metallicRoughnessTexture?.glTexture}get textureEmissive(){return this.emissionTexture?.glTexture}get hasEmissions(){return this.emissionTexture!=null||!U(this.emissiveFactor,j)}get textureOcclusion(){return this.occlusionTexture?.glTexture}get textureNormal(){return this.normalTexture?.glTexture}acquireTechnique(r,a,s,n){let e=new ge(r.context.spherical,r.context.doublePrecisionRequiresObfuscation);e.hasVertexColors=n.colors,e.hasNormals=n.hasNormals,e.textureCoordinateType=n.textureCoordinates,e.hasMetallicRoughnessTexture=this.metallicRoughnessTexture!=null,e.hasOcclusionTexture=this.occlusionTexture!=null,e.hasNormalTexture=this.normalTexture!=null,e.oitPass=a.identifier===T.Material&&s.oitPass!=null?s.oitPass:w.NONE,e.terrainDepthTest=a.identifier===T.Material&&s.terrainDepthTest,e.cullAboveTerrain=a.identifier===T.Material&&s.cullAboveTerrain,e.ellipsoidMode=this.ellipsoidMode,e.componentData=this.componentParameters.type,e.cullFace=this.commonMaterialParameters.cullFace,e.doubleSidedMode=this.commonMaterialParameters.doubleSided?F.View:F.None,e.hasColorTexture=this.baseColorTexture!=null;let l=this._computeWhichMaterialPass();if(e.blendingEnabled=l===h.Transparent||l===h.OpaqueAndTransparent,e.alphaDiscardMode=this.alphaDiscardMode,e.integratedMeshMode=this.isIntegratedMesh?ve(s)?Oe(s)?M.ColorOverlayWithWater:M.ColorOverlay:M.NoOverlay:M.None,e.hasPolygonOffset=this.polygonOffsetEnabled,e.pbrMode=e.integratedMeshMode===M.ColorOverlayWithWater?x.WaterOnIntegratedMesh:this.usePBR?this.hasParametersFromSource?n.shadeNormals&&this.isIntegratedMesh?x.Disabled:x.Schematic:x.Normal:x.Disabled,e.emissionSource=this.emissionTexture!=null?D.Texture:e.pbrMode===x.Normal?D.Value:D.None,e.shadeNormals=n.shadeNormals,e.normalType=e.hasNormals?E.Compressed:E.ScreenDerivative,e.hasSlicePlane=s.slicePlane!=null&&this.commonMaterialParameters.hasSlicePlane,a.identifier===T.ShadowMap)e.output=f.Shadow,e.vertexDiscardMode=O.None;else if(a.identifier===T.ViewshedShadowMap)e.output=f.ViewshedShadow,e.vertexDiscardMode=O.None;else if(a.identifier===T.Highlight)e.output=f.Highlight,e.vertexDiscardMode=O.None;else{switch(l===h.OpaqueAndTransparent?e.vertexDiscardMode=a.transparent?O.Opaque:O.Transparent:e.vertexDiscardMode=O.None,e.output=a.output,e.receiveAmbientOcclusion=e.receiveShadows=!1,a.output){case f.Color:case f.ColorEmission:e.receiveAmbientOcclusion=n.applySSAO&&s.ssao!=null,e.hasOccludees=s.hasOccludees,e.receiveShadows=s.shadowMap.ready,e.screenSpaceReflections=s.ssr.lastFrameColor!=null,e.cloudReflections=s.clouds.data!=null;break;case f.ObjectAndLayerIdColor:e.objectAndLayerIdColor=!0}e.snowCover=this.hasSnowCover(s)}let c=r.get(R,e);return this._setClean(),c}hasSnowCover(r){return r.weather!=null&&r.weatherVisible&&r.weather.type==="snowy"&&r.weather.snowCover==="enabled"}submit(r,a,s){if(this.objectOpacity<=0)return;let{componentData:n,renderable:e}=s,{geometry:l}=e,c=e.meta.cameraDepthSquared;n.updateHighlights(a.highlights);let{geometryRanges:m,highlightRangesMap:y,shadowmapRanges:S}=n;switch(this._computeWhichMaterialPass()){case h.Opaque:r.opaque.submitDraw(this,l,m,c);break;case h.Transparent:r.transparent.submitDraw(this,l,m,c);break;case h.OpaqueAndTransparent:r.opaque.submitDraw(this,l,m,c),r.transparent.submitDraw(this,l,m,c);break;case h.IntegratedMesh:r.integratedMesh.submitDraw(this,l,m,c),Te(a)&&r.highlightIntegratedMesh.submitDraw(this,l,m,c)}if(this.componentParameters.castShadows!==p.None){if(y!=null)for(let d of y)d[0]===de&&r.highlightShadowMap.submitDraw(this,l,d[1],c,d[0]);S!=null&&r.nonHighlightShadowMap.submitDraw(this,l,S,c),r.shadowMap.submitDraw(this,l,m,c)}if(y!=null)for(let d of y)r.highlight.submitDraw(this,l,d[1],c,d[0]);a.viewshedEnabled&&r.viewshedShadowMap.submitDraw(this,l,m,c)}_computeWhichMaterialPass(){if(this.isIntegratedMesh)return h.IntegratedMesh;if(this.objectOpacity<1)return h.Transparent;if(this.componentParameters.opaqueOverride===p.All)return h.Opaque;if(this.baseColor[3]<1||this.alphaDiscardMode===N.Blend||this.alphaDiscardMode===N.MaskBlend)return h.Transparent;switch(this.componentParameters.transparent){case p.None:return h.Opaque;case p.All:return h.Transparent;case p.Some:return h.OpaqueAndTransparent}}},h,p;o([i({vectorOps:q})],u.prototype,"baseColor",void 0),o([i()],u.prototype,"usePBR",void 0),o([i()],u.prototype,"hasParametersFromSource",void 0),o([i({vectorOps:B})],u.prototype,"mrrFactors",void 0),o([i({vectorOps:B})],u.prototype,"emissiveFactor",void 0),o([i({dispose:!0})],u.prototype,"baseColorTexture",void 0),o([i({dispose:!0})],u.prototype,"metallicRoughnessTexture",void 0),o([i({dispose:!0})],u.prototype,"emissionTexture",void 0),o([i({dispose:!0})],u.prototype,"occlusionTexture",void 0),o([i({dispose:!0})],u.prototype,"normalTexture",void 0),o([W()],u.prototype,"commonMaterialParameters",void 0),o([W()],u.prototype,"componentParameters",void 0),o([i()],u.prototype,"objectOpacity",void 0),o([i()],u.prototype,"textureAlphaCutoff",void 0),o([i()],u.prototype,"alphaDiscardMode",void 0),o([i()],u.prototype,"isIntegratedMesh",void 0),o([i()],u.prototype,"polygonOffsetEnabled",void 0),o([i()],u.prototype,"ellipsoidMode",void 0),o([i()],u.prototype,"hasOccludees",void 0),function(t){t[t.Opaque=0]="Opaque",t[t.Transparent=1]="Transparent",t[t.OpaqueAndTransparent=2]="OpaqueAndTransparent",t[t.IntegratedMesh=3]="IntegratedMesh"}(h||(h={}));var C=class extends v{constructor(){super(...arguments),this.doubleSided=!1,this.cullFace=X.Back,this.hasSlicePlane=!0}};o([i()],C.prototype,"doubleSided",void 0),o([i()],C.prototype,"cullFace",void 0),o([i()],C.prototype,"hasSlicePlane",void 0);var P=class extends v{constructor(){super(...arguments),this.externalColor=H(1,1,1,1),this.externalColorMixMode=I.Multiply,this.castShadows=p.All}get transparent(){return this.externalColor[3]<1?p.All:p.None}get opaqueOverride(){return this.externalColorMixMode===I.Replace&&this.externalColor[3]===1?p.All:p.None}get visible(){return this.externalColor[3]>0?p.All:p.None}get type(){return k.Uniform}};o([i({vectorOps:q})],P.prototype,"externalColor",void 0),o([i()],P.prototype,"externalColorMixMode",void 0),o([i()],P.prototype,"castShadows",void 0),function(t){t[t.All=0]="All",t[t.Some=1]="Some",t[t.None=2]="None"}(p||(p={}));var b=class extends v{constructor(){super(...arguments),this.texture=null,this.transparent=p.None,this.opaqueOverride=p.None,this.castShadows=p.None}get type(){return k.Varying}};function Te(t){return t.overlay?.getTexture(_.Highlight)!=null}function Oe(t){return t.overlay?.getTexture(_.WaterNormal)!=null}function ve(t){return t.overlay?.getTexture(_.ColorNoRasterImage)!=null}o([i()],b.prototype,"texture",void 0),o([i()],b.prototype,"transparent",void 0),o([i()],b.prototype,"opaqueOverride",void 0),o([i()],b.prototype,"castShadows",void 0);export{xe as a,u as b,p as c,P as d,b as e};
