import{a as s}from"./chunk-A4UG5DHM.js";import{a as y}from"./chunk-EHG7JRYJ.js";import{a as c}from"./chunk-6F25LG6O.js";import{a as f}from"./chunk-MIS6QMFE.js";import{f as u}from"./chunk-CCJU4DSH.js";import{a as e}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l}from"./chunk-5QEXLALV.js";import{r as m}from"./chunk-P6QFA5MM.js";import{b as i}from"./chunk-2LI2GKBQ.js";import{a as n,b as d}from"./chunk-VTHXE323.js";var a,o=a=class extends u{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new a({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:i(this.color)})}};e([r({type:String,json:{write:!0}})],o.prototype,"description",void 0),e([r({type:String,json:{write:!0}})],o.prototype,"label",void 0),e([r({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],o.prototype,"minValue",void 0),e([r({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],o.prototype,"maxValue",void 0),e([r({type:c,json:{type:[m],write:{isRequired:!0}}})],o.prototype,"color",void 0),o=a=e([l("esri.renderers.support.pointCloud.ColorClassBreakInfo")],o);var h=o;var p,t=p=class extends s{constructor(b){super(b),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new p(d(n({},this.cloneProperties()),{field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:i(this.colorClassBreakInfos),legendOptions:i(this.legendOptions)}))}};e([f({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],t.prototype,"type",void 0),e([r({json:{write:{isRequired:!0}},type:String})],t.prototype,"field",void 0),e([r({type:y,json:{write:!0}})],t.prototype,"legendOptions",void 0),e([r({type:s.fieldTransformTypeKebabDict.apiValues,json:{type:s.fieldTransformTypeKebabDict.jsonValues,read:s.fieldTransformTypeKebabDict.read,write:s.fieldTransformTypeKebabDict.write}})],t.prototype,"fieldTransformType",void 0),e([r({type:[h],json:{write:{isRequired:!0}}})],t.prototype,"colorClassBreakInfos",void 0),t=p=e([l("esri.renderers.PointCloudClassBreaksRenderer")],t);var P=t;export{P as a};
