import{a as V}from"./chunk-4ITLBBRT.js";import{a as g,b as x}from"./chunk-7UE7WQ2N.js";import{a as h,b as _,c,d as v}from"./chunk-SJQJMVOJ.js";import{a as w}from"./chunk-KQDXCPD7.js";import{a as r}from"./chunk-2JW3DUYT.js";import{d as o}from"./chunk-4JIR4MZV.js";import{a as l}from"./chunk-63BBKXWS.js";import{c as u}from"./chunk-VIEK2X23.js";import{a as d}from"./chunk-QGVBCWUY.js";import{e as p}from"./chunk-NFIPKH6V.js";import{l as m}from"./chunk-5QEXLALV.js";var s=class extends w{constructor(e){super(e),this._panEnabled=!1,this._popVertexOnPointerMove=!1,this._addVertexOnPointerUp=!1,this._drawTool=null,this.mode=x}initialize(){this._addViewHandles(),this.view.type==="3d"&&this._addDrawTool()}destroy(){this._removeDrawTool(),this.emit("destroy")}get _clickEnabled(){return this.mode==="click"||this.mode==="hybrid"}get _dragEnabled(){return this.mode==="freehand"||this.mode==="hybrid"}undo(){this._drawTool?this._drawTool.undo():(super.undo(),this.notifyChange("vertices"))}redo(){this._drawTool?this._drawTool.redo():(super.redo(),this.notifyChange("vertices"))}canUndo(){return this._drawTool?.canUndo()??super.canUndo()}canRedo(){return this._drawTool?.canRedo()??super.canRedo()}complete(){this._completeDrawing()}_addViewHandles(){this._addViewHandles2DOnly(),this.addHandles([this.view.on("key-down",e=>{let{key:t,repeat:i}=e;t!==r.vertexAdd||i?t!==r.complete||i?t!==r.undo||this.interactiveUndoDisabled||i?t!==r.redo||this.interactiveUndoDisabled||i||(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo()):(e.stopPropagation(),this._drawCompleteHandler(e)):(e.stopPropagation(),this._handleVertexAddKey(e))},o.TOOL)])}_addViewHandles2DOnly(){this.view.type==="2d"&&(this.addHandles([this.view.on("click",e=>{e.stopPropagation()},o.TOOL),this.view.on("pointer-down",e=>{this._shouldHandlePointerEvent(e)&&!this._panEnabled&&(this._abortSnapping(),this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=l(e),e.pointerType==="touch"&&this._updateCursor())},o.TOOL),this.view.on("pointer-move",e=>{this._popVertexOnPointerMove&&(this.undo(),this._popVertexOnPointerMove=!1),this._abortSnapping(),this._cursorScreenPoint=l(e),e.pointerType!=="touch"&&this._updateCursor()},o.TOOL),this.view.on("pointer-drag",e=>{this._shouldHandlePointerEvent(e)&&(this._abortSnapping(),this._cursorScreenPoint=l(e),this._dragEnabled&&!this._panEnabled?this._vertexAddHandler(e):this._addVertexOnPointerUp=!1)},o.TOOL),this.view.on("pointer-up",e=>{if(this._shouldHandlePointerEvent(e))if(this._abortSnapping(),this._activePointerId=null,this._addVertexOnPointerUp){if(!this._clickEnabled)return this.vertices.length===1&&this.vertices.pop(),void this._drawCompleteHandler(e);this._vertexAddHandler(e)}else{let t=e.pointerType==="touch";this._updateCursor(t)}},o.TOOL),this.view.on("drag",e=>{this._dragEnabled&&this._activePointerId!=null&&!this._panEnabled&&e.stopPropagation()},o.TOOL),this.view.on("drag",["Shift"],e=>{e.stopPropagation()},o.TOOL),this.view.on("double-click",e=>{e.stopPropagation(),this._drawCompleteHandler(e)},o.TOOL),this.view.on("double-click",["Control"],e=>{e.stopPropagation(),this._drawCompleteHandler(e)},o.TOOL),this.view.on("key-down",e=>{let{key:t,repeat:i}=e;t!==r.pan||i||(e.stopPropagation(),this._panEnabled=!0)},o.TOOL),this.view.on("key-up",e=>{e.key===r.pan&&(e.stopPropagation(),this._panEnabled=!1)},o.TOOL)]),this._addUndoRedoHandles())}_handleVertexAddKey(e){this._drawTool?this._drawTool.drawOperation.commitStagedVertex():this._cursorScreenPoint&&(this._abortSnapping(),this._vertexAddHandler(e))}_addUndoRedoHandles(){this.addHandles([this._editGeometryOperations.on("vertex-remove",e=>{if(this.notifyChange("vertices"),e.operation==="undo"){let t=[...this._committedVertices];this._stagedVertex!=null&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("undo",new _(this.view,e.vertices[0].index,t))}}),this._editGeometryOperations.on("vertex-add",e=>{if(this.notifyChange("vertices"),e.operation==="apply"){let t=this._committedVertices.length-1,i=new h(this.view,t,this.vertices);this.emit("vertex-add",i),i.defaultPrevented&&(this._popVertexOnPointerMove=!0)}else if(e.operation==="redo"){let t=[...this._committedVertices];this._stagedVertex!=null&&t.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("redo",new h(this.view,e.vertices[0].index,t))}})])}_addDrawTool(){let e=new V({view:this.view,elevationInfo:this.elevationInfo,hasZ:this.hasZ,geometryType:"polyline",mode:this.mode});this._drawTool=e,this.view.addAndActivateTool(e),this.addHandles([e.on("vertex-add",t=>{if(t.vertices.length!==1)return;let{view:i}=this,n=t.vertices[0].vertexIndex,a=e.getVertexCoords();this.emit("vertex-add",new h(i,n,a)),t.operation!=="undo"&&t.operation!=="redo"||this.emit(t.operation,new h(i,n,a))}),e.on("vertex-remove",t=>{if(t.vertices.length!==1)return;let{view:i}=this,n=t.vertices[0].vertexIndex,a=e.getVertexCoords();this.emit("vertex-remove",new _(i,n,a)),t.operation!=="undo"&&t.operation!=="redo"||this.emit(t.operation,new _(i,n,a))}),e.on("cursor-update",t=>{t.vertices.length===1&&this.emit("cursor-update",new c(this.view,t.vertices[0].vertexIndex,e.getVertexCoords()))}),e.on("complete",t=>{this.emit("draw-complete",new v(e.getVertexCoords())),this._removeDrawTool(),this.removeAllHandles()})])}_removeDrawTool(){this._drawTool&&(this.view.tools.remove(this._drawTool),this._drawTool=null)}_addVertex(e){let t=this._coordinateHelper.arrayToVector(e);this._isDuplicateOfLastVertex(t)||(this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),this._editGeometryOperations.appendVertex(t))}_updateCursor(e=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;let t=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);t==null||e||this._pushCursorVertex(t.vertex,()=>this.emit("cursor-update",new c(this.view,this._activeComponent.vertices.length,this.vertices,this._stagedVertex!=null?new u(this._stagedVertex):null)))}_completeDrawing(){if(this._drawTool)return void this._drawTool.completeCreateOperation();if(this._activePointerId=null,this._popCursorVertex(),this._committedVertices.length<2)return;this._abortSnapping(),this._snappingManager!=null&&this._snappingManager.doneSnapping();let e=new v(this.vertices);this.emit("draw-complete",e),e.defaultPrevented||this.removeAllHandles()}};d([p()],s.prototype,"_clickEnabled",null),d([p()],s.prototype,"_dragEnabled",null),d([p({type:g})],s.prototype,"mode",void 0),s=d([m("esri.views.draw.PolylineDrawAction")],s);var L=s;export{L as a};
