import{a as w,b as T,c as $,d as q,h as z}from"./chunk-ROCEAXU5.js";import{a as B}from"./chunk-5UDQHKRH.js";import{f as D,g as A}from"./chunk-4SRR6EC6.js";import{a as k}from"./chunk-POX73EYJ.js";import{a as L}from"./chunk-IR6XCBC4.js";import{m as _}from"./chunk-ZQIC5NFT.js";import{c as P}from"./chunk-VIEK2X23.js";import{a as n}from"./chunk-QGVBCWUY.js";import{e as f}from"./chunk-NFIPKH6V.js";import{l as h}from"./chunk-5QEXLALV.js";import{b as g}from"./chunk-YOFFGXOB.js";import{a as C,b as H,f as c}from"./chunk-VTHXE323.js";var d=class extends L{constructor(){super(...arguments),this.type="raster-layer-adapter",this._statsCache=new k(20)}get serviceRasterInfo(){return this.rasterInfo}updateRasterInfo(t){return c(this,null,function*(){this.rasterInfo=yield this.generateRasterInfo(t),this.rasterFunction=t?.rasterFunction})}updateRasterInfoWithEstimatedStats(t,e){return c(this,null,function*(){let r=yield this.estimateStatisticsHistograms(e);r?.statistics&&(t.statistics=r.statistics),r?.histograms&&(t.histograms=r.histograms)})}};n([f()],d.prototype,"layer",void 0),n([f()],d.prototype,"serviceRasterInfo",null),n([f()],d.prototype,"rasterInfo",void 0),n([f()],d.prototype,"rasterFunction",void 0),n([f({readOnly:!0})],d.prototype,"type",void 0),n([f()],d.prototype,"version",void 0),d=n([h("esri.smartMapping.raster.support.adapters.RasterLayerAdapter")],d);var v=d;var x=class extends v{generateRasterInfo(t){let e=t?.rasterFunction;try{return this.layer.generateRasterInfo(e,{signal:t?.signal})}catch{return Promise.resolve(this.layer.serviceRasterInfo)}}estimateStatisticsHistograms(t){return c(this,null,function*(){let{layer:e}=this,r=e.mosaicRule?.multidimensionalDefinition?.[0]?.variableName??"",s=`${t?.rasterFunction?.functionName??"default"}${r}`,a=this._statsCache.get(s);if(a)return a;let{width:i,height:o,pixelSize:m}=e.rasterInfo,u=1;for(;i>2e3||o>2e3;)i/=2,o/=2,u*=2;let p=t?.rasterFunction??e.rasterFunction,{fullExtent:l,mosaicRule:R}=e;m=new P(m.x*u,m.y*u,l.spatialReference);let S=new B({geometry:l,pixelSize:m,renderingRule:p,mosaicRule:R}),y;if(e.capabilities.operations.supportsComputeStatisticsHistograms)y=yield e.computeStatisticsHistograms(S,t);else{let{histograms:N}=yield e.computeHistograms(S,t);y={statistics:A(N),histograms:N}}return y&&this._statsCache.put(s,y),y})}supportsMultidirectionalHillshade(){return this.layer.version>=10.81}load(t){return this.addResolvingPromise(this.layer.load(t).then(()=>{this.generateRasterInfo({rasterFunction:this.rasterFunction,signal:t?.signal}).then(e=>this.rasterInfo=e)})),Promise.resolve(this)}};n([f()],x.prototype,"layer",void 0),x=n([h("esri.smartMapping.raster.support.adapters.ImageryLayerAdapter")],x);var j=x;var b=class extends v{generateRasterInfo(t){return c(this,null,function*(){let{layer:e}=this,r=t?.rasterFunction;if(e.type==="imagery-tile"&&r)try{return yield e.generateRasterInfo(r,{signal:t?.signal})}catch{return e.serviceRasterInfo}return this.rasterInfo})}estimateStatisticsHistograms(t){return c(this,null,function*(){let{layer:e}=this,r=e.multidimensionalDefinition?.[0]?.variableName??"",s=`${e.rasterFunction?.functionName??"default"}${r}`,a=this._statsCache.get(s);if(a)return a;let{raster:i}=e,{extent:o,width:m,height:u}=O(i.rasterInfo),{pixelBlock:p}=yield e.fetchPixels(o,m,u,t);if(p==null)throw new g("raster-layer-adapter","Unable to estimate histograms");let l=D(p);return l&&this._statsCache.put(s,l),l})}supportsMultidirectionalHillshade(){return!0}load(t){return this.addResolvingPromise(this.layer.load(t).then(()=>this.rasterInfo=this.layer.raster.rasterInfo)),Promise.resolve(this)}};function O(t,e=1e3){let{pyramidScalingFactor:r,maximumPyramidLevel:s}=t.storageInfo,{extent:a,width:i,height:o,pixelSize:m}=t,u=Math.max(0,Math.ceil(Math.log(Math.max(i,o)/e)/Math.log(r))-1),p=0,l=0;if(u<=s){let R=r**u;i=Math.floor(i/R),o=Math.floor(o/R)}else u=0,i=Math.min(i,e),o=Math.min(o,e),p=Math.max(Math.floor(i/2-500),0),l=Math.max(Math.floor(o/2-500),0),a=new _({xmin:a.xmin+p*m.x,xmax:Math.min(a.xmax,a.xmin+p*m.x*e),ymin:a.ymin+l*m.y,ymax:Math.min(a.ymax,a.ymin+l*m.y*e)});return{extent:a,width:i,height:o,origin:{x:p,y:l}}}n([f()],b.prototype,"layer",void 0),b=n([h("esri.smartMapping.raster.support.adapters.ImageryTileLayerAdapter")],b);var I=b;var F={imagery:{adapter:j,label:"ImageryLayer"},"imagery-tile":{adapter:I,label:"ImageryTileLayer"},wcs:{adapter:I,label:"WCSLayer"}},U={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field",flow:"raster-flow"},W=Object.keys(F).map(t=>F[t].label);function M(t){if(t.type==="raster-layer-adapter")return t;let e=F[t.type]?.adapter;return e==null?null:new e({layer:t})}function kt(t){return c(this,null,function*(){let e=M((t=yield E(t)).layer),r=yield e.generateRasterInfo(t),s=$(r,!0).map(l=>U[l]),a=e.layer,i=a.type==="imagery-tile"?q(a.raster):void 0,o=a.type!=="wcs"?a.presetRenderers:void 0,m=w({variableName:t.variableName,rasterFunctionName:t.rasterFunction?.functionName,presetRenderers:o}),u=m?.renderer??T(r,{rasterFunctionColorRamp:i,variableName:t.variableName}),{bandCount:p}=r;return p>1&&s.push("raster-rgb"),!s.includes("raster-class-breaks")&&p===1&&+e.layer?.version>=10.3&&s.push("raster-class-breaks"),{supportedTypes:s,defaultRenderer:u}})}function Dt(t){return c(this,null,function*(){let e=M((t=yield E(t)).layer),r=yield e.generateRasterInfo(t),{layer:s}=e;if(s.type!=="wcs"&&s.presetRenderers?.length){let a=w({variableName:t.variableName,rasterFunctionName:t.rasterFunction?.functionName,presetRenderers:s.presetRenderers});if(a?.bandIds?.length)return a.bandIds}return z(r)})}function E(t){return c(this,null,function*(){let{layer:e}=t;if(!e)throw new g("raster-renderer-creator:missing-parameters","'layer' parameter is required");let r=M(e);if(r==null)throw new g("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+W.join(", "));yield r.load();let s=t.rasterFunction??t.renderingRule??e.rasterFunction;return yield r.updateRasterInfo({rasterFunction:s,signal:t.signal}),H(C({},t),{layer:r,rasterFunction:s})})}export{M as a,kt as b,Dt as c,E as d};
