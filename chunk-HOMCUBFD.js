import{b as O}from"./chunk-ZWHAEUE3.js";import{c as j}from"./chunk-E56W4PK4.js";import{a as C}from"./chunk-BAEF3CT6.js";import{a as D}from"./chunk-VTHXE323.js";var H=new C({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Q=new C({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function W(d,s,m,l){let[e,u]=d,n=j(m)&&!j(e.pixelType)&&!j(u.pixelType),t=[e.mask,u.mask].filter(p=>p),o=O.combineBandMasks(t),a=d.map(p=>p.pixels[0]),{width:f,height:h}=e,k=O.createEmptyBand(m,f*h);switch(s){case"difference":case"relative-difference":F({bands:a,mask:o,outBand:k,isRoundingNeeded:n,isRelative:s==="relative-difference"});break;case"categorical":S(D({bands:a,mask:o,outBand:k},l));break;case"euclidean-distance":q({pixels:d.map(p=>p.pixels),mask:o,outBand:k});break;case"angle-difference":K({pixels:d.map(p=>p.pixels),mask:o,outBand:k});break;case"band-with-most-change":L({pixels:d.map(p=>p.pixels),mask:o,outBand:k})}let b=new O({width:f,height:h,pixels:[k],pixelType:m,mask:o});return b.updateStatistics(),b}function F(d){let{bands:[s,m],mask:l,isRelative:e,isRoundingNeeded:u,outBand:n}=d,t=s.length;for(let o=0;o<t;o++)if(!l||l[o]){let a=s[o]-m[o];if(e){let f=Math.max(Math.abs(s[o])-Math.abs(m[o]));a=f>0?a/f:0}n[o]=u?Math.round(a):a}}function S(d){let{bands:[s,m],categoryIndexLookups:[l,e],classNames:[u,n],mask:t,keepMethod:o,outBand:a}=d,f=s.length,h=u.length,k=n.length,b=h*k,p=b+1,x=b+2;for(let i=0;i<f;i++)if(!t||t[i]){let c=s[i],r=m[i],M=l[c],A=e[r],T=u[M],g=n[A];a[i]=M==null||A==null?b:o==="changed"&&T===g?p:o==="unchanged"&&T!==g?x:M*k+A}}function q(d){let{pixels:[s,m],mask:l,outBand:e}=d,u=s[0].length,n=s.length;for(let t=0;t<u;t++)if(!l||l[t]){let o=0;for(let a=0;a<n;a++){let f=s[a][t]-m[a][t];o+=f*f}e[t]=Math.sqrt(o)}}function K(d){let{pixels:[s,m],mask:l,outBand:e}=d,u=s[0].length,n=s.length;for(let t=0;t<u;t++)if(!l||l[t]){let o=0,a=0,f=0;for(let k=0;k<n;k++){let b=s[k][t],p=m[k][t];o+=b*p,a+=b*b,f+=p*p}let h=Math.sqrt(a*f);e[t]=h?Math.acos(o/h):1.5707963267948966}}function L(d){let{pixels:[s,m],mask:l,outBand:e}=d,u=s[0].length,n=s.length;for(let t=0;t<u;t++)if(!l||l[t]){let o=0,a=0;for(let f=0;f<n;f++){let h=Math.abs(s[f][t]-m[f][t]);h>o&&(o=h,a=f)}e[t]=a}}function E(d,s,m,l,e){let u=Math.floor(l/2);for(let t=0;t<u;t++)for(let o=0;o<s;o++)d[t*s+o]=d[(e-1-t)*s+o],d[(m-1-t)*s+o]=d[(m-e+t)*s+o];let n=Math.floor(e/2);for(let t=0;t<m;t++){let o=t*s;for(let a=0;a<n;a++)d[o+a]=d[o+e-1-a],d[o+s-a-1]=d[o+s+a-e]}}var st=new C({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function z(d,s){let{fillNoDataOnly:m}=s,{band:l,width:e,height:u,mask:n,outBand:t}=d;if(m&&!n)return void t.set(l);let{statisticsType:o,kernelRows:a,kernelCols:f}=s,h=o==="stddev",k=e*u,b=new Float64Array(k),p=new Float64Array(k),x=new Uint32Array(k);for(let g=0;g<u;g++){let y=g*e,w=0,B=0,N=0;for(let v=0;v<f;v++)n&&!n[y+v]||(w+=l[y+v],h&&(B+=l[y+v]**2),N++);b[y]=w,p[y]=B,x[y]=N;for(let v=1;v<=e-f;v++){let R=y+v-1,U=R+f;n?(n[R]&&(N--,w-=l[R],h&&(B-=l[R]**2)),n[U]&&(N++,w+=l[U],h&&(B+=l[U]**2))):(w-=l[R],w+=l[U],h&&(B-=l[R]**2,B+=l[U]**2)),b[y+v]=w,x[y+v]=N,h&&(p[y+v]=B)}}let i=new Float64Array(k),c=new Float64Array(k),r=new Uint32Array(k),M=a*e;for(let g=0;g<=e-f;g++){let y=0,w=0,B=0;for(let N=0;N<a;N++){let v=N*e+g;y+=b[v],B+=x[v],h&&(w+=p[v])}i[g]=y,c[g]=w,r[g]=B;for(let N=1;N<=u-a;N++){let v=(N-1)*e+g,R=v+M;y-=b[v],y+=b[R],B-=x[v],B+=x[R],h&&(w-=p[v],w+=p[R]),i[N*e+g]=y,c[N*e+g]=w,r[N*e+g]=B}}let A=Math.floor(a/2),T=Math.floor(f/2);for(let g=A;g<u-A;g++){let y=g*e;for(let w=T;w<e-T;w++){let B=(g-A)*e+w-T,N=r[B];if(N===0||m&&(!n||n[y+w]))continue;let v=i[B]/N,R=h?Math.sqrt((c[B]-i[B]*v)/N):v;t[y+w]=R,n&&(n[y+w]=255)}}}function I(d,s){let{fillNoDataOnly:m}=s,{band:l,width:e,height:u,mask:n,outBand:t}=d;if(m&&!n)return void t.set(l);let{kernelRows:o,kernelCols:a,statisticsType:f}=s,h=Math.floor(o/2),k=Math.floor(a/2),b=f==="min",p=t.slice(),x=new Uint32Array(e*u);for(let i=h;i<u-h;i++){let c=i*e;for(let r=k;r<e-k;r++){let M=b?Number.MAX_VALUE:-Number.MAX_VALUE,A=0;for(let T=0;T<o;T++)for(let g=0;g<a;g++){let y=c+r+(T-h)*e+g-k;n&&!n[y]||(M=b?Math.min(M,l[y]):Math.max(M,l[y]),A++)}n?(p[c+r]=A===0?0:M,x[c+r]=A):t[c+r]=A===0?0:M}}if(n)for(let i=h;i<u-h;i++){let c=i*e;for(let r=k;r<e-k;r++)if(x[c+r]){if(m&&n[c+r])continue;t[c+r]=p[c+r],n[c+r]=255}}}function J(d,s){let{fillNoDataOnly:m}=s,{band:l,width:e,height:u,mask:n,outBand:t}=d;if(m&&!n)return void t.set(l);let{kernelRows:o,kernelCols:a}=s,f=Math.floor(o/2),h=Math.floor(a/2),k=t.slice(),b=new Uint32Array(e*u);for(let p=f;p<u-f;p++){let x=p*e;for(let i=h;i<e-h;i++){if(m&&n?.[x+i])continue;let c=[];for(let r=0;r<o;r++)for(let M=0;M<a;M++){let A=x+i+(r-f)*e+M-h;n&&!n[A]||c.push(l[A])}c.length&&(c.sort((r,M)=>r-M),n?(k[x+i]=c[Math.floor((c.length-1)/2)],b[x+i]=c.length):t[x+i]=c[Math.floor((c.length-1)/2)])}}if(n)for(let p=f;p<u-f;p++){let x=p*e;for(let i=h;i<e-h;i++)if(b[x+i]){if(m&&n[x+i])continue;t[x+i]=k[x+i],n[x+i]=255}}}function P(d,s){let{fillNoDataOnly:m}=s,{band:l,width:e,height:u,mask:n,outBand:t}=d;if(m&&!n)return void t.set(l);let{kernelRows:o,kernelCols:a}=s,f=Math.floor(o/2),h=Math.floor(a/2),k=s.statisticsType==="majority",b=o*a,p=t.slice(),x=new Uint32Array(e*u);for(let i=f;i<u-f;i++){let c=i*e;for(let r=h;r<e-h;r++){if(m&&n?.[c+r])continue;let M=new Map;for(let y=0;y<o;y++)for(let w=0;w<a;w++){let B=c+r+(y-f)*e+w-h;if(n&&!n[B])continue;let N=l[B];M.set(N,M.has(N)?M.get(N)+1:1)}if(M.size===0)continue;let A=0,T=0,g=k?0:b+1;for(let y of M.keys())T=M.get(y),k===T>g&&(g=T,A=y);n?(p[c+r]=A,x[c+r]=M.size):t[c+r]=A}}if(n)for(let i=f;i<u-f;i++){let c=i*e;for(let r=h;r<e-h;r++)if(x[c+r]){if(m&&n[c+r])continue;t[c+r]=p[c+r],n[c+r]=255}}}function at(d,s){let{mask:m}=d,{fillNoDataOnly:l}=s;if(l&&!m)return d;let{pixels:e,width:u,height:n,bandMasks:t,pixelType:o}=d,a=e.length,f=u*n,h=[],{kernelRows:k,kernelCols:b,statisticsType:p,mirrorEdges:x}=s;if(l&&!m)return d;let i=s.outputPixelType??o,c=[];for(let A=0;A<a;A++){let T=e[A],g=O.createEmptyBand(i,f);l&&g.set(T);let y=t?.[A]??m,w=y?.slice()??null,B={band:T,width:u,height:n,mask:w,outBand:g};switch(p){case"min":case"max":I(B,s);break;case"mean":case"stddev":z(B,s);break;case"median":J(B,s);break;case"majority":case"minority":P(B,s)}x&&!l&&E(g,u,n,k,b),h.push(g),w&&c.push(w)}let r=c[0]??m;c.length!==a&&(c.length=0),a>1&&t?.length&&(r=O.combineBandMasks(t));let M=new O({pixelType:i,width:u,height:n,pixels:h,bandMasks:t&&c.length?c:null,mask:r});return M.updateStatistics(),M}export{H as a,Q as b,W as c,E as d,st as e,at as f};
