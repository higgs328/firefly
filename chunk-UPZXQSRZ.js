import{a as P,b as v,c as I,d as b,e as y}from"./chunk-7GIEDGLP.js";import{a as ee}from"./chunk-WKJYYP4U.js";import{a as V}from"./chunk-VP2YX4L2.js";import{a as te}from"./chunk-IDSQ2YJ4.js";import{a as ie}from"./chunk-FPCHE4I2.js";import{i as T}from"./chunk-SJAM4JSC.js";import{f as Y}from"./chunk-GTCK26BQ.js";import{a as X}from"./chunk-NYVW6BKJ.js";import{a as K}from"./chunk-456M7HFK.js";import{a as J}from"./chunk-LAX5536Z.js";import{a as $}from"./chunk-BPWNCOXC.js";import{g as k,s as Q}from"./chunk-DA3SDKGO.js";import{c as U}from"./chunk-VIEK2X23.js";import{i as N}from"./chunk-Q6Y4JG7Q.js";import{a as W}from"./chunk-7F5DJLJT.js";import{a as Z}from"./chunk-MVHHPJM7.js";import{a as f,b as A,i as q}from"./chunk-TG45K3WR.js";import{a as n}from"./chunk-QGVBCWUY.js";import{e as l}from"./chunk-NFIPKH6V.js";import{l as D}from"./chunk-5QEXLALV.js";import{K as H,t as G,y as M}from"./chunk-4PTIEWMT.js";import{b as m}from"./chunk-YOFFGXOB.js";import{g as _}from"./chunk-XRGPJ3QY.js";import{y as j}from"./chunk-QBWJMFH5.js";import{a as z,b as S,f as d}from"./chunk-VTHXE323.js";var le="esri.widgets.Popup.PopupViewModel",x=()=>_.getLogger(le),re=e=>{let{event:t,view:i,viewModel:r}=e,{action:s}=t;if(!s)return Promise.reject(new m("trigger-action:missing-arguments","Event has no action"));let{disabled:o,id:u}=s;if(!u)return Promise.reject(new m("trigger-action:invalid-action","action.id is missing"));if(o)return Promise.reject(new m("trigger-action:invalid-action","Action is disabled"));if(u===v.id)return ce(r).catch(G);if(u===b.id)return he(r);if(u===y.id)return r.browseClusterEnabled=!r.browseClusterEnabled,r.featureMenuOpen=r.browseClusterEnabled,Promise.resolve();if(u===I.id){r.visible=!1;let{selectedFeature:c}=r;if(!c)return Promise.reject(new m(`trigger-action:${I.id}`,"selectedFeature is required",{selectedFeature:c}));let{sourceLayer:h}=c;return h?h.remove(c):i?.graphics.remove(c),Promise.resolve()}return Promise.resolve()};function R(e){let{selectedFeature:t,location:i,view:r}=e;return r?t??i??null:null}function C(e){return!!e&&e.isAggregate&&e.sourceLayer?.featureReduction?.type==="cluster"}function ue(e,t){return d(this,null,function*(){if(t?.type!=="3d"||!e||e.declaredClass!=="esri.Graphic")return!0;let i=t.getViewForGraphic(e);if(i&&"whenGraphicBounds"in i){let r=null;try{r=yield i.whenGraphicBounds(e,{useViewElevation:!0})}catch{}return!r||!r.boundingBox||r.boundingBox[0]===r.boundingBox[3]&&r.boundingBox[1]===r.boundingBox[4]&&r.boundingBox[2]===r.boundingBox[5]}return!0})}function ce(e,t){return d(this,null,function*(){let{location:i,selectedFeature:r,view:s,zoomFactor:o}=e;yield t?.viewModel?.updateGeometry();let u=t?.graphic,c=u?.geometry?u:R(e);if(!s||!c){let w=new m("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:c,view:s});throw x().error(w),w}let h=s.scale/o,g=u?.geometry??e.selectedFeature?.geometry??i,p=g!=null&&g.type==="point"&&(yield ue(u??r,s));v.active=!0,v.disabled=!0;try{yield e.zoomTo({target:{target:c,scale:p?h:void 0}})}catch(w){if(M(w))return;let F=new m("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:u??r});x().error(F)}finally{v.active=!1,v.disabled=!1,e.zoomToLocation=null,p&&(e.location=g)}})}function he(e){return d(this,null,function*(){let{selectedFeature:t,view:i}=e;if(i?.type!=="2d"){let u=new m("zoomToCluster:invalid-view","View must be 2d MapView.",{view:i});throw x().error(u),u}if(!t||!C(t)){let u=new m("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:t});throw x().error(u),u}let[r,s]=yield B(i,t);b.active=!0,b.disabled=!0;let{extent:o}=yield r.queryExtent(s);o&&(yield e.zoomTo({target:o})),b.active=!1,b.disabled=!1})}function se(e){return d(this,null,function*(){let{view:t,selectedFeature:i}=e;if(!t||!i)return;let[r,s]=yield B(t,i),{extent:o}=yield r.queryExtent(s);e.selectedClusterBoundaryFeature.geometry=o,t.graphics.add(e.selectedClusterBoundaryFeature)})}function oe(e){return d(this,null,function*(){let{selectedFeature:t,view:i}=e;if(!i||!t)return;let[r,s]=yield B(i,t);y.active=!0,y.disabled=!0;let{features:o}=yield r.queryFeatures(s);y.active=!1,y.disabled=!1,y.value=!0;let u={features:[t].concat(o)};e?.initialDisplayMode==="feature"&&(u.featureMenuOpen=!0),e?.open(u)})}function B(e,t){return d(this,null,function*(){let i=yield e.whenLayerView(t.sourceLayer),r=i.createQuery(),s=t.getObjectId();return r.aggregateIds=s!=null?[s]:[],[i,r]})}function ae(e){y.value=!1;let t=e.features.filter(i=>C(i));t.length&&(e.features=t)}var O="location-scale-handle",de=()=>[v.clone()],pe=()=>[b.clone(),y.clone()],L=null;function ge(e,t){return e==="building-scene"||t==="2d"&&(e==="map-image"||e==="tile"||e==="imagery"||e==="imagery-tile")}var a=class extends ie(ee){constructor(e){super(e),this._pendingPromises=new X,this._fetchFeaturesController=null,this._highlightPromises={"highlight-active-feature":null,"highlight-selected-feature":null},this._selectedClusterFeature=null,this.actions=new P,this.activeFeature=null,this.autoCloseEnabled=!1,this.browseClusterEnabled=!1,this.content=null,this.defaultPopupTemplateEnabled=!1,this.featurePage=null,this.featuresPerPage=20,this.featureMenuOpen=!1,this.featureMenuTitle=null,this.featureViewModelAbilities=null,this.featureViewModels=[],this.highlightEnabled=!0,this.includeDefaultActions=!0,this.initialDisplayMode="feature",this.selectedClusterBoundaryFeature=new J({symbol:new $({outline:{width:1.5,color:"cyan"},style:"none"})}),this.title=null,this.updateLocationEnabled=!1,this.view=null,this.visible=!1,this.zoomFactor=4,this.zoomToLocation=null,this._debouncedLocationUpdate=H(t=>d(this,null,function*(){let{spatialReference:i}=this,r=this.selectedFeature?.geometry?.type,s=this.location??t;if(r&&r!=="mesh"&&i&&s&&this.selectedFeature)if(r!=="point")try{let o=this.selectedFeature,u=o.geometry,c=this._getHighlightLayer(o),h=o.getObjectId();if(!c||!this.view)return;if(h){let g=this.view?.allLayerViews.find(F=>F.layer.uid===c.uid);if(!g||!("queryFeatures"in g))return;let p=g.createQuery();p.outSpatialReference=i,p.objectIds=[h],p.returnGeometry=!0;let{features:w}=yield g.queryFeatures(p);u=w[0]?.geometry}if(!u||u.type==="mesh")return;if(u=k(u,i),L||(L=yield import("./chunk-ZASZZYFJ.js")),!(yield L.intersects(u,s))){let g=(yield L.nearestCoordinate(u,s)).coordinate??s;this.selectedFeature===o&&(this.location=g)}}catch(o){M(o)||_.getLogger(this).error(o)}else this.location=V(this.selectedFeature.geometry)??s}))}initialize(){this.addHandles([this.on("view-change",()=>this._autoClose()),f(()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view],()=>this._highlightSelectedFeature()),f(()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view],()=>this._highlightActiveFeature()),f(()=>this.view?.animation?.state,e=>this._animationStateChange(e)),f(()=>this.location,e=>this._locationChange(e)),f(()=>this.selectedFeature,e=>this._selectedFeatureChange(e)),f(()=>[this.selectedFeatureIndex,this.featureCount,this.featuresPerPage],()=>this._selectedFeatureIndexChange()),f(()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels],()=>this._setGraphicOnFeatureViewModels()),f(()=>this.featureViewModels,()=>this._featureViewModelsChange()),this.on("trigger-action",e=>re({event:e,viewModel:this,view:this.view})),A(()=>!this.waitingForResult,()=>this._waitingForResultChange(),q),f(()=>[this.features,this.map,this.spatialReference,this.timeZone],()=>this._updateFeatureVMs()),f(()=>this.view?.scale,()=>this._viewScaleChange()),A(()=>!this.visible,()=>this.browseClusterEnabled=!1),f(()=>this.browseClusterEnabled,e=>e?this.enableClusterBrowsing():this.disableClusterBrowsing())])}destroy(){this._cancelFetchingFeatures(),this._pendingPromises.clear(),this.browseClusterEnabled=!1,this.view=null,this.map=null,this.spatialReference=null,this.timeZone=null}get active(){return!(!this.visible||this.waitingForResult)}get allActions(){let e=this._get("allActions")||new P;e.removeAll();let{actions:t,defaultActions:i,defaultPopupTemplateEnabled:r,includeDefaultActions:s,selectedFeature:o}=this,u=s?i.concat(t):t,c=o&&(typeof o.getEffectivePopupTemplate=="function"&&o.getEffectivePopupTemplate(r)||o.popupTemplate),h=c?.actions;return(c?.overwriteActions?h:h?.concat(u)??u)?.filter(Boolean).forEach(p=>e.add(p)),e}get defaultActions(){let e=this._get("defaultActions")||new P;return e.removeAll(),e.addMany(C(this.selectedFeature)?pe():de()),e}get featureCount(){return this.features.length}set features(e){let t=e||[];this._set("features",t);let{pendingPromisesCount:i,promiseCount:r,selectedFeatureIndex:s}=this,o=r&&t.length;this.initialDisplayMode!=="list"?o&&i&&s===-1?this.selectedFeatureIndex=0:o&&s!==-1||(this.selectedFeatureIndex=t.length?0:-1):(!o||o&&i===r)&&(this.selectedFeatureIndex=-1)}set location(e){let t=e,i=this.spatialReference?.isWebMercator;e?.spatialReference?.isWGS84&&i&&(t=N(e)),this._set("location",t)}get map(){return this.view?.map??null}set map(e){this._override("map",e)}get pendingPromisesCount(){return this._pendingPromises.size}get promiseCount(){return this.promises.length}get promises(){return this._get("promises")||[]}set promises(e){this._pendingPromises.clear(),this.features=[],Array.isArray(e)&&e.length?(this._set("promises",e),(e=e.slice()).forEach(t=>this._pendingPromises.add(t)),e.reduce((t,i)=>t.finally(()=>i.then(r=>{this._pendingPromises.has(i)&&this._updateFeatures(r)}).finally(()=>this._pendingPromises.delete(i)).catch(()=>{})),Promise.resolve())):this._set("promises",[])}get selectedFeature(){let{features:e,selectedFeatureIndex:t}=this;return t===-1?null:e[t]||null}get selectedFeatureIndex(){let e=this._get("selectedFeatureIndex");return typeof e=="number"?e:-1}set selectedFeatureIndex(e){let{featureCount:t}=this;(isNaN(e)||e<0||!t)&&(e=-1),this.activeFeature=null,this._set("selectedFeatureIndex",e)}get selectedFeatureViewModel(){return this.featureViewModels[this.selectedFeatureIndex]||null}get spatialReference(){return this.view?.spatialReference??null}set spatialReference(e){this._override("spatialReference",e)}get state(){let{view:e,map:t}=this;return e?e.ready?"ready":"disabled":t?"ready":"disabled"}get timeZone(){return this.view?.timeZone??Z}set timeZone(e){this._overrideIfSome("timeZone",e)}get waitingForContents(){return this.featureViewModels.some(e=>e.waitingForContent)}get waitingForResult(){return!(!(this._fetchFeaturesController||this.pendingPromisesCount>0)||this.featureCount!==0)}centerAtLocation(){let{view:e}=this,t=R(this);return t&&e?this.callGoTo({target:{target:t,scale:e.scale}}):Promise.reject(new m("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:t,view:e}))}zoomTo(e){return this.callGoTo(e)}clear(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})}fetchFeatures(e,t){let{view:i}=this;if(!i||!e)throw new m("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",{screenPoint:e,view:i});return i.fetchPopupFeatures(e,{pointerType:t?.event?.pointerType,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:t?.signal})}open(e){let t=S(z({updateLocationEnabled:!1,promises:[],fetchFeatures:!1},e),{visible:!0}),{fetchFeatures:i}=t;delete t.fetchFeatures,i&&this._setFetchFeaturesPromises(t.location);let r=["actionsMenuOpen","collapsed"];for(let s of r)delete t[s];this.set(t)}triggerAction(e){let t=this.allActions.at(e);t&&!t.disabled&&this.emit("trigger-action",{action:t})}next(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex+1,this.featureCount),this}previous(){return this.selectedFeatureIndex=this._getRoundRobinIndex(this.selectedFeatureIndex-1,this.featureCount),this}disableClusterBrowsing(){ae(this),this._clearBrowsedClusterGraphics()}enableClusterBrowsing(){return d(this,null,function*(){let{view:e,selectedFeature:t}=this;e?.type==="2d"?C(t)?(yield se(this),yield oe(this)):_.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",t):_.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",t)})}handleViewClick(e){this._fetchFeaturesAndOpen(e)}_getRoundRobinIndex(e,t){return(e+t)%t}_animationStateChange(e){this.zoomToLocation||(v.disabled=e==="waiting-for-target")}_clearBrowsedClusterGraphics(){let e=[this.selectedClusterBoundaryFeature,this._selectedClusterFeature].filter(j);this.view?.graphics?.removeMany(e),this._selectedClusterFeature=null,this.selectedClusterBoundaryFeature.geometry=null}_viewScaleChange(){if(C(this.selectedFeature))return this.browseClusterEnabled=!1,this.visible=!1,void this.clear();this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])}_locationChange(e){let{selectedFeature:t,updateLocationEnabled:i,view:r}=this;r&&i&&e&&(!t||t.geometry)&&this.centerAtLocation()}_selectedFeatureIndexChange(){this.featurePage=this.featureCount>0?Math.floor((this.selectedFeatureIndex+1)/this.featuresPerPage):null}_featureViewModelsChange(){this.featurePage=this.featureCount>0?1:null}_setGraphicOnFeatureViewModels(){let{features:e,featureCount:t,featurePage:i,featuresPerPage:r,featureViewModels:s}=this;if(i==null)return;let o=((i-1)*r+t)%t,u=o+r;s.slice(o,u).forEach((c,h)=>{c&&(c.graphic??=e[o+h])})}_selectedFeatureChange(e){return d(this,null,function*(){let{location:t,updateLocationEnabled:i,view:r}=this;if(!e||!r)return;if(this.browseClusterEnabled)return this._selectedClusterFeature&&(r.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),C(e)?void 0:(e.symbol=yield T(e),this._selectedClusterFeature=e,void r.graphics.add(this._selectedClusterFeature));let s=e.sourceLayer?.type;if(s!=="map-image"&&s!=="imagery"&&s!=="imagery-tile"||(e.symbol=yield T(e)),!i&&t||!e.geometry){if(i&&!e.geometry){yield this.centerAtLocation();let o=r.center?.clone();o&&(this.location=o)}}else this.location=V(e.geometry)})}_waitingForResultChange(){!this.featureCount&&this.promises&&(this.visible=!1)}_setFetchFeaturesPromises(e){return d(this,null,function*(){let{pendingFeatures:t}=yield this._fetchFeaturesWithController({mapPoint:e});this.promises=t})}_destroyFeatureVMs(){this.featureViewModels.forEach(e=>e&&!e.destroyed&&e.destroy()),this._set("featureViewModels",[])}_updateFeatureVMs(){let{selectedFeature:e,features:t,featureViewModels:i,view:r,spatialReference:s,map:o,timeZone:u,location:c}=this;if(C(t[0])||(this.browseClusterEnabled=!1),this._destroyFeatureVMs(),!t?.length)return;let h=i.slice(),g=[];t.forEach((p,w)=>{if(!p)return;let F=null;if(h.some((E,ne)=>(E&&E.graphic===p&&(F=E,h.splice(ne,1)),!!F)),F)g[w]=F;else{let E=new Y({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:s,graphic:p===e?p:null,location:c,map:o,view:r,timeZone:u});g[w]=E}}),h.forEach(p=>p&&!p.destroyed&&p.destroy()),this._set("featureViewModels",g)}_getScreenPoint(e,t){return d(this,null,function*(){let{spatialReference:i,view:r}=this;if(!r)return null;yield r?.when();let s=e?.spatialReference;return s&&i?(yield Q(s,i,null,t),r.toScreen(e)):null})}_cancelFetchingFeatures(){let e=this._fetchFeaturesController;e&&e.abort(),this._fetchFeaturesController=null}_projectScreenPointAndFetchFeatures(s){return d(this,arguments,function*({mapPoint:e,screenPoint:t,event:i,signal:r}){return this.fetchFeatures(t??(yield this._getScreenPoint(e??this.location,{signal:r})),{signal:r,event:i})})}_fetchFeaturesWithController({mapPoint:e,screenPoint:t,event:i}){this._cancelFetchingFeatures();let r=new AbortController,{signal:s}=r;this._fetchFeaturesController=r;let o=this._projectScreenPointAndFetchFeatures({mapPoint:e,screenPoint:t,signal:s,event:i});return o.catch(()=>{}).then(()=>{this._fetchFeaturesController=null}),o}_fetchFeaturesAndOpen(e){return d(this,null,function*(){let{mapPoint:t,screenPoint:i}=e,{view:r}=this;this.removeHandles(O),this.addHandles([f(()=>this.view?.scale,()=>this._debouncedLocationUpdate(t).catch(o=>{M(o)||_.getLogger(this).error(o)})),A(()=>!this.visible,()=>{this.removeHandles(O)},{once:!0})],O);let{pendingFeatures:s}=yield this._fetchFeaturesWithController({mapPoint:t,screenPoint:i,event:e});r?.popup&&"open"in r.popup&&r.popup.open({location:t??void 0,promises:s})})}_autoClose(){this.autoCloseEnabled&&(this.visible=!1)}_getLayerView(e,t){return d(this,null,function*(){return yield e.when(),e.whenLayerView(t)})}_getHighlightLayer(e){let{layer:t,sourceLayer:i}=e;return i&&"layer"in i&&i.layer?i.layer:i?.type==="map-notes"||i?.type==="subtype-group"?i:t}_getHighlightLayerView(e,t){return t.type==="subtype-sublayer"&&t.parent&&this._mapIncludesLayer(t.parent)?this._getLayerView(e,t.parent):t&&this._mapIncludesLayer(t)?this._getLayerView(e,t):null}_getHighlightTarget(e,t,i){if(ge(t.type,i))return e;let r=e.getObjectId();if(r!=null)return r;let s=t.type==="imagery"?void 0:"objectIdField"in t?t.objectIdField||te:null,o=e.attributes;return o&&s&&o[s]||e}_mapIncludesLayer(e){return!!this.map?.allLayers?.includes(e)}_highlightFeature(e,t){return d(this,null,function*(){this.removeHandles(e);let i=this[t];if(!i)return;let{highlightEnabled:r,view:s,visible:o}=this;if(!s||!r||!o)return;let u=this._getHighlightLayer(i);if(!u)return;let c=this._getHighlightLayerView(s,u);if(!c)return;this._highlightPromises[e]=c;let h=yield c;if(!(h&&K(h)&&this._highlightPromises[e]===c&&this[t]&&this.highlightEnabled))return;let g=h.highlight(this._getHighlightTarget(i,u,s.type));this.addHandles(g,e)})}_highlightActiveFeature(){return d(this,null,function*(){return this._highlightFeature("highlight-active-feature","activeFeature")})}_highlightSelectedFeature(){return d(this,null,function*(){return this._highlightFeature("highlight-selected-feature","selectedFeature")})}_updateFeatures(e){let{features:t}=this,i=e.filter(r=>!t.includes(r));i?.length&&(this.features=t.concat(i))}};n([l()],a.prototype,"_fetchFeaturesController",void 0),n([l({type:P})],a.prototype,"actions",void 0),n([l({readOnly:!0})],a.prototype,"active",null),n([l()],a.prototype,"activeFeature",void 0),n([l({readOnly:!0})],a.prototype,"allActions",null),n([l()],a.prototype,"autoCloseEnabled",void 0),n([l()],a.prototype,"browseClusterEnabled",void 0),n([l()],a.prototype,"content",void 0),n([l({type:P,readOnly:!0})],a.prototype,"defaultActions",null),n([l({type:Boolean})],a.prototype,"defaultPopupTemplateEnabled",void 0),n([l({readOnly:!0})],a.prototype,"featureCount",null),n([l()],a.prototype,"featurePage",void 0),n([l({value:[]})],a.prototype,"features",null),n([l()],a.prototype,"featuresPerPage",void 0),n([l()],a.prototype,"featureMenuOpen",void 0),n([l()],a.prototype,"featureMenuTitle",void 0),n([l()],a.prototype,"featureViewModelAbilities",void 0),n([l({readOnly:!0})],a.prototype,"featureViewModels",void 0),n([l()],a.prototype,"highlightEnabled",void 0),n([l()],a.prototype,"includeDefaultActions",void 0),n([l()],a.prototype,"initialDisplayMode",void 0),n([l({type:U})],a.prototype,"location",null),n([l()],a.prototype,"map",null),n([l({readOnly:!0})],a.prototype,"pendingPromisesCount",null),n([l({readOnly:!0})],a.prototype,"promiseCount",null),n([l()],a.prototype,"promises",null),n([l({readOnly:!0})],a.prototype,"selectedClusterBoundaryFeature",void 0),n([l({value:null,readOnly:!0})],a.prototype,"selectedFeature",null),n([l({value:-1})],a.prototype,"selectedFeatureIndex",null),n([l({readOnly:!0})],a.prototype,"selectedFeatureViewModel",null),n([l({type:W})],a.prototype,"spatialReference",null),n([l({readOnly:!0})],a.prototype,"state",null),n([l()],a.prototype,"timeZone",null),n([l()],a.prototype,"title",void 0),n([l()],a.prototype,"updateLocationEnabled",void 0),n([l()],a.prototype,"view",void 0),n([l()],a.prototype,"visible",void 0),n([l({readOnly:!0})],a.prototype,"waitingForContents",null),n([l({readOnly:!0})],a.prototype,"waitingForResult",null),n([l()],a.prototype,"zoomFactor",void 0),n([l()],a.prototype,"zoomToLocation",void 0),n([l()],a.prototype,"centerAtLocation",null),a=n([D("esri.widgets.Features.FeaturesViewModel")],a);var ke=a;export{ce as a,ke as b};
