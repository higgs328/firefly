import{a as H}from"./chunk-7ECGJFJY.js";import{d as g}from"./chunk-A6PSIE5S.js";import{a as j}from"./chunk-4OC4J3KU.js";import{b as T}from"./chunk-QRRKH6UX.js";import{b as S}from"./chunk-XAJ5ULUR.js";import{b as F}from"./chunk-BKWQOCBC.js";import{b as q}from"./chunk-3ZJ4NMBE.js";import{a as z,e as G}from"./chunk-AYNBEMCC.js";import{a as w}from"./chunk-6F25LG6O.js";import{c as M}from"./chunk-6B5XFA6F.js";import{a as _}from"./chunk-BOVYXYHK.js";import{B as O,aa as A}from"./chunk-NJWTSROP.js";import{a as C,c as V}from"./chunk-TG45K3WR.js";import{a as i}from"./chunk-QGVBCWUY.js";import{t as P}from"./chunk-MYO4NP2N.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l as R}from"./chunk-5QEXLALV.js";import{d as b}from"./chunk-TG2UTNEO.js";import{f as L}from"./chunk-VTHXE323.js";var Q=2e5,r=class extends H{constructor(e){super(e),this.type="view",this.color=new w("#cf4ccf"),this.viewVisualizationEnabled=!0,this.include=null,this.exclude=null,this.numSamplesForPreview=50,this.numSamplesPerChunk=25,this._getQueryElevationDependencies=j((t,n,m,l,s,a,f)=>({inputGraphicUid:t!=null?N(t):null,visibleLayers:n,maxIntersectionDistance:m,intersectOptions:l,view:s,stationary:a,spatialReference:f})),this._vecA=_(),this._vecB=_(),this._ray=z()}get minDemResolution(){let e=this._viewModel?.view;if(e==null||e.type!=="3d")return null;let t=e.pointsOfInterest?.focus?.worldUnitsPerContentPixel;return t==null?null:t*A(e.spatialReference)}get queryElevationDependencies(){let e=this._view;return e?this._getQueryElevationDependencies(this._viewModel?.input,this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,e,e.stationary,e.spatialReference):null}get _visibleLayers(){return this._view?.map?.allLayers?.filter(e=>e.visible).toArray()??[]}get _intersectOptions(){let e=this._view;if(e==null||e.destroyed)return{};let t=g(e,{include:this.include,exclude:this.exclude}),n=g(e,{exclude:this._pointCloudLayers});return t.exclude=P(t.exclude,n.exclude),t}get _pointCloudLayers(){let e=this._view;return e==null?[]:e.allLayerViews.toArray().filter(t=>t.layer?.type==="point-cloud").map(t=>t.layer)}get _view(){let e=this._viewModel?.view;return e!=null&&e.type==="3d"?e:null}get _maxIntersectionDistance(){let e=this._view;return e?.renderCoordsHelper?O(e.spatialReference).radius/e.renderCoordsHelper.unitInMeters:Number.POSITIVE_INFINITY}get _intersector(){let e=this._view;if(e==null)return null;let t=F(e.state.viewingMode),n=t.options;return n.hud=!1,n.invisibleTerrain=!1,n.backfacesTerrain=!1,n.selectionMode=!1,n.store=q.ALL,t}queryElevation(m,l){return L(this,arguments,function*(e,{noDataValue:t,signal:n}){let s=this.queryElevationDependencies;if(s==null)throw new Error("ElevationProfileLineInput: no dependencies");let a=this._intersector;if(a==null)throw new Error("ElevationProfileLineInput: no view");let{intersectOptions:f,view:I,spatialReference:p}=s,y=I.renderCoordsHelper,U=I.sceneIntersectionHelper,x=this._vecA,d=this._vecA,c=this._vecB,$=this._ray;if(!p)return{geometry:e,noDataValue:t};let v=yield T.fromGeometry(e).project(p,n);if(!v)return{geometry:e,noDataValue:t};let D=v.coordinates,k=D.length;for(let h=0;h<k;++h){let u=D[h];M(c,u.x,u.y,u.z??0),y.toRenderCoords(c,p,c),y.setAltitude(x,Q,c);let B=G(x,c,$);U.computeIntersection(B,a,f,!0);let E=Y(s,a.results.all);E?(E.getIntersectionPoint(d),y.fromRenderCoords(d,d,p),u.z=d[2]):u.z=t}return{geometry:v.export(),noDataValue:t}})}attach(e){let t=()=>this._onChange();return b([super.attach(e),C(()=>this.queryElevationDependencies,t),V(()=>e.elevationProvider,"elevation-change",t,{onListenerAdd:t,onListenerRemove:t})])}};function Y({view:e,inputGraphicUid:t,maxIntersectionDistance:n},m){for(let l of m){if(!l.withinDistance(n))continue;let s=S(l,e);if(s==null||N(s)!==t)return l}return null}function N(e){if(e.layer&&"objectIdField"in e.layer){let t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`}i([o({type:w,nonNullable:!0})],r.prototype,"color",void 0),i([o()],r.prototype,"viewVisualizationEnabled",void 0),i([o()],r.prototype,"include",void 0),i([o()],r.prototype,"exclude",void 0),i([o({readOnly:!0})],r.prototype,"minDemResolution",null),i([o()],r.prototype,"queryElevationDependencies",null),i([o()],r.prototype,"_visibleLayers",null),i([o()],r.prototype,"_intersectOptions",null),i([o()],r.prototype,"_pointCloudLayers",null),i([o()],r.prototype,"_view",null),i([o()],r.prototype,"_maxIntersectionDistance",null),i([o()],r.prototype,"_intersector",null),r=i([R("esri.widgets.ElevationProfile.ElevationProfileLineView")],r);var he=r;export{he as a};
