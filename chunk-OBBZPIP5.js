import{a as f}from"./chunk-QETPWGTG.js";import{c}from"./chunk-BMYVPMAK.js";import{a as u}from"./chunk-3JGYBNJA.js";import{g as y}from"./chunk-ZC6EBRE4.js";import{c as l}from"./chunk-VIEK2X23.js";import{a as n}from"./chunk-CX5IFQZJ.js";import{a}from"./chunk-BAEF3CT6.js";import{f as m}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l as p}from"./chunk-5QEXLALV.js";var i=new a({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0}),e=class extends u.ClonableMixin(m){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(r,s,d){r?.length&&(s.geometryType=y(r[0]),s.geometries=r.map(g=>g.toJSON()))}};t([o({types:[c]})],e.prototype,"geometries",void 0),t([n("geometries")],e.prototype,"writeGeometries",null),t([o({type:f,json:{write:!0}})],e.prototype,"mosaicRule",void 0),t([o({type:l,json:{write:!0}})],e.prototype,"pixelSize",void 0),t([o({json:{write:!0}})],e.prototype,"constantZ",void 0),t([o({type:i.apiValues,json:{read:i.read,write:i.write}})],e.prototype,"baseType",void 0),e=t([p("esri.rest.support.ImageVolumeParameters")],e);var R=e;export{R as a};
