import{a as M,b as L,g as O,h as j,i as z}from"./chunk-FKASYKK7.js";import"./chunk-LAAJ7BOG.js";import{Aa as F,L as v,p as I,v as b}from"./chunk-A2QQP5DF.js";import"./chunk-LTHAIW3V.js";import"./chunk-RRQS6PLL.js";import{K as G,ea as N}from"./chunk-WFHQTMIY.js";import{a as u}from"./chunk-XAZOVQGA.js";import{b as f,t as V,v as D,y as P}from"./chunk-V3KEO7AJ.js";import"./chunk-MDZTV2VL.js";import"./chunk-RNC4P66O.js";import"./chunk-7LHOQXZT.js";import"./chunk-BCREO4Q5.js";import"./chunk-U4QEPZJ3.js";import"./chunk-KJUZWSCL.js";import"./chunk-3WO6D7MU.js";import"./chunk-BUZ3SPLE.js";import"./chunk-KVM6SHDX.js";import"./chunk-EQZWYK27.js";import"./chunk-ZQIC5NFT.js";import"./chunk-VIEK2X23.js";import"./chunk-XKIFGPJO.js";import"./chunk-PEW2PLAN.js";import"./chunk-Q6Y4JG7Q.js";import"./chunk-7F5DJLJT.js";import"./chunk-CX5IFQZJ.js";import"./chunk-NJWTSROP.js";import"./chunk-D3R25AF2.js";import"./chunk-ARRCN5K3.js";import"./chunk-G4DZJMGT.js";import"./chunk-X2B63YVS.js";import"./chunk-BAEF3CT6.js";import"./chunk-AUAZP44J.js";import"./chunk-PVDFCTA4.js";import"./chunk-KNVXE32P.js";import"./chunk-76ATOSLU.js";import"./chunk-CCJU4DSH.js";import"./chunk-QGVBCWUY.js";import"./chunk-MYO4NP2N.js";import"./chunk-NFIPKH6V.js";import"./chunk-JPU2PQZC.js";import"./chunk-5QEXLALV.js";import"./chunk-P6QFA5MM.js";import"./chunk-DGTD7Y73.js";import"./chunk-LI2SX4T6.js";import"./chunk-BWO7LS2H.js";import"./chunk-HEVQSRJ2.js";import"./chunk-OVHPPCBL.js";import"./chunk-SNFOAZZQ.js";import"./chunk-AML4XSEF.js";import"./chunk-4PTIEWMT.js";import"./chunk-TG2UTNEO.js";import"./chunk-YOFFGXOB.js";import"./chunk-XRGPJ3QY.js";import"./chunk-6MRUJ2UW.js";import"./chunk-2LI2GKBQ.js";import"./chunk-QBWJMFH5.js";import"./chunk-VTHXE323.js";function J(c,t,h,r){if(t.getPathCount()>1&&V(""),c.isEmpty()||t.isEmpty())return null;P(c),P(t);let e=null,m=new u;c.queryEnvelope(m);let a=new u;t.queryEnvelope(a);let n=new u;n.setCoords({env2D:m}),n.mergeEnvelope2D(a);let i=G(h,n,!1).total(),o=new C(r),g=o.setIndicesAndScalars(c,t,i);if(g){let l=o.getTrimmedPolyline(c,t);if(l.isEmpty())return null;e=o.getReshapedMultiPath(c,l,h)}else{if(Number.isNaN(o.m_scalarB0)||c.getGeometryType()===f.enumPolyline)return null;let l=new I;if(l.add(t,!0),o.clearIndicesAndScalars(),g=o.setIndicesAndScalars(c,l,i),!g)return null;let s=o.getTrimmedPolyline(c,l);if(s.isEmpty())return null;e=o.getReshapedMultiPath(c,s,h)}return e}var C=class{constructor(t){this.m_progressTracker=t,this.clearIndicesAndScalars()}setIndicesAndScalars(t,h,r){let e=new u,m=new u;if(t.queryEnvelope(e),t.queryEnvelope(m),e.inflateCoords(r,r),!e.intersect(m))return!1;let a=t.getImpl().querySegmentIterator(),n=h.getImpl().querySegmentIterator(),i=[0,0],o=[0,0],g=-1,l=-1,s=-1,B=-1,T=-1,w=-1,E=Number.NaN,k=Number.NaN,_=Number.NaN,d=Number.NaN;for(n.nextPath();n.hasNextSegment();){let A=n.nextSegment(),x=new u;for(A.queryEnvelope(x),x.inflateCoords(r,r),a.resetToFirstPath();a.nextPath();){for(;a.hasNextSegment();){let p=a.nextSegment(),S=new u;if(p.queryEnvelope(S),x.isIntersecting(S)&&A.intersect(p,null,o,i,r)!==0&&(Number.isNaN(_)||o[0]<_)&&(g=a.getPathIndex(),s=a.getStartPointIndex(),T=n.getStartPointIndex(),E=i[0],_=o[0],_===0))break}if(_===0)break}if(!Number.isNaN(_)&&_!==1)break}if(Number.isNaN(_))return!1;this.m_pathA0=g,this.m_vertexA0=s,this.m_vertexB0=T,this.m_scalarA0=E,this.m_scalarB0=_;let R=t.getGeometryType();for(n.resetToLastSegment();n.hasPreviousSegment();){let A=n.previousSegment(),x=new u;for(A.queryEnvelope(x),x.inflateCoords(r,r),R===f.enumPolygon?a.resetToPath(g):a.resetToFirstPath();a.nextPath();){for(;a.hasNextSegment();){let p=a.nextSegment(),S=new u;if(p.queryEnvelope(S),x.isIntersecting(S)){let y=A.intersect(p,null,o,i,r);if(y!==0&&(Number.isNaN(d)||o[y-1]>d)&&(n.getStartPointIndex()!==this.m_vertexB0||o[y-1]!==this.m_scalarB0)&&(l=a.getPathIndex(),B=a.getStartPointIndex(),w=n.getStartPointIndex(),k=i[y-1],d=o[y-1],d===1))break}}if(d===1||R===f.enumPolygon)break}if(!Number.isNaN(d))break}return!Number.isNaN(d)&&(this.m_pathA1=l,this.m_vertexA1=B,this.m_vertexB1=w,this.m_scalarA1=k,this.m_scalarB1=d,!0)}getTrimmedPolyline(t,h){let r=new v,e=h.createInstance(),m=!0,a=h.getImpl().querySegmentIterator();if(a.resetToVertex(this.m_vertexB0,0),this.m_vertexB0>this.m_vertexB1)return e;if(this.m_vertexB0===this.m_vertexB1)a.nextSegment().queryCut(this.m_scalarB0,this.m_scalarB1,r,!1),e.addSegment(r.get(),!0);else for(;;){let n=a.nextSegment(),i=a.getStartPointIndex();if(i===this.m_vertexB0)this.m_scalarB0!==1&&(n.queryCut(this.m_scalarB0,1,r,!1),e.addSegment(r.get(),m),m=!1);else{if(i===this.m_vertexB1){this.m_scalarB1!==0&&(n.queryCut(0,this.m_scalarB1,r),e.addSegment(r.get(),m),m=!1);break}e.addSegment(n,m)}}if(e.isEmpty())return e;if(t.getDescription().getAttributeCount()>1){let n=t.getImpl().querySegmentIterator(),i=new N,o=e.getPointCount();n.resetToVertex(this.m_vertexA0,this.m_pathA0),n.nextSegment().queryCoord(this.m_scalarA0,i),e.setPointByVal(0,i),n.resetToVertex(this.m_vertexA1,this.m_pathA1),n.nextSegment().queryCoord(this.m_scalarA1,i),e.setPointByVal(o-1,i),e.interpolateAttributesRange(0,0,0,o-1)}return e}getReshapedMultiPath(t,h,r){let e;return e=t.getGeometryType()===f.enumPolygon?this.getReshapedPolygon(t,h,r):this.getReshapedPolyline(t,h),e}getReshapedPolygon(t,h,r){let e=t.getImpl().querySegmentIterator();e.setCirculator(!0);let m=new v;new N;let a=new b({vd:t.getDescription()});if(a.addSegmentsFromPath(h,0,0,h.getSegmentCountPath(0),!0),e.resetToVertex(this.m_vertexA1,this.m_pathA0),this.m_vertexA1===this.m_vertexA0&&this.m_scalarA1<=this.m_scalarA0)e.nextSegment().queryCut(this.m_scalarA1,this.m_scalarA0,m),a.addSegment(m.get(),!1);else{{let s=e.nextSegment();this.m_scalarA1!==1&&(s.queryCut(this.m_scalarA1,1,m),a.addSegment(m.get(),!1))}for(;;){let s=e.nextSegment();if(e.getStartPointIndex()===this.m_vertexA0){this.m_scalarA0!==0&&(s.queryCut(0,this.m_scalarA0,m),a.addSegment(m.get(),!1));break}a.addSegment(s,!1)}}let n=new b({vd:t.getDescription()}),i=h.clone();if(i.reversePath(0),n.addSegmentsFromPath(i,0,0,i.getSegmentCountPath(0),!0),e.resetToVertex(this.m_vertexA0,this.m_pathA0),this.m_vertexA0===this.m_vertexA1&&this.m_scalarA0<this.m_scalarA1)e.nextSegment().queryCut(this.m_scalarA0,this.m_scalarA1,m),n.addSegment(m.get(),!1);else{{let s=e.nextSegment();this.m_scalarA0!==1&&(s.queryCut(this.m_scalarA0,1,m),n.addSegment(m.get(),!1))}for(;;){let s=e.nextSegment();if(e.getStartPointIndex()===this.m_vertexA1){this.m_scalarA1!==0&&(s.queryCut(0,this.m_scalarA1,m),n.addSegment(m.get(),!1));break}n.addSegment(s,!1)}}let o=Math.abs(a.calculateArea2D()),g=Math.abs(n.calculateArea2D()),l=t.createInstance();for(let s=0;s<t.getPathCount();s++)s===this.m_pathA0?o>=g?l.add(a,!1):l.add(n,!1):l.addPath(t,s,!0);return l=new F().execute(l,r,!1,this.m_progressTracker),l}getReshapedPolyline(t,h){let r=t.getImpl().querySegmentIterator(),e=new I,m=new v,a=!1,n=-1,i=Number.NaN;a=this.m_pathA0>this.m_pathA1||this.m_pathA0===this.m_pathA1&&(this.m_vertexA0>this.m_vertexA1||this.m_vertexA0===this.m_vertexA1&&this.m_scalarA0>this.m_scalarA1),a?(n=this.m_vertexA1,i=this.m_scalarA1,r.resetToPath(this.m_pathA1)):(n=this.m_vertexA0,i=this.m_scalarA0,r.resetToPath(this.m_pathA0));let o=!0;for(r.nextPath()||D("reshaper");;){let s=r.nextSegment();if(r.getStartPointIndex()===n){i!==0&&(s.queryCut(0,i,m),e.addSegment(m.get(),o),o=!1);break}e.addSegment(s,o),o=!1}if(a){let s=h.clone();s.reversePath(0),e.addSegmentsFromPath(s,0,0,s.getSegmentCount(),o)}else e.addSegmentsFromPath(h,0,0,h.getSegmentCount(),o);a?(i=this.m_scalarA0,r.resetToVertex(this.m_vertexA0,this.m_pathA0)):(i=this.m_scalarA1,r.resetToVertex(this.m_vertexA1,this.m_pathA1));{let s=r.nextSegment();i!==1&&(s.queryCut(i,1,m),e.addSegment(m.get(),!1))}for(;r.hasNextSegment();){let s=r.nextSegment();e.addSegment(s,!1)}let g=t.createInstance(),l=!1;for(let s=0;s<t.getPathCount();s++)s===this.m_pathA0||s===this.m_pathA1?l||(g.add(e,!1),l=!0):g.addPath(t,s,!0);return g}clearIndicesAndScalars(){this.m_pathA0=-1,this.m_pathA1=-1,this.m_vertexA0=-1,this.m_vertexA1=-1,this.m_vertexB0=-1,this.m_vertexB1=-1,this.m_scalarA0=Number.NaN,this.m_scalarA1=Number.NaN,this.m_scalarB0=Number.NaN,this.m_scalarB1=Number.NaN}},q=class{getOperatorType(){return 10006}accelerateGeometry(t,h,r){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!1}execute(t,h,r,e){return J(t,h,r,e)}},H=new q;function Z(c,t){let h=M(c),r=H.execute(L(c),O(t),j(h),null);return z(r,h)}var $=H.supportsCurves();export{Z as execute,$ as supportsCurves};
