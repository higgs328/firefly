import{i as Y}from"./chunk-EQZWYK27.js";import{m as X}from"./chunk-ZQIC5NFT.js";import{f as Q}from"./chunk-NJWTSROP.js";import{p as K}from"./chunk-4PTIEWMT.js";import{g as J}from"./chunk-XRGPJ3QY.js";import{a as N,c as H}from"./chunk-QBWJMFH5.js";import{f as G}from"./chunk-VTHXE323.js";var T=()=>J.getLogger("esri.views.2d.engine.flow.dataUtils"),lt=10;function At(i,r,l,u){return G(this,null,function*(){let a=performance.now(),h=it(r,l),f=performance.now(),o=ct(r,h,l.width,l.height),e=performance.now(),t=ht(o,!0),n=performance.now(),d=i==="Streamlines"?ut(t,lt):dt(t),p=performance.now();return N("esri-2d-profiler")&&(T().info("I.1","_createFlowFieldFromData (ms)",Math.round(f-a)),T().info("I.2","_getStreamlines (ms)",Math.round(e-f)),T().info("I.3","createAnimatedLinesData (ms)",Math.round(n-e)),T().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-n)),T().info("I.5","createFlowMesh (ms)",Math.round(p-a)),T().info("I.6","Mesh size (bytes)",d.vertexData.buffer.byteLength+d.indexData.buffer.byteLength)),yield Promise.resolve(),K(u),d})}function it(i,r){let l=ft(r.data,r.width,r.height,i.smoothing);return i.interpolate?(u,a)=>{let h=Math.floor(u),f=Math.floor(a);if(h<0||h>=r.width)return[0,0];if(f<0||f>=r.height)return[0,0];let o=u-h,e=a-f,t=h,n=f,d=h<r.width-1?h+1:h,p=f<r.height-1?f+1:f,m=l[2*(n*r.width+t)],g=l[2*(n*r.width+d)],D=l[2*(p*r.width+t)],b=l[2*(p*r.width+d)],I=l[2*(n*r.width+t)+1],y=l[2*(n*r.width+d)+1];return[(m*(1-e)+D*e)*(1-o)+(g*(1-e)+b*e)*o,(I*(1-e)+l[2*(p*r.width+t)+1]*e)*(1-o)+(y*(1-e)+l[2*(p*r.width+d)+1]*e)*o]}:(u,a)=>{let h=Math.round(u),f=Math.round(a);return h<0||h>=r.width||f<0||f>=r.height?[0,0]:[l[2*(f*r.width+h)],l[2*(f*r.width+h)+1]]}}function st(i,r,l,u,a,h,f,o,e){let t=[],n=l,d=u,p=0,[m,g]=r(n,d);m*=i.velocityScale,g*=i.velocityScale;let D=Math.sqrt(m*m+g*g),b,I;t.push({x:n,y:d,t:p,speed:D});for(let y=0;y<i.verticesPerLine;y++){let[x,w]=r(n,d);x*=i.velocityScale,w*=i.velocityScale;let s=Math.sqrt(x*x+w*w);if(s<i.minSpeedThreshold)return t;let c=x/s,P=w/s;if(n+=c*i.segmentLength,d+=P*i.segmentLength,p+=i.segmentLength/s,Math.acos(c*b+P*I)>i.maxTurnAngle)return t;if(i.collisions){let M=Math.round(n*e),S=Math.round(d*e);if(M<0||M>f-1||S<0||S>o-1)return t;let _=h[S*f+M];if(_!==-1&&_!==a)return t;h[S*f+M]=a}t.push({x:n,y:d,t:p,speed:s}),b=c,I=P}return t}function ct(i,r,l,u){let a=[],h=new H,f=1/Math.max(i.lineCollisionWidth,1),o=Math.round(l*f),e=Math.round(u*f),t=new Int32Array(o*e);for(let d=0;d<t.length;d++)t[d]=-1;let n=[];for(let d=0;d<u;d+=i.lineSpacing)for(let p=0;p<l;p+=i.lineSpacing)n.push({x:p,y:d,sort:h.getFloat()});n.sort((d,p)=>d.sort-p.sort);for(let{x:d,y:p}of n)if(h.getFloat()<i.density){let m=st(i,r,d,p,a.length,t,o,e,f);if(m.length<2)continue;a.push(m)}return a}function ft(i,r,l,u){if(u===0)return i;let a=Math.round(3*u),h=new Array(2*a+1),f=0;for(let t=-a;t<=a;t++){let n=Math.exp(-t*t/(u*u));h[t+a]=n,f+=n}for(let t=-a;t<=a;t++)h[t+a]/=f;let o=new Float32Array(i.length);for(let t=0;t<l;t++)for(let n=0;n<r;n++){let d=0,p=0;for(let m=-a;m<=a;m++){if(n+m<0||n+m>=r)continue;let g=h[m+a];d+=g*i[2*(t*r+(n+m))],p+=g*i[2*(t*r+(n+m))+1]}o[2*(t*r+n)]=d,o[2*(t*r+n)+1]=p}let e=new Float32Array(i.length);for(let t=0;t<r;t++)for(let n=0;n<l;n++){let d=0,p=0;for(let m=-a;m<=a;m++){if(n+m<0||n+m>=l)continue;let g=h[m+a];d+=g*o[2*((n+m)*r+t)],p+=g*o[2*((n+m)*r+t)+1]}e[2*(n*r+t)]=d,e[2*(n*r+t)+1]=p}return e}function ht(i,r){let l=new H,u=i.reduce((e,t)=>e+t.length,0),a=new Float32Array(4*u),h=new Array(i.length),f=0,o=0;for(let e of i){let t=f;for(let n of e)a[4*f]=n.x,a[4*f+1]=n.y,a[4*f+2]=n.t,a[4*f+3]=n.speed,f++;h[o++]={startVertex:t,numberOfVertices:e.length,totalTime:e[e.length-1].t,timeSeed:r?l.getFloat():0}}return{lineVertices:a,lineDescriptors:h}}function ut(i,r){let{lineVertices:u,lineDescriptors:a}=i,h=0,f=0;for(let m of a)h+=2*m.numberOfVertices,f+=6*(m.numberOfVertices-1);let o=new Float32Array(h*9),e=new Uint32Array(f),t=0,n=0;function d(){e[n++]=t-2,e[n++]=t,e[n++]=t-1,e[n++]=t,e[n++]=t+1,e[n++]=t-1}function p(m,g,D,b,I,y,x,w){let s=t*9,c=0;o[s+c++]=m,o[s+c++]=g,o[s+c++]=1,o[s+c++]=D,o[s+c++]=y,o[s+c++]=x,o[s+c++]=b/2,o[s+c++]=I/2,o[s+c++]=w,t++,o[s+c++]=m,o[s+c++]=g,o[s+c++]=-1,o[s+c++]=D,o[s+c++]=y,o[s+c++]=x,o[s+c++]=-b/2,o[s+c++]=-I/2,o[s+c++]=w,t++}for(let m of a){let{totalTime:g,timeSeed:D}=m,b=null,I=null,y=null,x=null,w=null,s=null;for(let c=0;c<m.numberOfVertices;c++){let P=u[4*(m.startVertex+c)],M=u[4*(m.startVertex+c)+1],S=u[4*(m.startVertex+c)+2],_=u[4*(m.startVertex+c)+3],O=null,U=null,j=null,z=null;if(c>0){O=P-b,U=M-I;let V=Math.sqrt(O*O+U*U);if(O/=V,U/=V,c>1){let A=O+w,F=U+s,v=Math.sqrt(A*A+F*F);A/=v,F/=v;let B=Math.min(1/(A*O+F*U),r);A*=B,F*=B,j=-F,z=A}else j=-U,z=O;j!==null&&z!==null&&(p(b,I,y,j,z,g,D,_),d())}b=P,I=M,y=S,w=O,s=U,x=_}p(b,I,y,-s,w,g,D,x)}return{vertexData:o,indexData:e}}function dt(i){let{lineVertices:a,lineDescriptors:h}=i,f=0,o=0;for(let V of h){let A=V.numberOfVertices-1;f+=4*A*2,o+=6*A*2}let e=new Float32Array(f*16),t=new Uint32Array(o),n,d,p,m,g,D,b,I,y,x,w,s,c,P,M=0,S=0;function _(){t[S++]=M-8,t[S++]=M-7,t[S++]=M-6,t[S++]=M-7,t[S++]=M-5,t[S++]=M-6,t[S++]=M-4,t[S++]=M-3,t[S++]=M-2,t[S++]=M-3,t[S++]=M-1,t[S++]=M-2}function O(V,A,F,v,B,C,q,R,E,W,tt,et,nt,rt){let k=M*16,L=0;for(let ot of[1,2])for(let at of[1,2,3,4])e[k+L++]=V,e[k+L++]=A,e[k+L++]=F,e[k+L++]=v,e[k+L++]=q,e[k+L++]=R,e[k+L++]=E,e[k+L++]=W,e[k+L++]=ot,e[k+L++]=at,e[k+L++]=nt,e[k+L++]=rt,e[k+L++]=B/2,e[k+L++]=C/2,e[k+L++]=tt/2,e[k+L++]=et/2,M++}function U(V,A){let F=y+w,v=x+s,B=Math.sqrt(F*F+v*v);F/=B,v/=B;let C=y*F+x*v;F/=C,v/=C;let q=w+c,R=s+P,E=Math.sqrt(q*q+R*R);q/=E,R/=E;let W=w*q+s*R;q/=W,R/=W,O(n,d,p,m,-v,F,g,D,b,I,-R,q,V,A),_()}function j(V,A,F,v,B,C){if(y=w,x=s,w=c,s=P,y==null&&x==null&&(y=w,x=s),g!=null&&D!=null){c=V-g,P=A-D;let q=Math.sqrt(c*c+P*P);c/=q,P/=q}y!=null&&x!=null&&U(B,C),n=g,d=D,p=b,m=I,g=V,D=A,b=F,I=v}function z(V,A){y=w,x=s,w=c,s=P,y==null&&x==null&&(y=w,x=s),y!=null&&x!=null&&U(V,A)}for(let V of h){n=null,d=null,p=null,m=null,g=null,D=null,b=null,I=null,y=null,x=null,w=null,s=null,c=null,P=null;let{totalTime:A,timeSeed:F}=V;for(let v=0;v<V.numberOfVertices;v++)j(a[4*(V.startVertex+v)],a[4*(V.startVertex+v)+1],a[4*(V.startVertex+v)+2],a[4*(V.startVertex+v)+3],A,F);z(A,F)}return{vertexData:e,indexData:t}}function Z(i,r){let l=r.pixels,{width:u,height:a}=r,h=new Float32Array(u*a*2),f=r.mask||new Uint8Array(u*a*2);if(r.mask||f.fill(255),i==="vector-uv")for(let o=0;o<u*a;o++)h[2*o]=l[0][o],h[2*o+1]=-l[1][o];else if(i==="vector-magdir")for(let o=0;o<u*a;o++){let e=l[0][o],t=Y(l[1][o]),n=Math.cos(t-Math.PI/2),d=Math.sin(t-Math.PI/2);h[2*o]=n*e,h[2*o+1]=d*e}return{data:h,mask:f,width:u,height:a}}function It(i,r,l,u,a,h){return G(this,null,function*(){let f=performance.now(),o=Q(r.spatialReference);if(!o){let w=yield $(i,r,l,u,a,h);return N("esri-2d-profiler")&&T().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-f)),N("esri-2d-profiler")&&T().info("I.9","Number of parts",1),w}let[e,t]=o.valid,n=t-e,d=Math.ceil(r.width/n),p=r.width/d,m=Math.round(l/d),g=r.xmin,D=[],b=performance.now();for(let w=0;w<d;w++){let s=new X({xmin:g,xmax:g+p,ymin:r.ymin,ymax:r.ymax,spatialReference:r.spatialReference});D.push($(i,s,m,u,a,h)),g+=p}let I=yield Promise.all(D);N("esri-2d-profiler")&&T().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-b)),N("esri-2d-profiler")&&T().info("I.9","Number of parts",I.length);let y={data:new Float32Array(l*u*2),mask:new Uint8Array(l*u),width:l,height:u},x=0;for(let w of I){for(let s=0;s<w.height;s++)for(let c=0;c<w.width;c++)x+c>=l||(y.data[2*(s*l+x+c)]=w.data[2*(s*w.width+c)],y.data[2*(s*l+x+c)+1]=w.data[2*(s*w.width+c)+1],y.mask[s*l+x+c]=w.mask[s*w.width+c]);x+=w.width}return N("esri-2d-profiler")&&T().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-f)),y})}function $(i,r,l,u,a,h){return G(this,null,function*(){let f={requestProjectedLocalDirections:!0,signal:h};if(a!=null&&(f.timeExtent=a),i.type==="imagery"){yield i.load({signal:h});let t=i.rasterInfo.dataType,n=yield i.fetchImage(r,l,u,f);return n?.pixelData?.pixelBlock==null?{data:new Float32Array(l*u*2),mask:new Uint8Array(l*u),width:l,height:u}:Z(t,n.pixelData.pixelBlock)}yield i.load({signal:h});let o=i.serviceRasterInfo.dataType,e=yield i.fetchPixels(r,l,u,f);return e?.pixelBlock==null?{data:new Float32Array(l*u*2),mask:new Uint8Array(l*u),width:l,height:u}:Z(o,e.pixelBlock)})}export{At as a,It as b};
