import{b as h,g as x}from"./chunk-7LHOQXZT.js";import{b}from"./chunk-KJUZWSCL.js";function v(r,n=!1){let t=[];if(n){for(let s of r)if(s.geometry){let g=s.geometry;t.push.apply(t,g.points)}}else t=r.map(s=>s.geometry);let o=[],l=[],f=1/0,i=-1/0,e=0,m=0,u=0,a=0;for(let s of t){if(!s)continue;n?(o[0]=s[0],o[1]=s[1]):(o[0]=s.x,o[1]=s.y);let g=1/0,y=-1/0;for(let p of t){if(p===s||!p)continue;n?(l[0]=p[0],l[1]=p[1]):(l[0]=p.x,l[1]=p.y);let c=h(o,l);c>0&&(c<g&&(g=c),c<f&&(f=c),c>y&&(y=c),c>i&&(i=c))}g!==1/0&&(++u,e+=g),y!==-1/0&&(++a,m+=y)}return{minDistance:f!==1/0?f:null,maxDistance:i!==-1/0?i:null,avgMinDistance:u?e/u:null,avgMaxDistance:a?m/a:null}}function L(r){let n=0,t=0,o=1/0,l=-1/0;for(let f of r){let i=f.geometry;if(i){let e=0;for(let m of i.paths){let u=x(m);u>0&&(e+=u)}e>0&&(++n,t+=e,e<o&&(o=e),e>l&&(l=e))}}return{minLength:o!==1/0?o:null,maxLength:l!==-1/0?l:null,avgLength:n?t/n:null}}function M(r){let n=0,t=0,o=1/0,l=-1/0;for(let f of r){let i=f.geometry;if(i){let e=b(i);if(e){let m=Math.abs(e.xmax-e.xmin),u=Math.abs(e.ymax-e.ymin),a=Math.sqrt(m*u);a>0&&(++n,t+=a,a<o&&(o=a),a>l&&(l=a))}}}return{minSize:o!==1/0?o:null,maxSize:l!==-1/0?l:null,avgSize:n?t/n:null}}function z(r){let{features:n}=r,t=null;switch(r.geometryType){case"point":t=v(n);break;case"multipoint":t=v(n,!0);break;case"polyline":t=L(n);break;case"polygon":t=M(n)}return Promise.resolve(t)}export{z as a};
