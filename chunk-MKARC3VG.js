import{c as u}from"./chunk-HFZI5WHY.js";import{a as D,b as f,d as R}from"./chunk-SC4TZEOX.js";import{a as x}from"./chunk-WFKZLI6F.js";var c=D().decimal,b={N:"north",S:"south",E:"east",W:"west"},s="\xB0\u200E",g=new RegExp(`-?\\d+[\\.|\\${c}]?\\d*`),A=/^[\\0]+(?=\d)/;function z(i,d){let e=x()==="ar",h=i.abbreviatedDirections.north,E=i.abbreviatedDirections.south,v=i.abbreviatedDirections.east,X=i.abbreviatedDirections.west,P=D().decimal,p={[h]:"N",[E]:"S",[v]:"E",[X]:"W"},Y=new RegExp(`-?\\d+[\\.|\\${P}]?\\d*`),$=new RegExp(`N|S|${h}|${E}`,"i"),m=new RegExp(`E|W|${v}|${X}`,"i"),S={ddm:`Y${s} A'${i.abbreviatedDirections.north}, X${s} B'${i.abbreviatedDirections.east}`,dms:`Y${s} A' B"${i.abbreviatedDirections.north}, X${s} C' D"${i.abbreviatedDirections.east}`,dd:`Y${s}${i.abbreviatedDirections.north}, X${s}${i.abbreviatedDirections.east}`,xy:`X${s}, Y${s}`,basemap:"X, Y"},N={ddm:`${i.abbreviatedDirections.north}${s}Y 'A ,${i.abbreviatedDirections.east}${s}X 'B`,dms:`${i.abbreviatedDirections.north}${s}Y 'A "B ,${i.abbreviatedDirections.east}${s}X 'C "D`,dd:`${i.abbreviatedDirections.north}${s}Y ,${i.abbreviatedDirections.east}${s}X`,xy:`X${s} ,Y${s}`,basemap:"X ,Y"},B=r=>r!=null&&Object.keys(S).includes(r),o=new RegExp(`\\d{1,2}[\\.|\\${P}]?\\d*`,"i"),w=new RegExp(`\\d{1,3}[\\.|\\${P}]?\\d*`,"i");d.forEach(r=>{let{name:l}=r;if(l==="dd"?r.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}},{alias:"X",description:"degrees longitude",searchPattern:w,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.east,description:"east/west indicator",searchPattern:m,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}}]:l==="ddm"?r.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"A",description:"minutes latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}},{alias:"X",description:"degrees longitude",searchPattern:w,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"B",description:"minutes longitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.east,description:"east/west indicator",searchPattern:m,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}}]:l==="dms"?r.coordinateSegments=[{alias:"Y",description:"degrees latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"A",description:"minutes latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"B",description:"seconds latitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.north,description:"north/south indicator",searchPattern:$,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}},{alias:"X",description:"degrees longitude",searchPattern:w,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"C",description:"minutes longitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"D",description:"seconds longitude",searchPattern:o,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:i.abbreviatedDirections.east,description:"east/west indicator",searchPattern:m,substitution:{input:t=>p[t],output:t=>i.abbreviatedDirections[b[t]]}}]:(r.name==="xy"||r.name==="basemap")&&(r.coordinateSegments=[{alias:"X",description:"easting",searchPattern:Y,substitution:{input:t=>n(t),output:t=>a(t)}},{alias:"Y",description:"northing",searchPattern:Y,substitution:{input:t=>n(t),output:t=>a(t)}}]),B(l)){let t=e?N[l]:S[l];r.defaultPattern=t,r.currentPattern=t}})}function C(){let i=new RegExp("N|S","i"),d=new RegExp("E|W","i");return[new u({name:"basemap",coordinateSegments:[{alias:"X",description:"easting",searchPattern:g,substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"Y",description:"northing",searchPattern:g,substitution:{input:e=>n(e),output:e=>a(e)}}],defaultPattern:"X, Y",viewModel:null}),new u({name:"dd",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${c}]?\\d*(?=\\D*?[N|S])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"N",description:"north/south indicator",searchPattern:i},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}[\\.|\\${c}]?\\d*(?=\\D*?[E|W|])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"E",description:"east/west indicator",searchPattern:d}],defaultPattern:`Y${s}N, X${s}E`,viewModel:null}),new u({name:"ddm",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?\\s+.*?[N|S])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}[\\.\\${c}]?\\d*(?=.*?[N|S])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"N",description:"north/south indicator",searchPattern:i},{alias:"X",description:"degrees longitude",searchPattern:new RegExp("\\d{1,3}(?=\\D*?\\s+.*?[E|W])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"B",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\|${c}]?\\d*(?=.*?[E|W])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"E",description:"east/west indicator",searchPattern:d}],defaultPattern:`Y${s} A'N, X${s} B'E`,viewModel:null}),new u({name:"dms",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?\\s+.*?[N|S])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp("\\d{1,2}(?=.*?[N|S])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"B",description:"seconds latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${c}]?\\d*(?=.*?[N|S])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"N",description:"north/south indicator",searchPattern:i},{alias:"X",description:"degrees longitude",searchPattern:new RegExp("\\d{1,3}(?=.*?\\s+.*?[E|W])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"C",description:"minutes longitude",searchPattern:new RegExp("\\d{1,2}(?=.*?[E|W])","i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"D",description:"seconds longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${c}]?\\d*(?=.*?[E|W])`,"i"),substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"E",description:"east/west indicator",searchPattern:d}],defaultPattern:`Y${s} A' B"N, X${s} C' D"E`,viewModel:null}),new u({name:"xy",coordinateSegments:[{alias:"X",description:"longitude",searchPattern:g,substitution:{input:e=>n(e),output:e=>a(e)}},{alias:"Y",description:"latitude",searchPattern:g,substitution:{input:e=>n(e),output:e=>a(e)}}],defaultPattern:`X${s}, Y${s}`,viewModel:null}),new u({name:"mgrs",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new u({name:"usng",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new u({name:"utm",coordinateSegments:[{alias:"Z",description:"zone number",searchPattern:/\d{1,2}|[abyz]/i},{alias:"B",description:"latitude band",searchPattern:/^\D/},{alias:"X",description:"easting",searchPattern:/\d{1,7}(?=\s*\d{7}$)/},{alias:"Y",description:"northing",searchPattern:/\d{1,7}/}],defaultPattern:"ZB X Y",viewModel:null})]}function a(i){let d=i.match(A),e=d?d[0]:"",h=i.includes(".")?i.split(".")[1].length:0;return e+f(Number(i),{pattern:"###0.###",places:h,round:-1})}function n(i){return R(i)}export{s as a,z as b,C as c};
