import{a as l,b as D,c as d,d as c,e as b}from"./chunk-QUZEX4CN.js";import{m as s,n as u,o as n,p as m}from"./chunk-ITDLEL4J.js";import{a as S}from"./chunk-LAX5536Z.js";import{c as w}from"./chunk-N3HRYLNW.js";import{a as C}from"./chunk-DO7UF2F2.js";import{a as f}from"./chunk-3JGYBNJA.js";import{c as h}from"./chunk-VIEK2X23.js";import{a as o}from"./chunk-PEW2PLAN.js";import{a as p}from"./chunk-CX5IFQZJ.js";import{f as y}from"./chunk-CCJU4DSH.js";import{a as i}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l as v}from"./chunk-5QEXLALV.js";var T,e=T=class extends f.ClonableMixin(y){constructor(t){super(t),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(t,a){return b(a.attributes.ArriveTime,a.attributes.ArriveTimeUTC)}readCumulativeCosts(t,a){return l(a.attributes,"Cumul_")}readDepartTimeOffset(t,a){return b(a.attributes.DepartTime,a.attributes.DepartTimeUTC)}readServiceCosts(t,a){return l(a.attributes,"Attr_")}writeServiceCosts(t,a){D(t,a,"Attr_")}writeTimeWindowEnd(t,a){t!=null&&(a.attributes||(a.attributes={}),a.attributes.TimeWindowEnd=t.getTime())}writeTimeWindowStart(t,a){t!=null&&(a.attributes||(a.attributes={}),a.attributes.TimeWindowStart=t.getTime())}readViolations(t,a){return l(a.attributes,"Violation_")}readWait(t,a){return l(a.attributes,"Wait_")}static fromGraphic(t){return new T({arriveCurbApproach:t.attributes.ArrivalCurbApproach!=null?s.fromJSON(t.attributes.ArrivalCurbApproach):null,arriveTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arriveTimeOffset:t.attributes.ArrivalUTCOffset,cumulativeCosts:t.attributes.CumulativeCosts!=null?d(JSON.parse(t.attributes.CumulativeCosts)):null,cumulativeDistance:t.attributes.CumulativeMeters??null,cumulativeDuration:t.attributes.CumulativeMinutes??null,curbApproach:t.attributes.CurbApproach!=null?s.fromJSON(t.attributes.CurbApproach):null,departCurbApproach:t.attributes.DepartureCurbApproach!=null?s.fromJSON(t.attributes.DepartureCurbApproach):null,departTime:t.attributes.DepartureTime!=null?new Date(t.attributes.DepartureTime):null,departTimeOffset:t.attributes.DepartureUTCOffset??null,geometry:t.geometry,lateDuration:t.attributes.LateMinutes??null,locationType:t.attributes.LocationType!=null?u.fromJSON(t.attributes.LocationType):null,name:t.attributes.Name,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,routeName:t.attributes.RouteName,sequence:t.attributes.Sequence??null,serviceCosts:t.attributes.ServiceCosts!=null?d(JSON.parse(t.attributes.ServiceCosts)):null,serviceDistance:t.attributes.ServiceMeters??null,serviceDuration:t.attributes.ServiceMinutes??null,status:t.attributes.Status!=null?n.fromJSON(t.attributes.Status):null,symbol:t.symbol,timeWindowEnd:t.attributes.TimeWindowEnd!=null?new Date(t.attributes.TimeWindowEnd):null,timeWindowEndOffset:t.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:t.attributes.TimeWindowStart!=null?new Date(t.attributes.TimeWindowStart):null,timeWindowStartOffset:t.attributes.TimeWindowStartUTCOffset??null,waitDuration:t.attributes.WaitMinutes??null})}toGraphic(){let t={ObjectID:this.objectId,ArrivalCurbApproach:this.arriveCurbApproach!=null?s.toJSON(this.arriveCurbApproach):null,ArrivalTime:this.arriveTime!=null?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:this.cumulativeCosts!=null?JSON.stringify(c(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:this.curbApproach!=null?s.toJSON(this.curbApproach):null,DepartureCurbApproach:this.departCurbApproach!=null?s.toJSON(this.departCurbApproach):null,DepartureTime:this.departTime!=null?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:this.locationType!=null?u.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:this.serviceCosts!=null?JSON.stringify(c(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:this.status!=null?n.toJSON(this.status):null,TimeWindowEnd:this.timeWindowEnd!=null?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:this.timeWindowStart!=null?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new S({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};e.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],i([r({type:s.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:s.read}}})],e.prototype,"arriveCurbApproach",void 0),i([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],e.prototype,"arriveTime",void 0),i([r()],e.prototype,"arriveTimeOffset",void 0),i([o("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],e.prototype,"readArriveTimeOffset",null),i([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],e.prototype,"bearing",void 0),i([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],e.prototype,"bearingTol",void 0),i([r()],e.prototype,"cumulativeCosts",void 0),i([o("cumulativeCosts",["attributes"])],e.prototype,"readCumulativeCosts",null),i([r()],e.prototype,"cumulativeDistance",void 0),i([r()],e.prototype,"cumulativeDuration",void 0),i([r({type:s.apiValues,json:{name:"attributes.CurbApproach",read:{reader:s.read},write:{writer:s.write}}})],e.prototype,"curbApproach",void 0),i([r({type:s.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:s.read}}})],e.prototype,"departCurbApproach",void 0),i([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],e.prototype,"departTime",void 0),i([r()],e.prototype,"departTimeOffset",void 0),i([o("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],e.prototype,"readDepartTimeOffset",null),i([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],e.prototype,"distanceToNetworkInMeters",void 0),i([r({type:h,json:{write:!0}})],e.prototype,"geometry",void 0),i([r()],e.prototype,"lateDuration",void 0),i([r({type:u.apiValues,json:{name:"attributes.LocationType",read:{reader:u.read},write:{writer:u.write}}})],e.prototype,"locationType",void 0),i([r({json:{name:"attributes.Name"}})],e.prototype,"name",void 0),i([r({json:{name:"attributes.NavLatency",read:!1,write:!0}})],e.prototype,"navLatency",void 0),i([r({json:{name:"attributes.ObjectID"}})],e.prototype,"objectId",void 0),i([r({type:C})],e.prototype,"popupTemplate",void 0),i([r({json:{read:{source:"attributes.PosAlong"}}})],e.prototype,"posAlong",void 0),i([r({json:{name:"attributes.RouteName"}})],e.prototype,"routeName",void 0),i([r()],e.prototype,"serviceCosts",void 0),i([o("serviceCosts",["attributes"])],e.prototype,"readServiceCosts",null),i([p("serviceCosts")],e.prototype,"writeServiceCosts",null),i([r()],e.prototype,"serviceDistance",void 0),i([r()],e.prototype,"serviceDuration",void 0),i([r({json:{name:"attributes.Sequence"}})],e.prototype,"sequence",void 0),i([r({type:m.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:m.read}}})],e.prototype,"sideOfEdge",void 0),i([r({json:{read:{source:"attributes.SnapX"}}})],e.prototype,"snapX",void 0),i([r({json:{read:{source:"attributes.SnapY"}}})],e.prototype,"snapY",void 0),i([r({json:{read:{source:"attributes.SnapZ"}}})],e.prototype,"snapZ",void 0),i([r({json:{read:{source:"attributes.SourceID"}}})],e.prototype,"sourceId",void 0),i([r({json:{read:{source:"attributes.SourceOID"}}})],e.prototype,"sourceOid",void 0),i([r({type:n.apiValues,json:{read:{source:"attributes.Status",reader:n.read}}})],e.prototype,"status",void 0),i([r({types:w})],e.prototype,"symbol",void 0),i([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],e.prototype,"timeWindowEnd",void 0),i([p("timeWindowEnd")],e.prototype,"writeTimeWindowEnd",null),i([r()],e.prototype,"timeWindowEndOffset",void 0),i([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],e.prototype,"timeWindowStart",void 0),i([p("timeWindowStart")],e.prototype,"writeTimeWindowStart",null),i([r()],e.prototype,"timeWindowStartOffset",void 0),i([r({readOnly:!0,json:{read:!1}})],e.prototype,"type",void 0),i([r()],e.prototype,"violations",void 0),i([o("violations",["attributes"])],e.prototype,"readViolations",null),i([r()],e.prototype,"waitDuration",void 0),i([r()],e.prototype,"wait",void 0),i([o("wait",["attributes"])],e.prototype,"readWait",null),e=T=i([v("esri.rest.support.Stop")],e);var x=e;export{x as a};
