import{a as h}from"./chunk-SOMVEMVH.js";import{a as A}from"./chunk-UAC672F7.js";import{a as J}from"./chunk-7QURFPVK.js";import{a as E}from"./chunk-RRDKXMS3.js";import{a as d}from"./chunk-ODWKHLSX.js";import{a as v}from"./chunk-PPBOBNTL.js";import"./chunk-JAM5M2OZ.js";import{a as V,b as q}from"./chunk-2JABY6DU.js";import{a as u}from"./chunk-57TARQ4F.js";import{a as T,b as f}from"./chunk-6RBQSBA2.js";import{f as I,g as O}from"./chunk-ZC6EBRE4.js";import"./chunk-MDZTV2VL.js";import{h as g}from"./chunk-RNC4P66O.js";import"./chunk-7LHOQXZT.js";import"./chunk-BCREO4Q5.js";import{a as U}from"./chunk-U4QEPZJ3.js";import"./chunk-KJUZWSCL.js";import"./chunk-3WO6D7MU.js";import"./chunk-BUZ3SPLE.js";import"./chunk-KVM6SHDX.js";import"./chunk-EQZWYK27.js";import"./chunk-ZQIC5NFT.js";import"./chunk-VIEK2X23.js";import"./chunk-XKIFGPJO.js";import"./chunk-PEW2PLAN.js";import"./chunk-Q6Y4JG7Q.js";import"./chunk-7F5DJLJT.js";import"./chunk-CX5IFQZJ.js";import{g as S}from"./chunk-NJWTSROP.js";import"./chunk-D3R25AF2.js";import"./chunk-ARRCN5K3.js";import"./chunk-G4DZJMGT.js";import"./chunk-X2B63YVS.js";import{a as _}from"./chunk-BAEF3CT6.js";import{o as p}from"./chunk-AUAZP44J.js";import"./chunk-PVDFCTA4.js";import"./chunk-KNVXE32P.js";import"./chunk-76ATOSLU.js";import"./chunk-CCJU4DSH.js";import"./chunk-QGVBCWUY.js";import"./chunk-MYO4NP2N.js";import"./chunk-NFIPKH6V.js";import"./chunk-JPU2PQZC.js";import"./chunk-5QEXLALV.js";import"./chunk-P6QFA5MM.js";import"./chunk-DGTD7Y73.js";import"./chunk-LI2SX4T6.js";import"./chunk-BWO7LS2H.js";import"./chunk-HEVQSRJ2.js";import"./chunk-OVHPPCBL.js";import"./chunk-SNFOAZZQ.js";import"./chunk-AML4XSEF.js";import"./chunk-4PTIEWMT.js";import"./chunk-TG2UTNEO.js";import"./chunk-YOFFGXOB.js";import"./chunk-XRGPJ3QY.js";import"./chunk-6MRUJ2UW.js";import"./chunk-2LI2GKBQ.js";import"./chunk-QBWJMFH5.js";import{a as i,b as m,f as N}from"./chunk-VTHXE323.js";function j(n,e,s){return N(this,null,function*(){let r=f(n),t=i(m(i({},r.query),{f:"json"}),e.toJSON()),o=T(t,s);return p(r.path+"/areasAndLengths",o).then(a=>a.data)})}function b(n,e,s,r){return N(this,null,function*(){let t=e[0].spatialReference,o=f(n),a=m(i({},o.query),{f:"json",sr:S(t),polygons:JSON.stringify(u(e).geometries),polylines:JSON.stringify(u(s).geometries)}),c=T(a,r);return p(o.path+"/autoComplete",c).then(({data:l})=>(l.geometries||[]).map(({rings:y})=>new g({spatialReference:t,rings:y})))})}function H(n,e,s){return N(this,null,function*(){let r=f(n),t=i(m(i({},r.query),{f:"json"}),e.toJSON()),o=e.outSpatialReference||e.geometries[0].spatialReference,a=T(t,s);return p(r.path+"/buffer",a).then(c=>(c.data.geometries||[]).map(({rings:l})=>new g({spatialReference:o,rings:l})))})}function K(n,e,s){return N(this,null,function*(){let r=e[0].spatialReference,t=f(n),o=m(i({},t.query),{f:"json",sr:JSON.stringify(r.toJSON()),geometries:JSON.stringify(u(e))}),a=T(o,s);return p(t.path+"/convexHull",a).then(({data:c})=>I(c.geometry).set({spatialReference:r}))})}function Y(n,e,s){return N(this,null,function*(){let r=e.geometries?.[0].spatialReference,t=f(n),o=i(m(i({},t.query),{f:"json"}),e.toJSON()),a=T(o,s);return p(t.path+"/densify",a).then(({data:c})=>(c.geometries||[]).map(l=>I(l).set({spatialReference:r})))})}function P(n,e,s,r){return N(this,null,function*(){let t=e[0].spatialReference,o=f(n),a={query:m(i({},o.query),{f:"json",sr:JSON.stringify(t.toJSON()),geometries:JSON.stringify(u(e)),geometry:JSON.stringify({geometryType:O(s),geometry:s.toJSON()})})};return r&&(a=i(i({},r),a)),p(o.path+"/difference",a).then(({data:c})=>(c.geometries||[]).map(l=>I(l).set({spatialReference:t})))})}function w(n,e,s){return N(this,null,function*(){let r=f(n),t=i(m(i({},r.query),{f:"json"}),e.toJSON()),o=T(t,s);return p(r.path+"/distance",o).then(({data:a})=>a&&a.distance)})}var R=new _({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),F={UNIT_METER:9001,UNIT_GERMAN_METER:9031,UNIT_FOOT:9002,UNIT_SURVEY_FOOT:9003,UNIT_CLARKE_FOOT:9005,UNIT_FATHOM:9014,UNIT_NAUTICAL_MILE:9030,UNIT_SURVEY_CHAIN:9033,UNIT_SURVEY_LINK:9034,UNIT_SURVEY_MILE:9035,UNIT_KILOMETER:9036,UNIT_CLARKE_YARD:9037,UNIT_CLARKE_CHAIN:9038,UNIT_CLARKE_LINK:9039,UNIT_SEARS_YARD:9040,UNIT_SEARS_FOOT:9041,UNIT_SEARS_CHAIN:9042,UNIT_SEARS_LINK:9043,UNIT_BENOIT_1895A_YARD:9050,UNIT_BENOIT_1895A_FOOT:9051,UNIT_BENOIT_1895A_CHAIN:9052,UNIT_BENOIT_1895A_LINK:9053,UNIT_BENOIT_1895B_YARD:9060,UNIT_BENOIT_1895B_FOOT:9061,UNIT_BENOIT_1895B_CHAIN:9062,UNIT_BENOIT_1895B_LINK:9063,UNIT_INDIAN_FOOT:9080,UNIT_INDIAN_1937_FOOT:9081,UNIT_INDIAN_1962_FOOT:9082,UNIT_INDIAN_1975_FOOT:9083,UNIT_INDIAN_YARD:9084,UNIT_INDIAN_1937_YARD:9085,UNIT_INDIAN_1962_YARD:9086,UNIT_INDIAN_1975_YARD:9087,UNIT_FOOT_1865:9070,UNIT_RADIAN:9101,UNIT_DEGREE:9102,UNIT_ARCMINUTE:9103,UNIT_ARCSECOND:9104,UNIT_GRAD:9105,UNIT_GON:9106,UNIT_MICRORADIAN:9109,UNIT_ARCMINUTE_CENTESIMAL:9112,UNIT_ARCSECOND_CENTESIMAL:9113,UNIT_MIL6400:9114,UNIT_BRITISH_1936_FOOT:9095,UNIT_GOLDCOAST_FOOT:9094,UNIT_INTERNATIONAL_CHAIN:109003,UNIT_INTERNATIONAL_LINK:109004,UNIT_INTERNATIONAL_YARD:109001,UNIT_STATUTE_MILE:9093,UNIT_SURVEY_YARD:109002,UNIT_50KILOMETER_LENGTH:109030,UNIT_150KILOMETER_LENGTH:109031,UNIT_DECIMETER:109005,UNIT_CENTIMETER:109006,UNIT_MILLIMETER:109007,UNIT_INTERNATIONAL_INCH:109008,UNIT_US_SURVEY_INCH:109009,UNIT_INTERNATIONAL_ROD:109010,UNIT_US_SURVEY_ROD:109011,UNIT_US_NAUTICAL_MILE:109012,UNIT_UK_NAUTICAL_MILE:109013,UNIT_SQUARE_INCHES:"esriSquareInches",UNIT_SQUARE_FEET:"esriSquareFeet",UNIT_SQUARE_YARDS:"esriSquareYards",UNIT_ACRES:"esriAcres",UNIT_SQUARE_MILES:"esriSquareMiles",UNIT_SQUARE_MILLIMETERS:"esriSquareMillimeters",UNIT_SQUARE_CENTIMETERS:"esriSquareCentimeters",UNIT_SQUARE_DECIMETERS:"esriSquareDecimeters",UNIT_SQUARE_METERS:"esriSquareMeters",UNIT_ARES:"esriAres",UNIT_HECTARES:"esriHectares",UNIT_SQUARE_KILOMETERS:"esriSquareKilometers"};function B(n,e,s){return N(this,null,function*(){let r={};e.sr!=null&&typeof e.sr=="object"?r.sr=S(e.sr):r.sr=e.sr,r.strings=JSON.stringify(e.strings);let t=e.conversionType||"mgrs";r.conversionType=R.toJSON(t),r.conversionMode=e.conversionMode;let o=f(n),a=i(m(i({},o.query),{f:"json"}),r),c=T(a,s);return p(o.path+"/fromGeoCoordinateString",c).then(({data:l})=>l.coordinates)})}var Q=new _({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function x(n){let{geometries:e,deviationUnit:s,maxDeviation:r}=n.toJSON(),t={maxDeviation:r};return e&&e.length&&(t.geometries=JSON.stringify({geometryType:O(e[0]),geometries:e}),t.sr=JSON.stringify(e[0].spatialReference)),Q.write(s,t,"deviationUnit"),t}function z(n,e,s){return N(this,null,function*(){let r=(e=E.from(e)).toJSON(),t=x(e),o=f(n),a=i(m(i({},o.query),{f:"json"}),t),c=r.geometries[0].spatialReference,l=T(a,s);return p(o.path+"/generalize",l).then(({data:y})=>(y.geometries||[]).map(G=>I(G).set({spatialReference:c})))})}function k(n,e,s,r){return N(this,null,function*(){let t=e[0].spatialReference,o=f(n),a=m(i({},o.query),{f:"json",sr:JSON.stringify(t.toJSON()),geometries:JSON.stringify(u(e)),geometry:JSON.stringify({geometryType:O(s),geometry:s.toJSON()})}),c=T(a,r);return p(o.path+"/intersect",c).then(({data:l})=>(l.geometries||[]).map(y=>I(y).set({spatialReference:t})))})}function W(n,e,s){let r=e.map(l=>l.toJSON()),t=e[0].spatialReference,o=f(n),a=m(i({},o.query),{f:"json",sr:S(t),polygons:JSON.stringify(r)}),c=T(a,s);return p(o.path+"/labelPoints",c).then(({data:l})=>(l.labelPoints||[]).map(y=>I(y).set({spatialReference:t})))}var X=new _({preserveShape:"preserve-shape"});function D(n){let{polylines:e,lengthUnit:s,geodesic:r,calculationType:t}=n.toJSON(),o={};o.polylines=JSON.stringify(e);let a=n.polylines[0].spatialReference;return o.sr=S(a),s&&(o.lengthUnit=s),r&&(o.geodesic=r),t&&(o.calculationType=X.toJSON(t)),o}function Z(n,e,s){return N(this,null,function*(){e=d.from(e);let r=D(e),t=f(n),o=i(m(i({},t.query),{f:"json"}),r),a=T(o,s);return p(t.path+"/lengths",a).then(({data:c})=>c)})}var $=new _({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),ee=new _({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function M(n){let{geometries:e,bevelRatio:s,offsetDistance:r,offsetHow:t,offsetUnit:o}=n.toJSON(),a={bevelRatio:s,offsetDistance:r};return e&&e.length&&(a.geometries=JSON.stringify({geometryType:O(e[0]),geometries:e}),a.sr=JSON.stringify(e[0].spatialReference)),t&&(a.offsetHow=$.toJSON(t)),o&&(a.offsetUnit=ee.toJSON(o)),a}function re(n,e,s){return N(this,null,function*(){e=A.from(e);let r=M(e),t=f(n),o=i(m(i({},t.query),{f:"json"}),r),a=e.geometries?.[0].spatialReference,c=T(o,s);return p(t.path+"/offset",c).then(({data:l})=>(l.geometries||[]).map(y=>I(y).set({spatialReference:a})))})}var te=new _({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function C(n){let{geometries1:e,geometries2:s,relation:r,relationParameter:t}=n.toJSON(),o={};return e?.length&&(o.geometries1=JSON.stringify({geometryType:O(e[0]),geometries:e}),o.sr=S(e[0].spatialReference)),s&&s.length>0&&(o.geometries2=JSON.stringify({geometryType:O(s[0]),geometries:s})),r&&(o.relation=te.toJSON(r)),t&&(o.relationParam=t),o}function oe(n,e,s){return N(this,null,function*(){e=J.from(e);let r=C(e),t=f(n),o=i(m(i({},t.query),{f:"json"}),r),a=T(o,s);return p(t.path+"/relation",a).then(({data:c})=>c.relations)})}function se(n,e,s,r){return N(this,null,function*(){let t=e.spatialReference,o=f(n),a=m(i({},o.query),{f:"json",sr:S(t),target:JSON.stringify({geometryType:O(e),geometry:e.toJSON()}),reshaper:JSON.stringify(s.toJSON())}),c=T(a,r);return p(o.path+"/reshape",c).then(({data:l})=>I(l.geometry).set({spatialReference:t}))})}function ie(n,e,s){return N(this,null,function*(){let r={};e.sr!=null&&typeof e.sr=="object"?r.sr=S(e.sr):r.sr=e.sr,r.coordinates=JSON.stringify(e.coordinates);let t=e.conversionType||"mgrs";r.conversionType=R.toJSON(t),r.conversionMode=e.conversionMode,r.numOfDigits=e.numOfDigits,r.rounding=e.rounding,r.addSpaces=e.addSpaces;let o=f(n),a=i(m(i({},o.query),{f:"json"}),r),c=T(a,s);return p(o.path+"/toGeoCoordinateString",c).then(({data:l})=>l.strings)})}var ne=new _({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function L(n){let{extendHow:e,polylines:s,trimExtendTo:r}=n.toJSON(),t={};return t.extendHow=ne.toJSON(e),s?.length&&(t.polylines=JSON.stringify(s),t.sr=JSON.stringify(s[0].spatialReference)),r&&(t.trimExtendTo=JSON.stringify(r)),t}function ae(n,e,s){return N(this,null,function*(){e=h.from(e);let r=L(e),t=f(n),o=i(m(i({},t.query),{f:"json"}),r),a=e.sr,c=T(o,s);return p(t.path+"/trimExtend",c).then(({data:l})=>(l.geometries||[]).map(({paths:y})=>new U({spatialReference:a,paths:y})))})}function me(n,e,s){return N(this,null,function*(){let r=e[0].spatialReference,t=f(n),o=m(i({},t.query),{f:"json",sr:JSON.stringify(r.toJSON()),geometries:JSON.stringify(u(e))}),a=T(o,s);return p(t.path+"/union",a).then(({data:c})=>I(c.geometry).set({spatialReference:r}))})}export{j as areasAndLengths,b as autoComplete,H as buffer,R as conversionTypeKebabDict,K as convexHull,V as cut,Y as densify,P as difference,w as distance,B as fromGeoCoordinateString,z as generalize,k as intersect,W as labelPoints,Z as lengths,re as offset,v as project,oe as relation,se as reshape,q as simplify,ie as toGeoCoordinateString,ae as trimExtend,me as union,F as units};
