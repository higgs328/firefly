import{a as E}from"./chunk-N62DQME2.js";import{a as A}from"./chunk-JFBLKPWZ.js";import{a as B}from"./chunk-B7PAC3NI.js";import{i as M,j as V}from"./chunk-QXXXCEV5.js";import{a as b,x as L}from"./chunk-KVM6SHDX.js";import{a as m}from"./chunk-QGVBCWUY.js";import{H as F,q as N}from"./chunk-MYO4NP2N.js";import{e as g}from"./chunk-NFIPKH6V.js";import{l as R}from"./chunk-5QEXLALV.js";import{c as O}from"./chunk-P6QFA5MM.js";import{b as K}from"./chunk-4PTIEWMT.js";var Y=[0,0],u=class extends F{constructor(o){super(o),this._keyToItem=new Map,this._tilesByScale=new Map,this.concurrency=6}initialize(){let{concurrency:o,process:e,scheduler:i,priority:s}=this;this._queue=new E({concurrency:o,scheduler:i,priority:s,process:(t,r)=>{let n=this._keyToItem.get(t);return e(n,{signal:r})},peeker:t=>this._peek(t)})}destroy(){this.clear(),this._queue=K(this._queue)}get length(){return this._queue?this._queue.length:0}abort(o){let e=typeof o=="string"?o:o.id;this._queue.abort(e)}clear(){this._queue.clear(),this._keyToItem.clear(),this._tilesByScale.clear()}has(o){return typeof o=="string"?this._keyToItem.has(o):this._keyToItem.has(o.id)}pause(){this._queue.pause()}push(o){let e=o.key.id;if(this._queue.has(e))return this._queue.get(e);let i=this._queue.push(e),s=this.tileInfoView.getTileScale(o.key),t=O(this._tilesByScale,s,()=>new Set),r=()=>{t.delete(o.key),t.size===0&&this._tilesByScale.delete(s),this._keyToItem.delete(e)};return t.add(o.key),this._keyToItem.set(e,o),i.then(r,r),i}reset(){this._queue.reset()}resume(){this._queue.resume()}_peek(o){if(!this.state)return o.values().next().value;let e=new Set;for(let r of o)e.add(this._keyToItem.get(r).key);let i=this.state.scale,s,t=Number.POSITIVE_INFINITY;for(let[r,n]of this._tilesByScale)if(N(n,h=>e.has(h))){let h=Math.abs(r-i);h<t&&(s=n,t=h)}return this._getClosestTileKey(s,o).id}_getClosestTileKey(o,e){let i=this.tileInfoView,s=this.state.center,t,r=Number.POSITIVE_INFINITY;for(let n of o)if(e.has(n.id)){i.getTileCoords(Y,n);let h=M(Y,s);h<r&&(r=h,t=n)}return t}};m([g({constructOnly:!0})],u.prototype,"concurrency",void 0),m([g({constructOnly:!0})],u.prototype,"priority",void 0),m([g({constructOnly:!0})],u.prototype,"process",void 0),m([g({constructOnly:!0})],u.prototype,"scheduler",void 0),m([g()],u.prototype,"state",void 0),m([g({constructOnly:!0})],u.prototype,"tileInfoView",void 0),u=m([R("esri.views.2d.tiling.TileQueue")],u);var re=u;var x=class{constructor(e,i,s){this.maxSize=e,this._tileInfoView=i,this._removedFunc=s,this._tilePerId=new Map,this._tileKeysPerLevel=[]}clear(){this._tilePerId.clear(),this._tileKeysPerLevel=[]}has(e){return this._tilePerId.has(e)}get(e){return this._tilePerId.get(e)}pop(e){let i=this._tilePerId.get(e);if(!i)return;let s=i.key.level,t=this._tileKeysPerLevel[s];Q(this._tilePerId,e);for(let r=0;r<t.length;r++)if(t[r].id===e){t.splice(r,1);break}return i.visible=!0,i}add(e){e.visible=!1;let i=e.key,s=i.id;if(this._tilePerId.has(s))return;this._tilePerId.set(s,e);let t=i.level;this._tileKeysPerLevel[t]||(this._tileKeysPerLevel[t]=[]),this._tileKeysPerLevel[t].push(i)}prune(e,i,s){let t=this._tilePerId.size;if(t<=this.maxSize)return;let r=this._tileKeysPerLevel.length-1;for(;t>this.maxSize&&r>=0;)r!==e&&(t=this._pruneAroundCenterTile(t,i,s,r)),r--;t>this.maxSize&&(t=this._pruneAroundCenterTile(t,i,s,e))}_pruneAroundCenterTile(e,i,s,t){let r=this._tileKeysPerLevel[t];if(!r||r.length===0)return e;let{size:n,origin:h}=this._tileInfoView.tileInfo,w=s*n[0],T=s*n[1],f=[0,0],P=[0,0];for(r.sort((p,y)=>(f[0]=h.x+w*(p.col+.5),f[1]=h.y-T*(p.row+.5),P[0]=h.x+w*(y.col+.5),P[1]=h.y-T*(y.row+.5),V(f,i)-V(P,i)));r.length>0;){let p=r.pop();if(this._removeTile(p.id),--e===this.maxSize)break}return e}_removeTile(e){let i=this._tilePerId.get(e);this._removedFunc&&i&&this._removedFunc(i),Q(this._tilePerId,e)}};function Q(o,e){o.delete(e)}var v=new B(0,0,0,0),d=new Map,k=[],q=[],D=class{constructor(e){this._previousScale=Number.POSITIVE_INFINITY,this.cachePolicy="keep",this.coveragePolicy="closest",this.resampling=!0,this.tileIndex=new Map,this.tiles=[],this.buffer=192,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,e.resampling!=null&&(this.resampling=e.resampling),e.cachePolicy&&(this.cachePolicy=e.cachePolicy),e.coveragePolicy&&(this.coveragePolicy=e.coveragePolicy),e.buffer!=null&&(this.buffer=e.buffer),e.cacheSize&&(this._tileCache=new x(e.cacheSize,this.tileInfoView,i=>{this.releaseTile(i)}))}destroy(){this.tileIndex.clear()}update(e){let{resampling:i,tileIndex:s}=this,{scale:t,center:r,resolution:n}=e.state,{minScale:h,maxScale:w}=this.tileInfoView,T=!e.stationary&&t>this._previousScale;if(this._previousScale=t,!i&&(t>h||t<w))return this.tiles.length=0,void this.clear();let f=this.tileInfoView.getTileCoverage(e.state,this.buffer,this.resampling,this.coveragePolicy);if(!f)return this.tiles.length=0,void this.clear();let{spans:P,lodInfo:p}=f,{level:y}=p;this.tiles.length=0,s.forEach(l=>l.visible=!0);let z=0,C=0;if(P.length>0)for(let{row:l,colFrom:I,colTo:S}of P)for(let _=I;_<=S;_++){z++;let c=v.set(y,l,p.normalizeCol(_),p.getWorldForColumn(_)).id,a=s.get(c);if(a)a.isReady?(d.set(c,a),C++):T||this._addParentTile(c,d);else{if(this._tileCache?.has(c)){if(a=this._tileCache.pop(c),this.tileIndex.set(c,a),a.isReady){d.set(c,a),C++;continue}}else a=this.acquireTile(v),this.tileIndex.set(c,a);T||this._addParentTile(c,d)}}let W=C===z;for(let[l,I]of s){if(d.has(l))continue;v.set(l);let S=this.tileInfoView.intersects(f,v),_=this.cachePolicy==="purge"?v.level!==y:v.level>y;!S||!T&&W?!_&&S||k.push(I):I.isReady?_&&this.cachePolicy==="purge"&&this._hasReadyAncestor(v,y)?k.push(I):q.push(I):_&&k.push(I)}for(let l of q)l.isReady&&d.set(l.key.id,l);for(let l of k)this._tileCache?this._tileCache.add(l):this.releaseTile(l),s.delete(l.key.id);for(let l of d.values())this.tiles.push(l);for(let l of s.values())d.has(l.key.id)||(l.visible=!1);this._tileCache?.prune(y,r,n),A.pool.release(f),q.length=0,k.length=0,d.clear()}clear(){let{tileIndex:e}=this;for(let i of e.values())this.releaseTile(i);e.clear()}refresh(e){for(let i of this.tileIndex.values())e(i);this._tileCache?.clear()}updateCacheSize(e){this._tileCache&&(this._tileCache.maxSize=e)}_addParentTile(e,i){let s=e,t=null;for(;s=this.tileInfoView.getTileParentId(s),s;)if(this.tileIndex.has(s)){if(t=this.tileIndex.get(s),t?.isReady){i.has(t.key.id)||i.set(t.key.id,t);break}}else if(this._tileCache?.has(s)&&(t=this._tileCache.pop(s),this.tileIndex.set(s,t),t?.isReady)){i.has(t.key.id)||i.set(t.key.id,t);break}}_hasReadyAncestor(e,i){let s=b();this.tileInfoView.getTileBounds(s,e,!0);for(let t of this.tileIndex.values())if(t.isReady&&t.key.level>=i&&t.key.level<e.level){let r=b();if(this.tileInfoView.getTileBounds(r,t.key,!0),L(r,s))return!0}return!1}};export{re as a,D as b};
