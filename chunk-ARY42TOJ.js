import{a as j,b as O,c as L}from"./chunk-O5NYCH42.js";import{a as N}from"./chunk-FY4QM6AV.js";import{b as x,f as _,g as b,q as F}from"./chunk-DA3SDKGO.js";import{e as c}from"./chunk-TG45K3WR.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as i}from"./chunk-NFIPKH6V.js";import{l as E}from"./chunk-5QEXLALV.js";import{e as w,s as d,t as h}from"./chunk-4PTIEWMT.js";import{g}from"./chunk-XRGPJ3QY.js";import{y as f}from"./chunk-QBWJMFH5.js";import{f as y}from"./chunk-VTHXE323.js";var r=class extends N{constructor(){super(...arguments),this.layer=null,this.filter=null,this._geometryEngine=null,this._projectionEngineLoaded=!1,this._abortController=new AbortController}get availableFields(){return[]}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(e){throw new Error("Not implemented")}get maximumNumberOfFeaturesExceeded(){return!1}get layerFilter(){return O(this._layerFilter)}get _layerFilter(){let e=this.layer?.filter;if(e==null||e.geometries.length<1)return null;let n=this._geometryEngine;if(n==null||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine)return j;let s=e.geometries.at(0).spatialReference,P=e.geometries.toArray().map(t=>{try{t=n.simplify(t)}catch{return g.getLogger(this).warnOncePerTick("Failed to simplify scene filter mask polygon. Polygon will be ignored."),null}if(t==null)return null;if(t.spatialReference.equals(s))return t;try{return b(t,s)}catch{return g.getLogger(this).warnOncePerTick("Failed to project scene filter mask polygon. Polygon will be ignored."),null}}).filter(f).sort((t,p)=>t.extent.xmin-p.extent.xmin),m=new Set,a=new Array,u=new Array;for(let t of P){let p=t.extent.xmin;if(a.length=0,m.forEach(l=>{if(p>=l.extent.xmax)return u.push(l),void m.delete(l);t.extent.ymin<=l.extent.ymax&&t.extent.ymax>=l.extent.ymin&&n.intersects(t,l)&&a.push(l)}),a.length>0){a.push(t);try{t=n.union(a)}catch{g.getLogger(this).warnOncePerTick("Failed to unify filter mask polygons. Polygon will be ignored.");continue}a.pop(),a.forEach(l=>m.delete(l))}m.add(t)}return m.forEach(t=>u.push(t)),u.length>0?{spatialRelationship:e.spatialRelationship,geometries:u}:null}get _filterNeedsProjectionEngine(){let e=this.layer.filter;if(e==null||e.geometries.length<=1)return!1;let n=e.geometries.at(0).spatialReference;return e.geometries.some(({spatialReference:s})=>!s.equals(n)&&!F(s,n))}get layerFilterUpdating(){return L(this._layerFilter)}initialize(){let{signal:e}=this._abortController;c(()=>this.destroyed||!this._geometryEngine&&this.layer?.filter?.geometries?.length,e).then(()=>y(this,null,function*(){d(e),this._geometryEngine=yield import("./chunk-4LHG6LX4.js")})).catch(h),this._projectionEngineLoaded=x(),c(()=>this.destroyed||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine,e).then(()=>y(this,null,function*(){d(e),yield _(),this._projectionEngineLoaded=!0})).catch(h)}destroy(){this._abortController=w(this._abortController)}highlight(e){throw new Error("Not implemented")}queryFeatures(e,n){throw new Error("Not implemented")}queryObjectIds(e,n){throw new Error("Not implemented")}queryFeatureCount(e,n){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,n){throw new Error("Not implemented")}};o([i()],r.prototype,"layer",void 0),o([i()],r.prototype,"availableFields",null),o([i()],r.prototype,"maximumNumberOfFeatures",null),o([i({readOnly:!0})],r.prototype,"maximumNumberOfFeaturesExceeded",null),o([i()],r.prototype,"filter",void 0),o([i({readOnly:!0})],r.prototype,"layerFilter",null),o([i({readOnly:!0})],r.prototype,"_layerFilter",null),o([i()],r.prototype,"_geometryEngine",void 0),o([i()],r.prototype,"_projectionEngineLoaded",void 0),o([i()],r.prototype,"_filterNeedsProjectionEngine",null),o([i()],r.prototype,"layerFilterUpdating",null),r=o([E("esri.views.layers.SceneLayerView")],r);var Q=r;export{Q as a};
