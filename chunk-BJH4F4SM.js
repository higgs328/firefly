import{a as r}from"./chunk-Z3RBZHAK.js";var c=class i{static cacheKey(s,t){return[s.wkid?.toString()??"-1",s.wkt?.toString()??"",s.wkt2?.toString()??"",t.wkid?.toString()??"-1",t.wkt?.toString()??"",t.wkt2?.toString()??""].join()}static fromGE(s){let t=new i,e="";for(let n of s.steps){let o=r.fromGE(n);t.steps.push(o),e+=o.uid.toString()+","}return t._cachedProjection={},t._gtlistentry=null,t._chain=e,t}constructor(s){if(this.steps=[],this._cachedProjection={},this._chain="",this._gtlistentry=null,s?.steps)for(let t of s.steps)t instanceof r?this.steps.push(t):this.steps.push(new r({wkid:t.wkid,wkt:t.wkt,isInverse:t.isInverse}))}getInverse(){let s=new i;s.steps=[];for(let t=this.steps.length-1;t>=0;t--){let e=this.steps[t];s.steps.push(e.getInverse())}return s}getGTListEntry(){let s="";for(let t of this.steps)s+=t.uid.toString()+",";return s!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=s),this._gtlistentry}assignCachedGe(s,t,e){this._cachedProjection[i.cacheKey(s,t)]=e}getCachedGeTransformation(s,t){let e="";for(let o of this.steps)e+=o.uid.toString()+",";e!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=e);let n=this._cachedProjection[i.cacheKey(s,t)];return n===void 0?null:n}};export{c as a};
