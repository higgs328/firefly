import{a as G}from"./chunk-RSA5APDD.js";import{a as q}from"./chunk-H25DKJGS.js";import{a as $}from"./chunk-Z5EURZKA.js";import{a as j,f as V,g as b,h as P,i as x,j as O,m as M}from"./chunk-4JY7PCV4.js";import{a as J}from"./chunk-4YTM754S.js";import{a as B}from"./chunk-LAX5536Z.js";import{f as D}from"./chunk-ZC6EBRE4.js";import{a as N}from"./chunk-2GJBUR2F.js";import{a as T}from"./chunk-IR6XCBC4.js";import{m as A}from"./chunk-ZQIC5NFT.js";import{a as k}from"./chunk-7F5DJLJT.js";import{b as E,o as w}from"./chunk-AUAZP44J.js";import{k as R}from"./chunk-76ATOSLU.js";import{a as l}from"./chunk-QGVBCWUY.js";import{e as d}from"./chunk-NFIPKH6V.js";import{l as L}from"./chunk-5QEXLALV.js";import{y as F}from"./chunk-4PTIEWMT.js";import{b as S}from"./chunk-YOFFGXOB.js";import{g as _}from"./chunk-XRGPJ3QY.js";import{a as m,b as I,f as p}from"./chunk-VTHXE323.js";function Y(e,t){return p(this,null,function*(){let r=e.layers,o=e.layerInfos,i=e.returnGeometry||!1,s=e.outSpatialReference;return yield Promise.all(r.map(a=>p(this,null,function*(){yield a.load()}))),(yield Promise.all(r.map(a=>p(this,null,function*(){let u=o.find(f=>f.layerUrl===a.parsedUrl?.path);if(!u?.objectIds?.length)return{layer:a,featureSet:void 0};let c=a.createQuery();c.returnGeometry=i,c.outFields=u.outFields||["*"],c.outSpatialReference=s,c.gdbVersion=a.gdbVersion,c.objectIds=u.objectIds,t&&(c.where="1=1");let y=J.fromJSON(yield $(a,c));return y.features.forEach(f=>{f.layer=a}),{layer:a,featureSet:y}})))).filter(a=>a.featureSet!==void 0)})}function H(e,t){return p(this,null,function*(){if(e==="Utility Network Layer"){let{default:r}=yield import("./chunk-6SPCTFCZ.js");return new r({layerUrl:t})}return null})}function C(e){return p(this,null,function*(){let t="portalItem"in e?e:{portalItem:e};!t.portalItem||t.portalItem instanceof N||(t=I(m({},t),{portalItem:new N(t.portalItem)}));let r=t.portalItem;if(yield r.load(),r.type!=="Feature Service")throw new S("portal:unknown-item-type","Unknown item type '${type}'",{type:r.type});let o=r.url,i=yield w(o,{responseType:"json",query:{f:"json"}}),s="Network Layer";if(i.data.type?.includes(s))return H(i.data.type,o);if(i.data.layers){let a=i.data.layers.find(u=>u.type.includes(s));if(a){let u=`${o}/${a.id}`;return H(a.type,u)}}return null})}var n=class extends q(T){static fromPortalItem(e){return C(e)}constructor(e){super(e),this.id=null,this.title=null,this.layerUrl=null,this.dataElement=null,this.fullExtent=null,this.spatialReference=null,this.type=null,this.sourceJSON=null,this.gdbVersion=null,this.historicMoment=null,this._sourceIdByLayerId=new Map,this._layerIdBySourceId=new Map,this._applyEditsHandler=t=>{let{serviceUrl:r,gdbVersion:o,result:i}=t,s=r===this.featureServiceUrl,a=M(r,o,this.gdbVersion);s&&a&&i.then(u=>{b(r,o)&&(this.historicMoment=u.historicMoment)})},this._updateMomentHandler=t=>{let{serviceUrl:r,gdbVersion:o,moment:i}=t,s=r===this.featureServiceUrl,a=M(r,o,this.gdbVersion);s&&a&&(this.historicMoment=i)},this.when().then(()=>{this.addHandles([P(this._applyEditsHandler),x(this._updateMomentHandler)])},()=>{})}initialize(){this.when().catch(e=>{F(e)||_.getLogger(this).error("#load()",`Failed to load layer (title: '${this.title??"no title"}', id: '${this.id??"no id"}')`,{error:e})})}get datasetName(){return this.dataElement?.name??null}get owner(){return this.dataElement?.userIdentity??null}get schemaGeneration(){return this.dataElement?.schemaGeneration??null}get parsedUrl(){return R(this.layerUrl)}get featureServiceUrl(){return E(this.parsedUrl.path).url.path}get networkServiceUrl(){return this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer")}get layerId(){return E(this.parsedUrl.path).sublayer}get networkSystemLayers(){return null}load(e){return p(this,null,function*(){return this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),e)),this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,e)),this})}getLayerIdBySourceId(e){if(!this.dataElement)return null;let t=this._layerIdBySourceId.get(e);if(t!=null)return t;let r=this.dataElement.domainNetworks,o=this._traverseNetworkSources(r,this._layerIdBySourceId,"sourceId","layerId",e);return o>=0?o:null}getSourceIdByLayerId(e){if(!this.dataElement)return null;let t=this._sourceIdByLayerId.get(e);if(t!=null)return t;let r=this.dataElement.domainNetworks,o=this._traverseNetworkSources(r,this._sourceIdByLayerId,"layerId","sourceId",e);return o>=0?o:null}getObjectIdsFromElements(e){let t=[],r=new Map;for(let i of e){let s=this.getLayerIdBySourceId(i.networkSourceId);if(s==null)continue;let a=r.get(s);a===void 0&&(a=[]),a.push(i.objectId),r.set(s,a)}let o=this.featureServiceUrl;return r.forEach((i,s)=>t.push({layerUrl:`${o}/${s}`,objectIds:i})),t}queryNamedTraceConfigurations(e,t){return p(this,null,function*(){let[{queryNamedTraceConfigurations:r},{default:o}]=yield Promise.all([import("./chunk-LAAHRABU.js"),import("./chunk-ZHPGV77J.js")]),i=this.networkServiceUrl,s=o.from(e);return(yield r(i,s,m({},t)))?.namedTraceConfigurations})}validateTopology(e,t){return p(this,null,function*(){if(!e.validateArea)throw new S("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");let[{validateNetworkTopology:r},{default:o}]=yield Promise.all([import("./chunk-LXBBJKUD.js"),import("./chunk-SSZA2B2H.js")]),i=o.from(e);b(this.featureServiceUrl,this.gdbVersion||null)?(i.sessionID=j,yield V(this.featureServiceUrl,this.gdbVersion,!0)):i.sessionID=null,i.gdbVersion=this.gdbVersion;let s=this.networkServiceUrl,a=this.featureServiceUrl,u=O(a,null,this.gdbVersion,!0),c=yield r(s,i,m({},t));if(c?.serviceEdits){let y=[];for(let f of c.serviceEdits){let{editedFeatures:g}=f,v=g?.spatialReference?new k(g.spatialReference):null;y.push({layerId:f.layerId,editedFeatures:{adds:g?.adds?.map(h=>U(h,v))||[],updates:g?.updates?.map(h=>({original:U(h[0],v),current:U(h[1],v)}))||[],deletes:g?.deletes?.map(h=>U(h,v))||[],spatialReference:v}})}u.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],editedFeatures:y,exceededTransferLimit:!1,historicMoment:c.moment})}return c})}submitTopologyValidationJob(e,t){return p(this,null,function*(){let r=null;if(!e.validateArea)throw new S("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");if(!this.gdbVersion){let y=this.layerUrl.replace(/\/FeatureServer/i,"/VersionManagementServer").replace(/\/\d*$/,"");r=(yield w(y,{responseType:"json",query:{f:"json"}})).data.defaultVersionName}let[{submitValidateNetworkTopologyJob:o},{default:i}]=yield Promise.all([import("./chunk-LXBBJKUD.js"),import("./chunk-SSZA2B2H.js")]),s=i.from(e);b(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionID=j,yield V(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionID=null,s.gdbVersion=this.gdbVersion||r;let a=this.networkServiceUrl,u=this.featureServiceUrl?O(this.featureServiceUrl,null,this.gdbVersion,!0):void 0,c=yield o(a,s,m({},t));return new G({statusUrl:c,editsResolver:u})})}getSourceTypeById(e){if(!this.dataElement)return null;for(let t of this.dataElement.domainNetworks)for(let r of[t.edgeSources??[],t.junctionSources??[]])for(let o of r)if(o.sourceId===e)return r===t.edgeSources?"edge":"junction";return null}_traverseNetworkSources(e,t,r,o,i){for(let s of e)for(let a of[s.edgeSources??[],s.junctionSources??[]])for(let u of a)if(u[r]===i)return t.set(i,u[o]),u[o];return-1}_fetchLayerMetaData(e,t){return p(this,null,function*(){let r=yield w(e,m({responseType:"json",query:{f:"json"}},t));this.sourceJSON=r.data,this.read(r.data,{origin:"service"})})}_fetchDataElement(e,t,r){return p(this,null,function*(){if(this.dataElement)return;let o=yield w(`${e}/queryDataElements`,m({responseType:"json",query:{layers:JSON.stringify([t]),f:"json"}},r)).then(i=>i.data.layerDataElements?.[0]);o&&this.read(o,{origin:"service"})})}};function U(e,t){return new B({attributes:e.attributes,geometry:D(I(m({},e.geometry),{spatialReference:t}))})}l([d({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:!0}},read:!1}})],n.prototype,"id",void 0),l([d({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:{source:"name"}}},read:!1}})],n.prototype,"title",void 0),l([d({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},write:{target:"url",isRequired:!0}}},read:!1}})],n.prototype,"layerUrl",void 0),l([d({type:Object,json:{origins:{service:{read:!0}},read:!1}})],n.prototype,"dataElement",void 0),l([d({type:A,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],n.prototype,"fullExtent",void 0),l([d({type:k,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],n.prototype,"spatialReference",void 0),l([d({type:["utility","trace"],readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"type",void 0),l([d({readOnly:!0})],n.prototype,"datasetName",null),l([d({readOnly:!0})],n.prototype,"owner",null),l([d({readOnly:!0})],n.prototype,"schemaGeneration",null),l([d({readOnly:!0})],n.prototype,"parsedUrl",null),l([d({readOnly:!0})],n.prototype,"featureServiceUrl",null),l([d({readOnly:!0})],n.prototype,"networkServiceUrl",null),l([d({readOnly:!0})],n.prototype,"layerId",null),l([d()],n.prototype,"sourceJSON",void 0),l([d({readOnly:!0})],n.prototype,"networkSystemLayers",null),l([d()],n.prototype,"gdbVersion",void 0),l([d({type:Date})],n.prototype,"historicMoment",void 0),n=l([L("esri.networks.Network")],n);var be=n;export{Y as a,be as b};
