var o=class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,r=new Map){if(r.has(e))return r.get(e);let s=this._read(e);if(!s)throw new Error(`cannot find shader file ${e}`);let h=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm,t=h.exec(s),i=[];for(;t!=null;)i.push({path:t[1],start:t.index,length:t[0].length}),t=h.exec(s);let a=0,n="";return i.forEach(l=>{n+=s.slice(a,l.start),n+=r.has(l.path)?"":this._resolve(l.path,r),a=l.start+l.length}),n+=s.slice(a),r.set(e,n),n}_read(e){return this._readFile(e)}};export{o as a};
