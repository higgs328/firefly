import{a as me}from"./chunk-B5UEI6EC.js";import{a as ye,b as z,d as ge,e as be,g as k,h as Re,p as E}from"./chunk-ROCEAXU5.js";import{a as Fe,b as xe,c as Ie}from"./chunk-IJGCZDYE.js";import{a as _e}from"./chunk-6Y5UZPT2.js";import{e as ue,f as O,g as de,h as he,i as pe,l as fe}from"./chunk-AFJIRAY7.js";import{a as we}from"./chunk-5UDQHKRH.js";import{a as C}from"./chunk-3YHPJJNR.js";import{a as ce}from"./chunk-B3QGX4VL.js";import{a as le}from"./chunk-E424TX4V.js";import{a as D,b as Z,d as ie}from"./chunk-GG4LHW7G.js";import{i as se}from"./chunk-WH5YYKLM.js";import{a as oe}from"./chunk-FEP4LYOS.js";import{b as ee,g as te,h as H}from"./chunk-HD5Z6MAY.js";import{e as re}from"./chunk-4SRR6EC6.js";import{A as ne,v as X}from"./chunk-Y3KWVZKS.js";import{a as Y}from"./chunk-G7KCDLNH.js";import{d as ae}from"./chunk-PBAMEKFE.js";import{a as Q}from"./chunk-4YTM754S.js";import{a as $}from"./chunk-MIS6QMFE.js";import{h as K}from"./chunk-RNC4P66O.js";import{a as N}from"./chunk-DZFUQCB6.js";import{c as W}from"./chunk-VIEK2X23.js";import{a as L}from"./chunk-PEW2PLAN.js";import{a as A}from"./chunk-7F5DJLJT.js";import{f as V}from"./chunk-NJWTSROP.js";import{g as q,o as U}from"./chunk-AUAZP44J.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as a}from"./chunk-NFIPKH6V.js";import{l as T}from"./chunk-5QEXLALV.js";import{i as B,r as M}from"./chunk-P6QFA5MM.js";import{b as I}from"./chunk-YOFFGXOB.js";import{g as P}from"./chunk-XRGPJ3QY.js";import{a as g,b as F,f}from"./chunk-VTHXE323.js";var Se=40,_=class extends _e{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}fetchPixels(t,n,r){return f(this,arguments,function*(m,i,u,e={}){let{rasters:s,rasterIds:l}=this.primaryRasters,c=!1,{interpolation:p}=e,y=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!e.requestRawData&&y&&(c=s.length===1&&!e.skipRasterFunction,e=F(g({},e),{interpolation:"bilinear",requestRawData:c}));let d=s.map(R=>R.fetchPixels(m,i,u,e)),h=yield Promise.all(d),b=h.map(R=>R.pixelBlock),w=c||e.requestRawData?h.map(R=>R.srcTilePixelSize):null;if(e.skipRasterFunction||b.every(R=>R==null))return h[0];let J=h.find(R=>R.pixelBlock!=null)?.extent??m,x=this.rasterJobHandler?yield this.rasterJobHandler.process({extent:J,primaryPixelBlocks:b,primaryPixelSizes:w,primaryRasterIds:l}):this.rasterFunction.process({extent:J,primaryPixelBlocks:b,primaryPixelSizes:w,primaryRasterIds:l}),{transformGrid:v}=h[0];if(!c||x==null||v==null){let R=e.noClip?null:this.getClippingGeometry(J.spatialReference);return e.noClip||e.requestRawData||x==null||!R||(x=yield D(x,J,R)),F(g({},h[0]),{pixelBlock:x})}let G={rows:v.spacing[0],cols:v.spacing[1]},S;this.rasterJobHandler?S=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[x],srcMosaicSize:{width:x.width,height:x.height},destDimension:{width:i,height:u},coefs:v.coefficients,sampleSpacing:G,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:p,alignmentInfo:void 0,blockWidths:null},e)).pixelBlock:S=X(x,{width:i,height:u},v.coefficients,G,p);let j=e.noClip?null:this.getClippingGeometry(m.spatialReference);return e.noClip||e.requestRawData||S==null||j==null||(S=yield D(S,m,j)),{extent:m,srcExtent:h[0].srcExtent,pixelBlock:S}})}getClippingGeometry(m){let i=this._clippingGeometry.get("0");if(!m||!i)return i;let u=De(m),e=this._clippingGeometry.get(u);return e!=null||(e=m.equals(i.spatialReference)?i:H(i,m),this._clippingGeometry.set(u,e)),e}_open(m){return f(this,null,function*(){let{rasterFunction:i}=this;this.primaryRasters?.rasters?.length?i.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=i.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(c=>c.rasterJobHandler=this.rasterJobHandler));let{rasters:u,rasterIds:e}=this.primaryRasters,t=u.map(c=>c.rasterInfo?void 0:c.open(m));yield Promise.all(t);let n=u.map(({rasterInfo:c})=>c),r=i.bind({rasterInfos:n,rasterIds:e});if(i.rawSourceRasterInfos=n,!r.success||n.length===0)throw new I("raster-function:open",`cannot bind the function: ${r.error??""}`);let s=i.functionName==="Table"?i:i.functionArguments?.raster;s?.functionName==="Table"&&(i.rasterInfo.attributeTable=Q.fromJSON(s.functionArguments.attributeTableAsRecordSet)),yield this.syncJobHandler();let l=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(c=>ve(c,l)),this.set("sourceJSON",u[0].sourceJSON),this.set("rasterInfo",i.rasterInfo),yield this._updateClipGeometry()})}syncJobHandler(){return f(this,null,function*(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)})}_updateClipGeometry(){return f(this,null,function*(){let m=this.rasterFunction.getClippingGeometries()[0],i=m?.clippingGeometry;if(i&&m.clippingType==="inside"){let{extent:u}=this.rasterInfo,{difference:e,densify:t}=yield import("./chunk-4LHG6LX4.js"),n=t(K.fromExtent(u),2*(u.width+u.height)/Se);n=H(n,i.spatialReference),i=e(n,i)}this._clippingGeometry.clear(),i&&this._clippingGeometry.set("0",i)})}};o([a({type:String,json:{write:!0}})],_.prototype,"datasetFormat",void 0),o([a()],_.prototype,"tileType",void 0),o([a()],_.prototype,"rasterFunction",void 0),o([a()],_.prototype,"primaryRasters",void 0),_=o([T("esri.layers.support.rasterDatasets.FunctionRaster")],_);var Je=_;function ve(m,i){let{storageInfo:u,pixelSize:e,spatialReference:t,extent:n}=m,{storageInfo:r,pixelSize:s,spatialReference:l,extent:c}=i;return e.x===s.x&&e.y===s.y&&t.equals(l)&&n.equals(c)&&u.blockHeight===r.blockHeight&&u.blockWidth===r.blockWidth&&u.maximumPyramidLevel===r.maximumPyramidLevel}function De(m){return String(m.wkid??m.wkt??m.wkt2)}var Jt=m=>{let i=class extends m{constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=e[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){e?.functionName?.toLowerCase()==="none"&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}set url(e){this._set("url",q(e,P.getLogger(this)))}get renderer(){if(this.type!=="imagery-tile")return this.internalRenderer;let{activePresetRendererName:e,presetRenderers:t}=this;return e?t?.find(({name:r})=>r===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.type==="imagery-tile"&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){e==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("internalRenderer",e),this.updateRenderer())}readRenderer(e,t,n){let r=t?.layerDefinition?.drawingInfo?.renderer;return Ie(r,n)||void 0}convertVectorFieldData(e,t){return f(this,null,function*(){let{serviceRasterInfo:n}=this;if(e==null||!n)return null;let r=this._rasterJobHandler.instance,s=n.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:s},t):ne(e,s)})}computeStatisticsHistograms(e,t){return f(this,null,function*(){yield this.load(t),e=B(we,e).clone();let{serviceRasterInfo:n}=this;if(n==null)throw new I("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");let{geometry:r}=e;if(r==null)throw new I("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let s=r,{spatialReference:l}=n;r.spatialReference.equals(l)||(yield ee(),s=r.type==="extent"?te(r,l):H(r,l));let c=e.pixelSize??new W({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:l}),{extent:p,width:y,height:d}=Z(n,s,c),h=yield this.fetchPixels(p,y,d,F(g({},t),{interpolation:"nearest"}));if(h.pixelBlock==null)throw new I("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");let b=yield D(h.pixelBlock,p,s),w=this._rasterJobHandler.instance;return w?w.computeStatisticsHistograms({pixelBlock:b},t):re(b)})}createFlowMesh(e,t){return f(this,null,function*(){let n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,t):oe(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)})}normalizeRasterFetchOptions(e){let{multidimensionalInfo:t}=this.serviceRasterInfo??{};if(t==null)return e;let n=ue({rasterInfo:this.raster.rasterInfo,multidimensionalDefinition:e.multidimensionalDefinition||this.multidimensionalDefinition,timeExtent:e.timeExtent??this.timeExtent,multidimensionalSubset:this.multidimensionalSubset});return F(g({},e),{multidimensionalDefinition:n})}updateRasterFunction(){return f(this,null,function*(){return this.loaded&&this.type==="imagery-tile"&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson)?(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this._rasterFunctionUpdatePromise=this._updateRasterFunction(),this._rasterFunctionUpdatePromise):this._rasterFunctionUpdatePromise})}updateRenderer(){return f(this,null,function*(){let{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;let{rasterInfo:n}=this.raster,r=O(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=r?.name,l=E(F(g({},this.renderer.toJSON()),{variableName:s}));if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;let c=this._rasterJobHandler.instance;c&&(t.rasterInfo=k(n,s),t.rendererJSON=l,t.bind(),yield c.updateSymbolizer(t),this._cachedRendererJson=l)})}applyRenderer(e,t){return f(this,null,function*(){let n=e?.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let r;yield this.updateRenderer();let s=this._rasterJobHandler.instance,l=this.bandIds??[];return r=s?yield s.symbolize(F(g({},e),{simpleStretchParams:t,bandIds:l})):this.symbolizer.symbolize(F(g({},e),{simpleStretchParams:t,bandIds:l})),r})}getTileUrl(e,t,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${e}/${t}/${n}`:""}getCompatibleTileInfo(e,t,n=!1){if(!this.loaded||t==null)return null;if(n&&e.equals(this.spatialReference))return this.tileInfo;let r=V(e);return N.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}fetchTile(s,l,c){return f(this,arguments,function*(e,t,n,r={}){if(u(this),r.requestAsImageElement){let y=this.getTileUrl(e,t,n);return U(y,{responseType:"image",query:g(g({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:r.signal}).then(d=>d.data)}let{serviceRasterInfo:p}=this;if(p.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null){let y=r.tileInfo||p.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,n,y),pixelBlock:null}}return yield this._initJobHandler(),yield this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(r=F(g({},r),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(e,t,n,r)})}fetchPixels(s,l,c){return f(this,arguments,function*(e,t,n,r={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null?{extent:e,pixelBlock:null}:(yield this._initJobHandler(),yield this.updateRasterFunction(),t=Math.round(t),n=Math.round(n),this.raster.fetchPixels(e,t,n,r))})}identify(n){return f(this,arguments,function*(e,t={}){yield this.load();let{raster:r,serviceRasterInfo:s}=this;if(s?.multidimensionalInfo!=null&&!(s.hasMultidimensionalTranspose&&(he(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition==null)return{location:e,value:null};let l=this.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(e))throw new I("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(e,t)})}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){let e=this.serviceRasterInfo?.multidimensionalInfo;if(e==null||this.serviceRasterInfo?.dataType!=="standard-time")return!1;let t=this.multidimensionalDefinition,n=t?.[0]?.variableName;return e.variables.some(r=>r.name===n&&(!t?.[0].dimensionName||r.dimensions.some(s=>s.name==="StdTime")))}getStandardTimeValue(e){return new Date(fe(e)).toISOString()}getMultidimensionalSubsetVariables(e){let t=e??this.serviceRasterInfo?.multidimensionalInfo;return pe(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=de(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let e=new me;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>f(this,null,function*(){u(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&(yield this.updateRasterFunction().catch(()=>{})),this.renderer&&this.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){u(this);let{raster:e}=this,t=be(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(e="no"){u(this);let{rasterInfo:t}=this.raster,n=O(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=n?.name,s=ye({variableName:r,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&t.bandCount>1&&(this.bandIds=s?.bandIds??Re(t)),!this.renderer||e==="override"){let y=ge(this.raster),d=s?.renderer??z(t,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:y}),h=t.statistics,b=h&&h.length>0?h[0]:null,w=b?.max??0,J=b?.min??0;this.raster.datasetFormat==="WCSServer"&&d.type==="raster-stretch"&&(w>1e24||J<-1e24)&&(d.dynamicRangeAdjustment=!0,d.customStatistics=null,d.stretchType==="none"&&(d.stretchType="min-max")),this.renderer=d}let l=E(F(g({},this.renderer.toJSON()),{variableName:r})),c=k(t,r);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new se({rendererJSON:l,rasterInfo:c});let p=this.symbolizer.bind();if(p.success){if(e==="auto"){let{colormap:y}=this.raster.rasterInfo,d=this.renderer;if(y!=null&&d.type==="raster-colormap"){let h=z(this.raster.rasterInfo);JSON.stringify(h)!==JSON.stringify(d)&&this._configDefaultRenderer("override")}else if(d.type==="raster-stretch"){let h=this.bandIds?.length,b=d.customStatistics?.length;!d.dynamicRangeAdjustment&&b&&h&&b!==h&&this._configDefaultRenderer("override")}}}else P.getLogger(this).warn("imagery-tile-mixin",p.error||"The given renderer is not supported by the layer."),e==="auto"&&this._configDefaultRenderer("override")}_updateRasterFunction(){return f(this,null,function*(){if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){let p=this.raster.rasterFunction.toJSON();return void(!this.rasterFunction&&p&&this._set("rasterFunction",C.fromJSON(p)))}let e,t=this.raster,n=!1;t.datasetFormat==="Function"?(e=t.primaryRasters.rasters,t=e[0],n=!0):e=[t];let{rasterFunction:r}=this;if(r){let p={raster:t};e.length>1&&e.forEach(h=>p[h.url]=h);let y=ie(r.functionDefinition?.toJSON()??r.toJSON(),p),d=new Je({rasterFunction:y});d.rasterJobHandler=this._rasterJobHandler.instance,yield d.open(),this.raster=d}else this.raster=t,yield t.open();if(this._cachedRendererJson=null,!n&&!r)return;let{bandIds:s}=this,{bandCount:l}=this.raster.rasterInfo,c=s?.length?s.some(p=>p>=l):l>=3;s&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")})}};function u(e){if(!e.raster||!e.serviceRasterInfo)throw new I("imagery-tile","no raster")}return o([a({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),o([a({clonable:!1})],i.prototype,"_cachedRasterFunctionJson",void 0),o([a({clonable:!1})],i.prototype,"_compatibleFullExtent",void 0),o([a({clonable:!1})],i.prototype,"_isConstructedFromFunctionRaster",void 0),o([a({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),o([a({clonable:!1})],i.prototype,"_rasterFunctionUpdatePromise",void 0),o([a({type:[M],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],i.prototype,"bandIds",void 0),o([a({json:{origins:{service:{read:{source:"copyrightText"}}}}})],i.prototype,"copyright",void 0),o([a({json:{read:!1}})],i.prototype,"fullExtent",null),o([a({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),$(Y)],i.prototype,"interpolation",void 0),o([a()],i.prototype,"ioConfig",void 0),o([a({type:[le],json:{write:!0}})],i.prototype,"multidimensionalDefinition",null),o([a({type:ce,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),o([a()],i.prototype,"raster",void 0),o([a({type:C})],i.prototype,"rasterFunction",null),o([a()],i.prototype,"serviceRasterInfo",void 0),o([a()],i.prototype,"sourceJSON",void 0),o([a({readOnly:!0,type:A,json:{read:!1}})],i.prototype,"spatialReference",void 0),o([a({type:N})],i.prototype,"tileInfo",void 0),o([a(ae)],i.prototype,"url",null),o([a()],i.prototype,"renderer",null),o([a({types:Fe,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){let e=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:xe,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),o([L("internalRenderer")],i.prototype,"readRenderer",null),o([a({clonable:!1})],i.prototype,"symbolizer",void 0),i=o([T("esri.layers.mixins.ImageryTileMixin")],i),i};export{Je as a,Jt as b};
