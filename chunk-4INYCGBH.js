import{a as pt}from"./chunk-PSH6AM2I.js";import{a as lt}from"./chunk-E7FZSPTU.js";import{a as rt}from"./chunk-GHRDCMSY.js";import{a as nt}from"./chunk-AMX6AASB.js";import{t as ot}from"./chunk-DT6D5YZT.js";import{a as at}from"./chunk-4OC4J3KU.js";import{a as st}from"./chunk-DOB47SIN.js";import{a as it}from"./chunk-CESHMSBL.js";import{a as et}from"./chunk-5MQCBXNU.js";import{i as $,j as tt}from"./chunk-DFZB6AM2.js";import{a as X}from"./chunk-XOJOMNES.js";import{a as Y}from"./chunk-QC7YKF4H.js";import{a as L,d as k,l as T}from"./chunk-RGD6ZU25.js";import{a as Z}from"./chunk-XGBN53IG.js";import{a as P}from"./chunk-KVIHP5QH.js";import{a as E}from"./chunk-63BBKXWS.js";import{f as C}from"./chunk-6HKZJRQV.js";import{a as K}from"./chunk-5KMJDB5T.js";import{a as N,c as J,l as Q}from"./chunk-2BJHWKO6.js";import{a as U}from"./chunk-675SQO5M.js";import{d as f}from"./chunk-CL7L227X.js";import{d as H}from"./chunk-QXSQOLB3.js";import{i as F,n as W,s as A}from"./chunk-ZM24RY22.js";import{a as B}from"./chunk-JQAW4OB5.js";import{a as O}from"./chunk-6F25LG6O.js";import{i as q}from"./chunk-OLOKUDVI.js";import{a as x}from"./chunk-BOVYXYHK.js";import{c as w}from"./chunk-VIEK2X23.js";import{H as V}from"./chunk-NJWTSROP.js";import{a as h,i as j,k as y}from"./chunk-TG45K3WR.js";import{a as o}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l as v}from"./chunk-5QEXLALV.js";import{d as G}from"./chunk-BWO7LS2H.js";import{b as g,z as b}from"./chunk-4PTIEWMT.js";import{a as I,b as z}from"./chunk-VTHXE323.js";var M=class{constructor(t,i=null){this.screenPoint=t,this.result=i}},D=class{constructor(t,i){this.scenePoint=t,this.mapPoint=i}};var S=class{constructor(t){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=x();let{analysisViewData:i,manipulators:s,toolState:n,view:a,visible:l}=t;this._analysisViewData=i,this._toolState=n,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new P,this._view=a,this._intersector=et(a.state.viewingMode);let m=k(this._handleColor),d=[new T(H(m,1,32,32))],c=new L({view:a,renderObjects:d});c.available=!1,c.radius=ht,c.interactive=!1,this._manipulators.add(c),this._cursorManipulator=c,this._cursorManipulatorMaterial=m,this._laserLine=new X({view:a,attached:!0,style:{glowWidth:yt,glowFalloff:wt,innerWidth:ft},isDecoration:!0}),this._updateVisibility(l??!0)}destroy(){this._listenerHandles=g(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=g(this._manipulators):this._manipulators=null,this._laserLine=g(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(t){this._destroyed||this._visible===t||this._updateVisibility(t)}_updateVisibility(t){this._visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:i})=>this._removeVertexManipulator(i)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(t,i){return this._manipulators.intersect(t,i)?.metadata}pick(t){let i=this._view.spatialReference,s=q(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);let n=this._intersector.results.min,a=x();if(!n.getIntersectionPoint(a))return null;let l=this._view.renderCoordsHelper.fromRenderCoords(a,new w({spatialReference:i}));return l==null?null:new D(a,l)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){let t=k(this._handleColor),i=[new T(H(t,1,32,32))],s=new L({view:this._view,renderObjects:i});return s.radius=ht,this._manipulators.add(s),{manipulator:s,material:t}}_removeVertexManipulator(t){this._manipulators.remove(t)}_updateVertexManipulators(){let{viewData:t}=this._analysisViewData,i=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;_t(s,i.length,()=>this._createVertexManipulator(),({manipulator:n})=>this._removeVertexManipulator(n)),s.forEach(({manipulator:n},a)=>{n.metadata=i[a],n.renderLocation=t.positionsRender[a],n.cursor=a===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return A(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){let{lastDraggedVertex:t}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:t!=null?this._analysisViewData.path.getVertexPositionAsPoint(t):this._analysisViewData.path.lastPoint;case"editing":return t!=null?this._analysisViewData.path.getVertexPositionAsPoint(t):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){let t=this._toolState.polygonState!=="measured"&&this._toolState.active,i=this._getFocusPoint();if(t&&i!=null){let s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new G,this._listenerHandles.add([h(()=>this._toolState.polygonState,()=>this._updateLaserLine()),h(()=>this._analysisViewData.viewData,()=>this._updateAll(),j),h(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),h(()=>this._toolState.active,()=>this._updateAll()),h(()=>this._view.effectiveTheme.accentColor,t=>{let i=A(t,.5);for(let{material:d}of this.vertexManipulators)d.setParameters({color:i});this._cursorManipulatorMaterial.setParameters({color:i});let s=O.toUnitRGB(t),n=O.toUnitRGB(F(t)),a=.75*t.a,l=this._laserLine,m=l.style;l.style=z(I({},m),{glowColor:s,innerColor:n,globalAlpha:a})},{initial:!0,equals:W})])}_destroyListeners(){this._listenerHandles=g(this._listenerHandles)}};function _t(e,t,i,s){for(;e.length<t;)e.push(i());for(;e.length>t;)s(e.pop())}var yt=8,wt=8,ft=1,ht=5;var p=class extends Y{constructor(e){super(e),this._updatingHandles=new B,this.polygonState="initial",this.manipulators=new P,this._getSnappingContext=at(t=>new it({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new Q(new J("point",N(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new rt}))}initialize(){let{view:e,analysisViewData:t,manipulators:i,visible:s}=this;this.measurementView=new S({view:e,analysisViewData:t,toolState:this,manipulators:i,visible:s});let n=lt(e);this._snappingManagerResult=n,this.addHandles(n),this._snappingOperation=new st({view:e}),this._updatingHandles.add(()=>this.stagedPoint,a=>{this.analysisViewData.stagedPoint=a!=null?f(a,new w):null},y),ot(this,()=>{let a=this.view.inputManager.latestPointerType??"mouse",l=this._getSnappingContext(a);this._updatingHandles.addPromise(b(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,l)))}),this._setupManipulators(),this.addHandles([h(()=>this.state,a=>{a==="measured"&&this.finishToolCreation()},y),this.analysisViewData.path.on("change",()=>{let a=this.analysisViewData.path;this.polygonState!=="initial"||a.isEmptyPolygon||(a.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=g(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(e){this._snappingOperation.stagedPoint=e}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){let{path:e}=this.analysisViewData;e.numVertices<3?(e.clear(),this.polygonState="initial"):(e.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){let e=i=>i.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){let s=this.manipulators.some(n=>n.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),t=i=>{this.addHandles([Z(i,(s,n,a,l)=>{let m=$(s),d=s.metadata,c=this._snappingManager,dt=this._getSnappingContext(l),mt=this._updatingHandles,{snappingStep:ct,cancelSnapping:gt}=nt({snappingManager:c,snappingContext:dt,updatingHandles:mt});a=a.next(m).next(_=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(d,R),s.location=R,_)).next(gt),n.next(m).next(tt(this.view)).next(...ct).next(_=>{s.location=_.mapEnd,this.analysisViewData.lastDraggedVertex=_.action==="end"?null:d,this.analysisViewData.path.setVertexPosition(d,f(_.mapEnd))});let R=f(this.analysisViewData.path.getVertexPositionAsPoint(d))}),e(i)],i)};this.manipulators.forEach(({manipulator:i})=>{t(i)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:i}})=>{t(i)}),this.manipulators.on("after-remove",({item:{manipulator:i}})=>this.removeHandles(i))])}_handleImmediateDoubleClick(e){C(e)&&(this.polygonState==="drawing"&&this.finishMeasurement(),e.stopPropagation())}_handleDrag(e){this.polygonState==="editing"&&e.stopPropagation()}_handleImmediateClick(e){if(!C(e))return;let t=E(e),{pointerType:i}=e;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(t,i))return this.stagedPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{let s=this.measurementView.vertexHandleAt(t,i);if(s==null){if(this._addVertexAt(t,i))return this.stagedPoint=null,void e.stopPropagation()}else s.index===0&&(this.finishMeasurement(),e.stopPropagation());break}}e.pointerType==="mouse"&&this._hoverAt(t)}_handlePointerMove(e){if(e.pointerType==="mouse"){let t=E(e);this._hoverAt(t)}}_handleKeyDown(e){let{path:t}=this.analysisViewData;e.key==="Enter"&&this.polygonState==="drawing"&&t.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),e.stopPropagation())}_hoverAt(e){let{polygonState:t}=this;if(this.active&&(t==="initial"||t==="drawing")){let i=this._pick(e);if(i?.mapPoint!=null){let s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(b(this._snappingOperation.snap({point:i.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(e,t){let i=this._pick(e);if(i?.mapPoint!=null){let{mapPoint:s}=i,n=this._getSnappingContext(t),a=this._snappingOperation.update({point:s},this._snappingManager,n),l=f(a,new w);return this.analysisViewData.path.add(l),!0}return!1}_pick(e){let t=new M(e);return this.measurementView.pick(t)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};o([r({readOnly:!0})],p.prototype,"state",null),o([r()],p.prototype,"polygonState",void 0),o([r({readOnly:!0})],p.prototype,"cursor",null),o([r()],p.prototype,"measurementView",void 0),o([r({constructOnly:!0})],p.prototype,"view",void 0),o([r({constructOnly:!0})],p.prototype,"analysis",void 0),o([r({constructOnly:!0})],p.prototype,"analysisViewData",void 0),o([r({readOnly:!0})],p.prototype,"manipulators",void 0),o([r()],p.prototype,"updating",null),o([r()],p.prototype,"stagedPoint",null),o([r()],p.prototype,"snappingOptions",null),p=o([v("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],p);var ut=p;var u=class extends pt{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(h(()=>({analysis:this.analysis,unit:this.unit}),({analysis:e,unit:t})=>{e!=null&&(e.unit=t)},y))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null||this.disabled||this.tool.destroyed)return null;let{analysisView:e}=this;if(e==null)return null;let t=e.analysisVisualization,i=t.viewData,s=i.validMeasurement,n=i.mode==="euclidean",a=i.intersectingSegments.size===0,l=a?s?"available":"unavailable":"invalid";return{mode:n?"euclidean":"geodesic",area:{text:a&&s?t.areaLabel:null,state:l},perimeterLength:{text:a&&s?t.perimeterLengthLabel:null,state:l}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null}get unit(){return this._userUnit!=null?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new U}constructTool(){return new ut({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(e,t){let{unitOptions:i}=this;return i.includes(e)?e:t!=null?this._findSelectableUnit(t):i[0]}_filteredOrAllUnits(e){if(e==null)return V.slice();let t=e.filter(i=>V.includes(i));return t.length===0?V.slice():t}};o([r({type:U})],u.prototype,"analysis",void 0),o([r({readOnly:!0})],u.prototype,"state",null),o([r({readOnly:!0})],u.prototype,"measurement",null),o([r()],u.prototype,"unitOptions",null),o([r()],u.prototype,"unit",null),o([r(K)],u.prototype,"defaultUnit",void 0),o([r()],u.prototype,"_userUnit",void 0),u=o([v("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],u);var He=u;export{He as a};
