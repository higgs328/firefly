import{g as S}from"./chunk-GNEAU6X4.js";import{a as w}from"./chunk-5RH7OPHX.js";import{a as p}from"./chunk-XNHRPKJK.js";import{a as y}from"./chunk-3JGYBNJA.js";import{a as d}from"./chunk-CX5IFQZJ.js";import{f as u}from"./chunk-CCJU4DSH.js";import{b as a}from"./chunk-ACP3S2CH.js";import{a as r}from"./chunk-QGVBCWUY.js";import{e as l}from"./chunk-NFIPKH6V.js";import{l as f}from"./chunk-5QEXLALV.js";var t=class extends y.ClonableMixin(u){constructor(e){super(e),this.activeFilterId=null,this.filters=new(a.ofType(p)),this.mode="manual"}writeFilters(e,o,s,v){let m=e.toArray();this.mode==="scale"&&m.sort((i,n)=>{let c=S(n.minScale,i.minScale),x=i.maxScale-n.maxScale;return c===0?x:c}),o[s]=m.map(i=>i.toJSON(v))}write(e,o){return super.write(e,w(this,o))}};r([l({type:String,json:{write:{overridePolicy:(e,o,s)=>({enabled:s.filterMode==="manual",isRequired:!0})}}})],t.prototype,"activeFilterId",void 0),r([l({type:a.ofType(p),nonNullable:!0,json:{write:!0}})],t.prototype,"filters",void 0),r([d("filters")],t.prototype,"writeFilters",null),r([l({type:["manual","scale"],nonNullable:!0,json:{name:"filterMode",write:!0}})],t.prototype,"mode",void 0),t=r([f("esri.layers.support.DisplayFilterInfo")],t);var q=t;export{q as a};
