import{a as Me}from"./chunk-BL36WTGF.js";import{a as we}from"./chunk-AKDISSFR.js";import{b as _e}from"./chunk-C3PNPKWJ.js";import{a as z}from"./chunk-2XCEJBGD.js";import{a as ve}from"./chunk-O6VBCDES.js";import{a as ye}from"./chunk-AMX6AASB.js";import{t as fe}from"./chunk-DT6D5YZT.js";import{a as de}from"./chunk-VCLDFV7F.js";import{a as ge}from"./chunk-CESHMSBL.js";import{a as he,c as ce,d as ue}from"./chunk-XGBN53IG.js";import{b as me}from"./chunk-KVIHP5QH.js";import{a as re}from"./chunk-5KMJDB5T.js";import{b as oe,d as pe,h as le}from"./chunk-6OWZRPJO.js";import{a as ne,c as ae,l as P}from"./chunk-2BJHWKO6.js";import{a as E,c as H,d as k}from"./chunk-CISTQZ5X.js";import{a as x}from"./chunk-7XYYDAZO.js";import{F as te,H as ie,J as se}from"./chunk-3WNFY6Z5.js";import{a as I}from"./chunk-QCZ3ZIGQ.js";import{h as ee,i as U,k as G}from"./chunk-ZM24RY22.js";import{a as D}from"./chunk-LAX5536Z.js";import{a as $}from"./chunk-PMVHHMQJ.js";import{a as R}from"./chunk-CZ6CGC7I.js";import{a as Z}from"./chunk-7B6U3N62.js";import{e as Y}from"./chunk-OK4K3OQT.js";import{a as X}from"./chunk-JQAW4OB5.js";import{f as Q,g as T}from"./chunk-DA3SDKGO.js";import{a as K}from"./chunk-U4QEPZJ3.js";import{c as S}from"./chunk-VIEK2X23.js";import{a as J}from"./chunk-7F5DJLJT.js";import{I as b,L as F}from"./chunk-NJWTSROP.js";import{b as A}from"./chunk-UST6HCE7.js";import{f as W}from"./chunk-WFKZLI6F.js";import{a as d,e as q,j as L,k as N}from"./chunk-TG45K3WR.js";import{a as s}from"./chunk-QGVBCWUY.js";import{e as r}from"./chunk-NFIPKH6V.js";import{l as M}from"./chunk-5QEXLALV.js";import{b as c}from"./chunk-4PTIEWMT.js";import{d as B}from"./chunk-TG2UTNEO.js";import{f as w}from"./chunk-VTHXE323.js";var V=1e5,l=class extends me{constructor(e){super(e),this._measurementLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new x({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new X,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){A("esri/core/t9n/Units").then(t=>{this.messages=t});let e=this.view;this._draw=new ve({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([W(()=>w(this,null,function*(){this.messages=yield A("esri/core/t9n/Units")})),d(()=>[this.unit,this.messages],()=>{this._updatePolylines()},L),d(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;let t=this._vertices.map(({coord:i})=>i);for(let{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})]),fe(this)}destroy(){let{map:e}=this.view;this._draw.view=null,this._draw=c(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=c(this._measurementLayer),this._manipulatorLayer=c(this._manipulatorLayer),this._snappingLayer=c(this._snappingLayer),this._updatingHandles=c(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new ge({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new P(new ae("point",ne(!1,!1,this.view.spatialReference)),I.Local),visualizer:new de(this._snappingLayer)})}_resetVertices(){for(let{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;let{snappingManager:e}=this,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],i=>this._updateSketch(i.vertices)),t.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){let{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){let{handle:a,manipulator:u}=this._vertices.pop();a.remove(),this.manipulators.remove(u)}for(let a=this._vertices.length;a<e.length;a++){let[u,g]=e[a],f=new S({x:u,y:g,spatialReference:t}),O=Te(f,this.view,this._manipulatorLayer);this.manipulators.add(O);let v=P.fromGeometry(f,I.Local),Se=[v.on("vertex-update",_=>{let y=_.vertices.at(0);y&&(this._vertices[a].coord=[y.pos[0],y.pos[1]],this._updatePolylines())}),he(O,(_,y,Ge,De)=>{let xe=this._getSnappingContext(De),{snappingManager:Oe}=this,Ce=this._updatingHandles,{snappingStep:Ae}=ye({snappingContext:xe,snappingManager:Oe,updatingHandles:Ce});y.next(ue(this.view)).next(C=>{if(C.action==="start"){let j=new S(C.mapStart);_.graphic.geometry=j,v.trySetGeometry(j)}return C}).next(...Ae).next(ce({operations:v})).next(()=>{_.graphic.geometry=v.data.geometry})})];this._vertices.push({manipulator:O,coord:[u,g],handle:B(Se)})}let i=this._vertices.length-1,n=this._vertices[i],[o,p]=e[i];n.coord[0]===o&&n.coord[1]===p||(n.coord=[o,p],n.manipulator.graphic.geometry=new S({x:o,y:p,spatialReference:t}));let m=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:a})=>{a.interactive=m==null||a!==m}),this._updatePolylines()}_updatePolylines(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();let e=this._vertices.map(({coord:f})=>f),{measurement:t,drawing:i,original:n}=Re(e,this.view.spatialReference);this._set("measurement",t);let o=Ue(this.messages,t,this.unit),p,m;this._set("measurementLabel",o);let{graphics:a}=this._measurementLayer,u=a.length===2,{effectiveTheme:g}=this.view;u?(p=a.at(0),m=a.at(1)):(p=new D({symbol:new $({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:U(g.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:g.accentColor.toArray()}]}}})}),m=new D({symbol:new Z({color:g.textColor,haloColor:G(U(g.textColor,ee.Low),.5),haloSize:2,font:new Y({size:14,family:"sans-serif"})})}),a.removeAll(),a.addMany([p,m])),p.geometry=i,m.geometry=n.extent?.center,m.symbol.text=o}};function Te(e,t,i){let n=G(t.effectiveTheme.accentColor,.5),o={type:"simple-line",width:0},p=8,m=new R({style:"circle",color:n,size:p,outline:o}),a=new R({style:"circle",color:n,size:1.5*p,outline:o}),u=new D({geometry:e,symbol:m});return new _e({view:t,layer:i,graphic:u,focusedSymbol:a})}function Re(e,t){let i=new K({paths:[e],spatialReference:t}),n,o;if(t.isGeographic)if(E(t))n=H([i],"meters")[0],o=k(i,V);else{let p=T(i,J.WGS84),m=k(p,V);n=H([p],"meters")[0],o=T(m,t)}else t.isWebMercator?(n=se(i,"meters"),o=te(i,V,"meters")):(n=ie(i,"meters"),o=i);return{measurement:{geometry:o,length:n},original:i,drawing:o}}function Le(e){return e!=null}function be(e){if(!e)return!1;let{isGeographic:t,isWebMercator:i,isWGS84:n}=e;return t&&!n&&!E(e)||!t&&!i}function Ue(e,t,i){if(!t||!e)return"";switch(i){case"metric":return pe(e,t.length,"meters");case"imperial":return le(e,t.length,"meters");default:return oe(e,F(t.length,"meters",i),i)}}s([r()],l.prototype,"_drawActive",void 0),s([r({readOnly:!0})],l.prototype,"cursor",null),s([r({value:!0})],l.prototype,"editable",null),s([r({readOnly:!0})],l.prototype,"measurement",void 0),s([r({readOnly:!0})],l.prototype,"measurementLabel",void 0),s([r()],l.prototype,"messages",void 0),s([r({constructOnly:!0})],l.prototype,"snappingManager",void 0),s([r()],l.prototype,"unit",void 0),s([r()],l.prototype,"updating",null),s([r({constructOnly:!0})],l.prototype,"view",void 0),l=s([M("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],l);var h=class extends Me{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this._snappingManager=null,this.snappingOptions=new z}initialize(){this.addHandles([d(()=>this.view?.spatialReference,()=>this.clear()),d(()=>this.unit,e=>{this.tool&&(this.tool.unit=e)},L),d(()=>this.view,e=>{this._snappingManager=c(this._snappingManager),e&&(this._snappingManager=new we({view:e,options:this.snappingOptions}))},N),d(()=>this.snappingOptions,e=>{this._snappingManager&&e&&(this._snappingManager.options=e)})])}destroy(){this._snappingManager=c(this._snappingManager)}get measurement(){return this.tool?.measurement??null}get measurementLabel(){return this.tool?.measurementLabel??null}get state(){return this.disabled||this.view==null||!Le(this.view?.spatialReference)?"disabled":this.tool!=null&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return b}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}start(){return w(this,null,function*(){let e=this.view;e!=null&&(yield q(()=>e.ready),be(e.spatialReference)&&(yield Q())),this.createTool({interactive:!0})})}clear(){this.removeTool()}constructTool(){return new l({snappingManager:this._snappingManager,unit:this.unit,view:this.view,visible:this.visible})}_validateUnit(e){let{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];let t=e.filter(i=>b.includes(i));return t.length===0?b.slice():t}};s([r()],h.prototype,"_snappingManager",void 0),s([r(re)],h.prototype,"defaultUnit",void 0),s([r({readOnly:!0})],h.prototype,"measurement",null),s([r({readOnly:!0})],h.prototype,"measurementLabel",null),s([r({type:z,nonNullable:!0})],h.prototype,"snappingOptions",void 0),s([r({readOnly:!0})],h.prototype,"state",null),s([r({type:String})],h.prototype,"unit",null),s([r({type:[String]})],h.prototype,"unitOptions",null),h=s([M("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],h);var Pt=h;export{Pt as a};
