import{b}from"./chunk-TUF2Y2FX.js";import{a as r}from"./chunk-4QHB56M5.js";import{b as w}from"./chunk-PBAMEKFE.js";import{a as v}from"./chunk-2SXWYVJN.js";import{a as i}from"./chunk-J2AEVBSH.js";import{a,b as f}from"./chunk-JXPUHKCT.js";import{a as u}from"./chunk-DO7UF2F2.js";import{a as y}from"./chunk-3JGYBNJA.js";import{a as d}from"./chunk-CX5IFQZJ.js";import{f as m}from"./chunk-CCJU4DSH.js";import{a as t}from"./chunk-QGVBCWUY.js";import{e as o}from"./chunk-NFIPKH6V.js";import{l}from"./chunk-5QEXLALV.js";import{c as n}from"./chunk-6MRUJ2UW.js";var e=class extends y.ClonableMixin(m){constructor(p){super(p),this.enabled=!0,this.fields=[],this.latestObservations=new r({renderer:new i({symbol:a.clone()})}),this.maxDisplayDuration=null,this.maxDisplayObservationsPerTrack=0,this.popupEnabled=!0,this.popupTemplate=null,this.previousObservations=new r({renderer:new i({symbol:a.clone()})}),this.trackLines=new r({renderer:new i({symbol:f.clone()})}),this.timeField="startTimeField"}writeFields(p,c,h){let j=p.filter(s=>s.statisticType!=="avg_angle").map(s=>s.toJSON());n(h,j,c)}};t([o({type:Boolean,json:{write:!0}})],e.prototype,"enabled",void 0),t([o({type:[v],json:{write:!0}})],e.prototype,"fields",void 0),t([d("fields")],e.prototype,"writeFields",null),t([o({type:r,json:{write:!0}})],e.prototype,"latestObservations",void 0),t([o({type:b,json:{write:!0}})],e.prototype,"maxDisplayDuration",void 0),t([o({type:Number,json:{write:!0}})],e.prototype,"maxDisplayObservationsPerTrack",void 0),t([o(w)],e.prototype,"popupEnabled",void 0),t([o({type:u,json:{name:"popupInfo",write:!0}})],e.prototype,"popupTemplate",void 0),t([o({type:r,json:{write:!0}})],e.prototype,"previousObservations",void 0),t([o({type:r,json:{write:!0}})],e.prototype,"trackLines",void 0),t([o({type:["timeReceived","startTimeField","endTimeField"],json:{read:!0,write:!0}})],e.prototype,"timeField",void 0),e=t([l("esri.layers.support.TrackInfo")],e);var M=e;export{M as a};
